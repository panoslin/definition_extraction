<?xml version="1.0" encoding="UTF-8"?>
	<volume id="W90">

		<paper id="0118">
			<definition id="0">
				<sentence>Our notion of perspective is a composite of distinctions made by Falkenhainer &amp; Forbus ( submitted ) , Stevens &amp; Collins ( 1980 ) Stevens &amp; Steinberg ( 1981 ) and White &amp; Frederiksen ( 1989 ) .</sentence>
				<definiendum id="0">perspective</definiendum>
				<definiens id="0">a composite of distinctions made by Falkenhainer &amp; Forbus ( submitted )</definiens>
			</definition>
			<definition id="1">
				<sentence>The explanation is an edited version of a human protocol .</sentence>
				<definiendum id="0">explanation</definiendum>
				<definiens id="0">an edited version of a human protocol</definiens>
			</definition>
			<definition id="2">
				<sentence>Rhetorical abstractions are descriptive of explanatory tezt , i.e. the end product of some expla138 nation generation process , and so describe with one device structure due to a variety of distinct knowledge sources bearing on such a process .</sentence>
				<definiendum id="0">Rhetorical abstractions</definiendum>
				<definiens id="0">descriptive of explanatory tezt</definiens>
			</definition>
			<definition id="3">
				<sentence>Adequacy constraints come from examination of the informative goals ( McKeown et al. 1985 ) .</sentence>
				<definiendum id="0">Adequacy constraints</definiendum>
				<definiens id="0">come from examination of the informative goals ( McKeown et al. 1985 )</definiens>
			</definition>
			<definition id="4">
				<sentence>A principled match of distinct computational mechanisms to each subtask of the 140 ( Query ) -- &gt; Identify } V Refine &lt; ... . t v Retrieve f V Modify ... .. t V Order -- &gt; ( Realize ) Figure 2 : Content planning tasks explanation planning t &amp; sk is one way to express one 's theory of what kind of process explanation is .</sentence>
				<definiendum id="0">sk</definiendum>
				<definiens id="0">Query ) -- &gt; Identify } V Refine &lt; ... . t v Retrieve f V Modify ... .. t V Order -- &gt;</definiens>
			</definition>
</paper>

		<paper id="0122">
			<definition id="0">
				<sentence>So far as I am aware , the only generative model prior to ours that attempts to generate intonation that is motivated semanticaIly and discoursaIly is the impressive work of hard , Houghton , Pearson and their colleagues at Sussex ( Houghton and hard 1987 ) and Houghton and Pearson 1988 ) .</sentence>
				<definiendum id="0">discoursaIly</definiendum>
				<definiens id="0">the impressive work of hard , Houghton , Pearson and their colleagues at Sussex</definiens>
			</definition>
			<definition id="1">
				<sentence>on knowledge of ... where appropriate sub-units such as transactions ( see below ) and more detailed plans , using ... 4 , the local discourse grammar , which is modelled as a 'systemic flowchart ' ( i.e. a flowchart containing many small system networks at the choice points , and which generates exchanges and their structure ) , consisting of : 164 a. the system networks of semantic features for a wide variety of types of mea- ; -g related to situations and realized in the clause , including theme and information structure as well as transitivity , mood , negativity , modallty , affeetive meaning and logical relationships , and equivalent system networks for thiage and qualities , and b. the realization rules which turn the selection expressions of features that are the output from passes through the system networks into syntactic structures with Items ( grammatical and lexical ) and markers of punctuaUou or intonation as their term ; hal nodes .</sentence>
				<definiendum id="0">local discourse grammar</definiendum>
				<definiens id="0">transitivity , mood , negativity , modallty , affeetive meaning and logical relationships , and equivalent system networks for thiage and qualities</definiens>
			</definition>
			<definition id="2">
				<sentence>In an intermediate level model ( such as Prototype Generator 2 ( PG2 ) , which is the most advanced version of GENESYS currently implemented ) we need only relatively simple rules such as the following : if fills 'Z ' and on first p~ spoken and ( simplex sit or\ ] inal~co~ , rdinated situation ) then '2- ' by 'NT .</sentence>
				<definiendum id="0">intermediate level model</definiendum>
				<definiens id="0">the most advanced version of GENESYS currently implemented</definiens>
			</definition>
			<definition id="3">
				<sentence>Thus , when GENESYS generates co-ordinated clauses ( realizing co-ordinated sltuatione ) such as `` Either Ivy loves Ike , or she loves Fred , or she does n't love anybody . '</sentence>
				<definiendum id="0">GENESYS</definiendum>
				<definiens id="0">generates co-ordinated clauses ( realizing co-ordinated sltuatione ) such as `` Either Ivy loves Ike , or she loves Fred , or she does n't love anybody</definiens>
			</definition>
			<definition id="4">
				<sentence>Appendix 1 COMMUNAL is a major research project that applies and develops Systemic Functional Grammar ( SFG ) in a very large , fully working computer program .</sentence>
				<definiendum id="0">COMMUNAL</definiendum>
				<definiens id="0">a major research project that applies and develops Systemic Functional Grammar ( SFG ) in a very large , fully working computer program</definiens>
			</definition>
</paper>

		<paper id="0102">
			<definition id="0">
				<sentence>Its semantic representation follows the decomposition of the sentence into its elementary TAG trees-corresponding ( roughly ) to `` How many ships ... it attacked '' , `` did Reuters report that ... '' , `` Iraq had said ... '' .</sentence>
				<definiendum id="0">semantic representation</definiendum>
				<definiens id="0">follows the decomposition of the sentence into its elementary TAG trees-corresponding ( roughly ) to `` How many ships ... it attacked '' , `` did Reuters report that ... '' , `` Iraq had said ... ''</definiens>
			</definition>
			<definition id="1">
				<sentence>First , a synchronous TAG characterizes a relation between languages .</sentence>
				<definiendum id="0">synchronous TAG</definiendum>
			</definition>
			<definition id="2">
				<sentence>The distinction between parsing and generation is a purely informal one depending merely on which side of the relation one chooses to compute from ; both are instances of a process of translating between two TAG languages appropriately synchronized .</sentence>
				<definiendum id="0">generation</definiendum>
				<definiens id="0">a process of translating between two TAG languages appropriately synchronized</definiens>
			</definition>
			<definition id="3">
				<sentence>In the case of generation , the source string is a semantic representation , the target is a natural-language realization .</sentence>
				<definiendum id="0">source string</definiendum>
				<definiens id="0">a natural-language realization</definiens>
			</definition>
</paper>

		<paper id="0116">
			<definition id="0">
				<sentence>The knowledge base is a semantic net that encodes the objects , properties , and relations of a domain .</sentence>
				<definiendum id="0">knowledge base</definiendum>
				<definiens id="0">a semantic net that encodes the objects , properties , and relations of a domain</definiens>
			</definition>
			<definition id="1">
				<sentence>clrcular-sweep is an example : it combines a number of sweep strategies ( sweep-left , sweep-right , and sweep-under ) , and includes additional orientation strategies to orient hearers between sweeps , kltty-corner is a metastrategy that is used to describe s room in which the most salient feature is diagonally opposite the current location .</sentence>
				<definiendum id="0">clrcular-sweep</definiendum>
				<definiendum id="1">kltty-corner</definiendum>
				<definiens id="0">a metastrategy that is used to describe s room in which the most salient feature is diagonally opposite the current location</definiens>
			</definition>
			<definition id="2">
				<sentence>F30602-85-C-0008 , as part of the Northeast Artificial Intelligence Consortium ( NAIC ) .</sentence>
				<definiendum id="0">F30602-85-C-0008</definiendum>
			</definition>
			<definition id="3">
				<sentence>Laird , J. , A. Newell , and P. Rosenbloom , `` Soar : An Architecture for General Intelligence . ''</sentence>
				<definiendum id="0">Soar</definiendum>
			</definition>
			<definition id="4">
				<sentence>Meteer ( Vanghan ) , M. and D. McDonald , `` A Model of Revision in Natural Language Generation .</sentence>
				<definiendum id="0">Meteer</definiendum>
				<definiens id="0">A Model of Revision in Natural Language Generation</definiens>
			</definition>
</paper>

		<paper id="0106">
			<definition id="0">
				<sentence>Hypothesis refinement : make changes in hypothesis , annotation , or both and retest against the same data ; extend analysis by tesdng against different data .</sentence>
				<definiendum id="0">Hypothesis refinement</definiendum>
				<definiens id="0">make changes in hypothesis , annotation , or both and retest against the same data</definiens>
			</definition>
</paper>

		<paper id="0101">
			<definition id="0">
				<sentence>A systemic functional grammar consists of networks of grammatical choice alternatives , where individual networks are concerned with one of the metafunctional domains .</sentence>
				<definiendum id="0">systemic functional grammar</definiendum>
				<definiens id="0">consists of networks of grammatical choice alternatives , where individual networks are concerned with one of the metafunctional domains</definiens>
			</definition>
			<definition id="1">
				<sentence>According to \ [ Matthiessen &amp; Kasper 1985\ ] the realization operators used in a systemic network can be viewed along three dimensions : ( 1 ) Structuring ( which defines the structure and its organization within one rank and within one functional domain ) , ( 2 ) Rank ( which `` organizes the grammar into a scale of units : clausegroup/phrase word morpheme '' \ [ Matthiessen &amp; Kasper 1985 , p. 25\ ] ) , and ( 3 ) Metafunctional layering ( which integrates the structures developed within the various metafunctional domains ( e.g. , interpersonal , ideational , and textual ) ) .</sentence>
				<definiendum id="0">Structuring</definiendum>
				<definiens id="0">defines the structure and its organization within one rank and within one functional domain )</definiens>
			</definition>
			<definition id="2">
				<sentence>Nigel : A systemic grammar for text generation .</sentence>
				<definiendum id="0">Nigel</definiendum>
				<definiens id="0">A systemic grammar for text generation</definiens>
			</definition>
</paper>

		<paper id="0117">
			<definition id="0">
				<sentence>ELABORATION relations hold between entities and their immediate constituents or properties , and have a definitional flavor ; ENHANCEMENT relations hold between entities and their circumstances of place , time , manner , etc. ; and EXTENSION relations hold between entities and more distant entities such as causes , followups , contrasts , etc .</sentence>
				<definiendum id="0">ELABORATION relations</definiendum>
				<definiendum id="1">ENHANCEMENT relations</definiendum>
				<definiendum id="2">EXTENSION</definiendum>
				<definiens id="0">hold between entities and their circumstances of place , time , manner , etc.</definiens>
			</definition>
			<definition id="1">
				<sentence>Elaboration : MT , JH , JG , MP , GH , BF , KD , DSN , QG , MH Identification : KM , JG , HS , MP , KD , AC , MM , QG , ST , RJ ElabObject : ObjectAttribute : MT , HI , HL , KM , LP , JG , MP , MM , MH ObjectFunction : HL , KM , MP ElabPart : SetMember : MT , KM , JG ProcessStep : MT , HP , HI , MP , DL WholePart : MT , HI , HL , KM , JG , MP , AC , DL ElabGenerality : GeneralSpecific : MT , HP , JH , KM , JG , TNR , HS , MP , KD , AC , NS , RC , QG , MH AbstractInstance : MT , HP , JH , KM , LP , TNR , JG , HS , MP , MM , RC , QG , MH Interpretation : MT , KD Evaluation ( S opinion ) : MT , KD , JH Restatement : MT , KM , KD , DSN , NS , RR , RC , QG , MH Summary ( short restatement ) : MT , DSN , RC , QG Conclusion ( interp at end ) : KM , JG , HS , KD , RR , RC , QG Enhancement : MH Circumstance : MT , JG , DSN , QG Location : HI , HL , KD , QG , RJ , MH Time : HI , HL , TNR , KD , QG , RJ , MH Means : MP , QG , ST , MH Manner : QG , MH Instrument : QG ParalleIEvent : KD , QG , RJ Background : MT , JH , HL , MP Sohitionhood ( general prob ) : MT Answer ( numeric prob ) : KM Extension : MH Sequence : MT , JH , LP , KD , DSN , RC SeqTemporah HI , HP , LP , DL , NS , MH SeqSpatiah NS SeqOrdinah LP , DSN , QG Cause/Result : JH , KM , TNR , JG , GH , KD , LP , RL , RR , RC , QG , R J , SA , MH C/RVol ( volitional ) : VolCause : MT VolResult : MT C/RNonvol ( nonvolitionM ) : NonVolCause : MT NonVolResult : MT , MP Purpose : MT , HP , KD , QG , SA , MH Enablement : MT , JH , HL , TNR , MP , KD , DSN , DL , SA GeneralCondition : Condition : MT , JG , LP , RL , DL , RC , MH Exception : RL , MH Comparative : Equative ( like , while ) : JG , TNR , DL , QG , MH Contrast : MT , JH , LP , IR , TNR , MP , RL , GH , BF , KD , NS , DSN , RC , QG Antithesis : MT , DSN , JG , HS , KM , QG Otherwise ( if then else ) : MT , LP , NS , RL , RC , QG , MH Comparison : KM , HS , MH Analogy : KM , JG , MP , RR Exhortation : Support : RR , RC Evidence ( support claim ) : MT , KM , JG , MP , BF , KD , ST Proof : MP Justification ( for S act ) : MT , IR , DL Motivation ( for H act ) : MT , MP , DSN , DL , MM Concession : MT , DSN , KD , RR , QG , MH Qualification : ST LogicalRelation : Conjunction ( Join , and ) : MT , DSN , RC , QG , MH Disjunction : QG , MH ( Note : Some of the relations of QG and RJ are intraclausal . )</sentence>
				<definiendum id="0">ST</definiendum>
				<definiendum id="1">MP Sohitionhood</definiendum>
				<definiendum id="2">DL Motivation</definiendum>
				<definiens id="0">MT , JH , JG , MP , GH , BF , KD , DSN , QG , MH Identification : KM , JG , HS , MP , KD , AC , MM , QG ,</definiens>
				<definiens id="1">MT , HI , HL , KM , LP , JG , MP , MM , MH ObjectFunction : HL , KM , MP ElabPart : SetMember : MT , KM , JG ProcessStep : MT , HP , HI , MP , DL WholePart : MT , HI , HL , KM , JG , MP , AC , DL ElabGenerality : GeneralSpecific : MT , HP , JH , KM , JG , TNR , HS , MP , KD , AC , NS , RC , QG , MH AbstractInstance : MT , HP , JH , KM , LP , TNR , JG , HS , MP , MM , RC , QG , MH Interpretation : MT , KD Evaluation ( S opinion ) : MT , KD , JH Restatement : MT , KM , KD , DSN , NS , RR , RC , QG , MH Summary ( short restatement ) : MT , DSN , RC</definiens>
				<definiens id="2">general prob ) : MT Answer ( numeric prob ) : KM Extension : MH Sequence : MT , JH , LP , KD , DSN , RC SeqTemporah HI , HP , LP , DL , NS , MH SeqSpatiah NS SeqOrdinah LP , DSN , QG Cause/Result : JH , KM , TNR , JG , GH , KD , LP , RL , RR , RC , QG , R J , SA , MH C/RVol ( volitional ) : VolCause : MT VolResult : MT C/RNonvol ( nonvolitionM ) : NonVolCause : MT NonVolResult : MT , MP Purpose : MT , HP , KD , QG , SA , MH Enablement : MT , JH , HL , TNR , MP , KD , DSN , DL , SA GeneralCondition : Condition : MT , JG , LP , RL , DL , RC</definiens>
			</definition>
</paper>

		<paper id="0113">
			<definition id="0">
				<sentence>I'his paper describes GENIE , an object-oriented architecture that generates text with the intent of extending user expertise in interactive environments .</sentence>
				<definiendum id="0">object-oriented architecture</definiendum>
				<definiens id="0">generates text with the intent of extending user expertise in interactive environments</definiens>
			</definition>
			<definition id="1">
				<sentence>Interactive environments can be characterized as computational tools that allow users to accomplish tasks .</sentence>
				<definiendum id="0">Interactive environments</definiendum>
				<definiens id="0">computational tools that allow users to accomplish tasks</definiens>
			</definition>
			<definition id="2">
				<sentence>Intentional Objects allow GENIE tO construct and analyze plans , and include computational goals , plans to satisfy them , and actions ( which contain commands as a subclass ) .</sentence>
				<definiendum id="0">Intentional Objects</definiendum>
				<definiens id="0">allow GENIE tO construct and analyze plans , and include computational goals , plans to satisfy them , and actions ( which contain commands as a subclass )</definiens>
			</definition>
			<definition id="3">
				<sentence>Providing an answer involves understanding the user 's question in a situational context by instantiating a set of domain objects , generating the set of objects ( domain goals , plans , actions , effects ) that are expected in reply , and selecting the discourse objects that talk about those objects .</sentence>
				<definiendum id="0">Providing an answer</definiendum>
				<definiens id="0">generating the set of objects ( domain goals , plans , actions , effects ) that are expected in reply , and selecting the discourse objects that talk about those objects</definiens>
			</definition>
</paper>

		<paper id="0108">
</paper>

		<paper id="0114">
			<definition id="0">
				<sentence>George is an extension of the MACH-HI intelligent tutoring system \ [ KGM90\ ] that uses the expert system knowledge base to choose the appropriate underlying text structure along with the knowledge to be presented in the text , rather than have the text generator try to build the underlying structure when presented with only the pieces of knowledge to be conveyed .</sentence>
				<definiendum id="0">George</definiendum>
				<definiens id="0">an extension of the MACH-HI intelligent tutoring system \ [ KGM90\ ] that uses the expert system knowledge base to choose the appropriate underlying text structure along with the knowledge to be presented in the text</definiens>
			</definition>
			<definition id="1">
				<sentence>RST is a formalism for specifying the relationships between pieces of text .</sentence>
				<definiendum id="0">RST</definiendum>
				<definiens id="0">a formalism for specifying the relationships between pieces of text</definiens>
			</definition>
			<definition id="2">
				<sentence>Functional Hierarchy Functional Hierarchy is a new paradigm for organizing expert system knowledge bases , based on the procedural abstraction principles of Liskov and Guttag \ [ LG86\ ] .</sentence>
				<definiendum id="0">Functional Hierarchy Functional Hierarchy</definiendum>
			</definition>
			<definition id="3">
				<sentence>The root node of this tree , labelled LO LAMP , defines how to determine why the IX ) Lamp is lit , indicating a `` local oscillator fault .</sentence>
				<definiendum id="0">LO LAMP</definiendum>
				<definiens id="0">defines how to determine why the IX ) Lamp is lit</definiens>
			</definition>
			<definition id="4">
				<sentence>According to the tree , isolating the LO fault is done by checking for an LO malfunction ( the left child of the LO LAMP node ) , and checking to see if the LO function is being monitored correctly ( the right child of the LO LAMP node ) .</sentence>
				<definiendum id="0">LO malfunction</definiendum>
				<definiens id="0">the right child of the LO LAMP node )</definiens>
			</definition>
			<definition id="5">
				<sentence>Continuing our example , checking for an LO malfunction ( the MALFUNCTIONING LO node in the tree ) consists of checking LO inputs ( the left child ) and checking the LO itself ( the right child ) .</sentence>
				<definiendum id="0">LO malfunction</definiendum>
				<definiendum id="1">MALFUNCTIONING LO node</definiendum>
				<definiens id="0">the left child</definiens>
			</definition>
			<definition id="6">
				<sentence>The CHECK LO INPUTS node , defining how to check LO inputs , has three children , and so checking LO inputs consists of three steps : checking the LO power cable Wl , checking the LO plug P12J3 , and checking the RF signal input cable W6 .</sentence>
				<definiendum id="0">CHECK LO INPUTS node</definiendum>
			</definition>
			<definition id="7">
				<sentence>For example , the following is a typical message actually generated by MACH-III to report an action judged to be `` skipping around '' : Checking the W4 Pl P2J3 is a reasonable step since it is part of checking RCVR RF inputs .</sentence>
				<definiendum id="0">Pl P2J3</definiendum>
			</definition>
</paper>

		<paper id="0105">
			<definition id="0">
				<sentence>For instance , tor a noun N-denoting an action , the LF Opera specifies a verb ( ... ) which takes as its grammatical subject the name of the agent of the said action and as its direct object , the lexeme N itself .</sentence>
				<definiendum id="0">LF Opera</definiendum>
				<definiens id="0">specifies a verb ( ... ) which takes as its grammatical subject the name of the agent of the said action and as its direct object</definiens>
			</definition>
			<definition id="1">
				<sentence>In the sense of Mel'~uk , abstract situations are defined by key terms and the participants of the situations ; the key term is designated by the LF So , the participants as Si ( i-th participant of the situation ) .</sentence>
				<definiendum id="0">abstract situations</definiendum>
				<definiens id="0">key terms and the participants of the situations ; the key term is designated by the LF So , the participants as Si ( i-th participant of the situation )</definiens>
			</definition>
			<definition id="2">
				<sentence>For example : Func , which has the effect of attributing salience to the term labeling the situation ; Oper , which has the effect of attributing salience to one of the participants ; and Labor which has the effect of attributing salience to a combination of the participants .</sentence>
				<definiendum id="0">Oper</definiendum>
				<definiens id="0">has the effect of attributing salience to the term labeling the situation ;</definiens>
			</definition>
			<definition id="3">
				<sentence>Similarly , Func0 makes the key term of the situation itself salient , while Func : introduces the situation with particular respect to the first participant : Func0 ( problem ) = exist , FUnCl ( problem ) = come \ [ from\ ] .</sentence>
				<definiendum id="0">Func0</definiendum>
				<definiens id="0">makes the key term of the situation itself salient</definiens>
			</definition>
			<definition id="4">
				<sentence>Finally , the third option in the SITUATIONAL ORIENTATION system , 'process orientation ' is responsible for the neutral LF V0 , which provides the most direct lexical verb for realizing the key term of a situation ; e.g. , Vo ( i.lzuence ) = \ [ to\ ] influence .</sentence>
				<definiendum id="0">LF V0</definiendum>
				<definiens id="0">provides the most direct lexical verb for realizing the key term of a situation</definiens>
			</definition>
			<definition id="5">
				<sentence>Causality Situations can also be expressed so as to make the causality relationships that the situation enters into explicit or not ; these options are considered by the choice point CAUSALITY ORIENTATION , which is responsible for application of either the LF Caus or Perm .</sentence>
				<definiendum id="0">Causality Situations</definiendum>
				<definiendum id="1">CAUSALITY ORIENTATION</definiendum>
			</definition>
			<definition id="6">
				<sentence>• Perm presupposes a 'permission ' , or allowance or acceptance , of the occurrence of the situation ; e.g. , PermPunco ( problem ) = tolerate .</sentence>
				<definiendum id="0">Perm</definiendum>
				<definiendum id="1">e.g. , PermPunco</definiendum>
				<definiens id="0">presupposes a 'permission ' , or allowance or acceptance , of the occurrence of the situation ;</definiens>
			</definition>
			<definition id="7">
				<sentence>PENMAN accepts demands for text to be generated in the notation of the PENMAN Sentence Plan Language ( SPL ) \ [ Kasper , 1989a\ ] .</sentence>
				<definiendum id="0">PENMAN</definiendum>
				<definiens id="0">accepts demands for text to be generated in the notation of the PENMAN Sentence Plan Language</definiens>
			</definition>
			<definition id="8">
				<sentence>SPL specifications are partial semantic representations of what is to be realized through the grammatical resources of NIGEL .</sentence>
				<definiendum id="0">SPL specifications</definiendum>
				<definiens id="0">partial semantic representations of what is to be realized through the grammatical resources of NIGEL</definiens>
			</definition>
			<definition id="9">
				<sentence>/ thing ) : manner ( deep / sense-and-measure-quality ) ) ) ) SPL specification for sentence ( 1 ) ( r / reader ) : means N1 : actee AI ) SPL specification for sentence ( 4 ) : actor ee : actee AS1 : means NI ) SPL specification for sentence ( 6 ) : actor we : actee A1 : means N1 ) SPL specification for sentence ( 7 ) Figure 2 : SPL specifications for differing perspectives on a situation This set of features governs the selection of the LF V0 , which is applied to the key-term of the situation , i.e. , to So of the input form : the lexeme associated with the DK concept use .</sentence>
				<definiendum id="0">LF V0</definiendum>
				<definiens id="0">means N1 : actee AI ) SPL specification for sentence ( 4 ) : actor ee : actee AS1 : means NI ) SPL specification for sentence ( 6 ) : actor we</definiens>
			</definition>
</paper>

		<paper id="0121">
			<definition id="0">
				<sentence>The DE of a c-node is a function of the DEs and MBs of its constituent nodes and links , respectively .</sentence>
				<definiendum id="0">DE of a c-node</definiendum>
				<definiens id="0">a function of the DEs and MBs of its constituent nodes and links , respectively</definiens>
			</definition>
			<definition id="1">
				<sentence>Propagation of a Message Propagation simulates the alterations taking effect in a network representing a listener 's beliefs due to inferences drawn from a message .</sentence>
				<definiendum id="0">Message Propagation</definiendum>
				<definiens id="0">simulates the alterations taking effect in a network representing a listener 's beliefs due to inferences drawn from a message</definiens>
			</definition>
			<definition id="2">
				<sentence>Finally , an Insignificant Change in a listener 's knowledge status occurs when an inference accomptishes a rather inconsequential change with respect to a previously non-existent link or with respect to a link No impairment ( NI ) Q Confusion ( C ) Q Mislearning ( ML ) Q Insufficient Learning ( IL ) Q Insignificant Change ( IC ) Fig .</sentence>
				<definiendum id="0">Insignificant Change</definiendum>
			</definition>
			<definition id="3">
				<sentence>The most succinct realization of both Peripheral RDs is the sentence `` You can always simplify bracketed Like Terms . ''</sentence>
				<definiendum id="0">most succinct realization of both Peripheral RDs</definiendum>
			</definition>
			<definition id="4">
				<sentence>However , the Revision of the previous belief may appear either before or after the above Contradiction and include a Meta Comment which states the source of this belief , e.g. , `` As we saw in Section 7 , you can always simplify bracketed Like Terms '' ; while the Contradiction of the erroneous inference would usually appear after the above Contradiction and would be accompanied by a Meta Comment which indicates a violation of an expectation established by the inference , e.g. , `` Bracket simplification does not always apply to algebraic terms , but it always applies to Like Terms . ''</sentence>
				<definiendum id="0">Meta Comment</definiendum>
				<definiendum id="1">Meta Comment</definiendum>
				<definiendum id="2">Bracket simplification</definiendum>
				<definiens id="0">indicates a violation of an expectation established by the inference</definiens>
				<definiens id="1">does not always apply to algebraic terms</definiens>
			</definition>
			<definition id="5">
				<sentence>If this is the case , Recognition returns a triple ( T , S , L ) , where T contains the Type of the impairment , S its Strength , and L indicates whether the belief represented by the link in question is correct or incorrect .</sentence>
				<definiendum id="0">T</definiendum>
				<definiendum id="1">L</definiendum>
				<definiens id="0">contains the Type of the impairment</definiens>
			</definition>
</paper>

		<paper id="0109">
			<definition id="0">
				<sentence>I present a representational level , the Text Structure , which is defined in these abstract linguistic terms and which mediates and constrains the commitments of a text planner to ensure that the utterance being planned will be expressible in language .</sentence>
				<definiendum id="0">Text Structure</definiendum>
				<definiens id="0">the utterance being planned will be expressible in language</definiens>
			</definition>
			<definition id="1">
				<sentence>The notion of a semantic category used here was initially influenced by the work of Jackendoff ( 1983 ) who makes the following claim about the relationship between language structure and meaning : Each contentful major syntactic constituent of a sentence maps into a conceptual constituent in the meaning of the sentence .</sentence>
				<definiendum id="0">meaning</definiendum>
				<definiens id="0">Each contentful major syntactic constituent of a sentence maps into a conceptual constituent in the meaning of the sentence</definiens>
			</definition>
			<definition id="2">
				<sentence>Text Structure is a tree in which each node represents a constituent in the utterance being planned .</sentence>
				<definiendum id="0">Text Structure</definiendum>
			</definition>
			<definition id="3">
				<sentence>Text Structure represents the following information : Constituency : The nodes in the Text Structure tree reflect the constituency of the utterance .</sentence>
				<definiendum id="0">Text Structure</definiendum>
				<definiens id="0">The nodes in the Text Structure tree reflect the constituency of the utterance</definiens>
			</definition>
			<definition id="4">
				<sentence>Unwieldy constructs borrowed from mathematics and logic are out of place in domains where the basic concepts are still highly approximative .</sentence>
				<definiendum id="0">Unwieldy constructs</definiendum>
				<definiens id="0">borrowed from mathematics and logic are out of place in domains where the basic concepts are still highly approximative</definiens>
			</definition>
</paper>

		<paper id="0124">
</paper>

		<paper id="0120">
			<definition id="0">
				<sentence>TAMERLAN is a frame-based representation language for representing text meanings .</sentence>
				<definiendum id="0">TAMERLAN</definiendum>
				<definiens id="0">a frame-based representation language for representing text meanings</definiens>
			</definition>
			<definition id="1">
				<sentence>&lt; I saw him downtown with his girlfriend. At the time of the party , he was o.. demand an analysis that take into account more than parity , contrasting explicitly different agent 's attitudes towards the same event ( this is similar to Ducrot 's ( 1983 ) `` polyphony '' ) . we can provide a good representation of the above dialog using the `` attributed-to '' slot of an epistemic attitude frame. This representation will include the representation of the 152 meaning of the clause `` Paul came to the party yesterday '' in a TAMERLAN clause , say , clause_l , and two epistemic attitude frames , as follows : ( attitude 1 ( type ep~stemic ) ( value i ) ( attributed-to A ) ( scope clause_l ) ) ( attitude 2 ( type ep~stemic ) ( value 0 ) ( attributed-to B ) ( scope clause I ) ) In generating spoken text , the fact that the representation contains opposite epistemic attitudes with similar scopes will be realized through marked intonation. In contrast , a text featuring a simple negation ( not a denial of a previous assertion , but a simple negative assertion ) will not be represented using two opposite-value epistemic attitudes with similar scope. Furthermore , representing parity as an attitude gives rise to `` formulas '' that elegantly translate certain semantic relations between sentences. For instance the synonymy of the natural language sentences `` The book is not interesting '' and `` The book is uninteresting '' is translated in terms of attitudes as The equality will be valid only if the `` attributed-to '' slots of the relevant attitudes have the same fillers. The above means that negation is generally understood as having a `` lowering effect '' -something not interesting is less than interesting. When the condition about the `` attributed-to '' fillers is not fulfilled , negation must be understood as polemical , and in this case the meaning of `` the book is not interesting '' could , in fact , be as in `` the book is not interesting ; it is fascinating. '' ( Once again , in speech a marked intonation will be used. ) The realization of the deontic attitude can be illustrated as follows : go. Some illustrationsof the realization of the volition attitude : reluctant to ... I 'm Some lexical realizations of the expectation attitude : ( attitude 3 ( type ep~stemic ) ( value 0 ) ( attributed-to A ) ( scope ( clause 2 attitude_4 ) ) ) ( attitude 4 ( type evaluative ) ( value I ) ( attributed-to A ) ( scope clause 2 ) ) and ( attitude 5 ( type ep~stemic ) ( value i ) ( attributed-to A ) ( scope ( clause 2 attitude_6 ) ) ) ( attitude 6 ( type evaluative ) ( value 0 ) ( attributed-to A ) ( scope clause 2 ) ) respectively ( clause_2 represents the meaning glossed as `` this book , '' because the entire sentences only express the attitude toward the book ) . Therefore , ( epistemic 0 ( evaluative 1 ) ) = ( epistemic 1 ( evaluative 0 ) ) Needless to say ... The last two attitudes , evaluative and saliency can have in their scope not only clauses , relations or attitudes like the previous ones , but also objects and properties. 2 It is therefore difficult to give a limited and exhaustive set of examples of realizations. The evaluative scale goes , like the others , from 1 to 0. The endpoints are interpreted as roughly `` the best '' ( `` very good '' ) and `` the worst '' ( `` very bad '' ) . Depending on the scope , realizations will greatly vary and will include no lexical realization at all. If the scope is an event , adverbs like fortunately and unfortunately will be used. If the scope is the physical appearance of a person , theendpoints of the scale of evaluative attitude will be realized as `` attractive '' and `` ugly , '' etc. The saliency attitude plays an important role in selecting the syntactic structure of the target sentences and in the lexical selection. Thus , it will influence the order of elements in a 2The evaluative attitude to `` the book '' in the example above would , in fact , belong to this latter class. Its scope is a clause only because there is no predication in the sentence other than the attitudinal one. In a sentence like `` John read an interesting book '' the attitude is clearly toward an object instance. 153 conjunction ; it will be realized syntactically through topicalization ( `` It is Paul who ... '' ) and lexically through connective expressions such as last but not least or most importantly. In a nutshell , the flow of data in DIOGENES can be described as follows. The first processing component in DIOGENES is its text planner which , taking into account the input `` supermeaning '' produces a text plan , a structure containing information about the order and boundaries of target language sentences ; the decisions of reference realization and lexical selection ( for both open and most closed-class lexical items ) . At the next stage , a set of semantics-to-syntax mapping rules are used to produce a set of target-language syntactic stn~ctures ( we are using the f-structures of LFG -see , e.g. , Nirenburg and Levin , 1989 ) . Finally , a syntactic realizer produces a target language text from the set of f-structures. The text plan language we use in DIOGENES includes the following types of constructs -the plan-sentence , the planclause , two kinds of plan-roles and the plan modifier. The frames for these constructs are as follows : ( S_ # ( type plan-sentence ) ( subtype &lt; TYPE &gt; ) ( clauses ( &lt; C_ # &gt; * ) ) ) ( C # ( type plan-clause ) ( head &lt; word-sense &gt; ) ( realization { ellipsis I pro I lexical } ) ( features &lt; feature-value &gt; * ) ( topic { passive I cleft I passive-cleft I active } ) ( role &lt; R # &gt; ) * ( modifiers &lt; MOD # &gt; * &lt; R # &gt; * ) ) ( R_ # ( type plan-role ) ( head &lt; word-sense &gt; ) ( realization { ellipsis I pro ( features &lt; feature-value &gt; * ) ( role &lt; R # &gt; ) * ( modifiers &lt; MOD # &gt; * &lt; C # &gt; * &lt; R ) I lexical } ) # &gt; * ) ( R # ( type plan-role ) ( head $ SET $ ) ( elements &lt; R # &gt; &lt; R # &gt; * ) ( type { CONJ T DISJ } ) ( realization { ellipsis I pro ( features &lt; feature-value &gt; * ) ) I lexical } ) ( MOD # ( type plan-modifier ) ( head &lt; word-sense &gt; ) ( realization { ellipsis I pro ( features &lt; feature-value &gt; * ) ( modifiers &lt; MOD # &gt; * ) I lexical } ) Types of plan sentences at present include simple , compound-conjunctive and compound-disjunctive .</sentence>
				<definiendum id="0">same event</definiendum>
				<definiendum id="1">clause_2</definiendum>
				<definiens id="0">attitude frames , as follows : ( attitude 1 ( type ep~stemic ) ( value i ) ( attributed-to A ) ( scope clause_l ) ) ( attitude 2 ( type ep~stemic ) ( value 0 ) ( attributed-to B ) ( scope clause I ) ) In generating spoken text , the fact that the representation contains opposite epistemic attitudes with similar scopes will be realized through marked intonation. In contrast , a text featuring a simple negation ( not a denial of a previous assertion , but a simple negative assertion</definiens>
				<definiens id="1">an attitude gives rise to `` formulas '' that elegantly translate certain semantic relations between sentences. For instance the synonymy of the natural language sentences</definiens>
			</definition>
			<definition id="2">
				<sentence>modifiers is a slot in which all the modifiers of a given plan concept are listed .</sentence>
				<definiendum id="0">modifiers</definiendum>
				<definiens id="0">a slot in which all the modifiers of a given plan concept are listed</definiens>
			</definition>
			<definition id="3">
				<sentence>However , this methodology allows us to benefit from a complete experimentation envkonment and an open-ended architecture that facilitates the addition of knowledge to the system and its testing and debugging .</sentence>
				<definiendum id="0">open-ended architecture</definiendum>
				<definiens id="0">facilitates the addition of knowledge to the system and its testing and debugging</definiens>
			</definition>
			<definition id="4">
				<sentence>A Comparison of Surface Language Generators : A Case Study in Choice of Connectives .</sentence>
				<definiendum id="0">Comparison of Surface Language Generators</definiendum>
				<definiens id="0">A Case Study in Choice of Connectives</definiens>
			</definition>
</paper>

		<paper id="0125">
</paper>

		<paper id="0119">
			<definition id="0">
				<sentence>Input : A set of critiqued possible plans ( the output from Mgorithm Critique ) .</sentence>
				<definiendum id="0">Input</definiendum>
				<definiens id="0">A set of critiqued possible plans</definiens>
			</definition>
			<definition id="1">
				<sentence>Explanation and Prediction : An Architecture for Default and Abductive Reasoning .</sentence>
				<definiendum id="0">Explanation</definiendum>
				<definiendum id="1">Prediction</definiendum>
				<definiens id="0">An Architecture for Default and Abductive Reasoning</definiens>
			</definition>
</paper>

		<paper id="0123">
			<definition id="0">
				<sentence>JETS is a so-called limited transfer system , i.e. , a system in which structural transfer is kept to a minimum .</sentence>
				<definiendum id="0">JETS</definiendum>
				<definiens id="0">a so-called limited transfer system</definiens>
			</definition>
			<definition id="1">
				<sentence>For instance , part of the agenda for the cyclic phase of transitive verbs is : ... ( Call B-raising ) ( Call Dative ) ( Call Passive ) ... . but none of these rules are relevant to adjectives , nouns or intransitive verbs .</sentence>
				<definiendum id="0">Call B-raising )</definiendum>
			</definition>
</paper>

		<paper id="0104">
			<definition id="0">
				<sentence>2a ) B : `` No , Terry is a man '' 2b ) B : `` No , Terry is a bachelor '' B 's communicative goal is simply to inform A that Terry has the attributes { Human , Age-status : Adult , Sex : Male } , so utterance ( 2a ) is an appropriate response .</sentence>
				<definiendum id="0">Terry</definiendum>
				<definiendum id="1">Terry</definiendum>
				<definiens id="0">a bachelor '' B 's communicative goal is simply to inform A that Terry has the attributes { Human , Age-status : Adult</definiens>
				<definiens id="1">an appropriate response</definiens>
			</definition>
			<definition id="1">
				<sentence>Utterances ( 5a ) , ( 5b ) , and ( 5c ) all fulfill this communicative goal ( assuming that Breathes : Air is a default attribute of An/ma/ ) , but utterance ( 5b ) is preferred because Dog is a basic-level class .</sentence>
				<definiendum id="0">Utterances</definiendum>
				<definiendum id="1">Air</definiendum>
				<definiens id="0">a basic-level class</definiens>
			</definition>
			<definition id="2">
				<sentence>For example , ff To-Communicate was { Bird , Canfly : True } , and Entity was Tweety , consider the difference between 12a ) `` Tweety is a b/rd '' 12b ) `` Tweety is a bird that can fly '' If the generation system ignored default attributes , it would have to generate something like utterance ( 12b ) .</sentence>
				<definiendum id="0">Tweety</definiendum>
				<definiens id="0">a b/rd '' 12b ) `` Tweety is a bird that can fly '' If the generation system ignored default attributes</definiens>
			</definition>
			<definition id="3">
				<sentence>Consider two possible utterances : 13a ) `` Hucl is a VAX that runs Latex '' 13b ) `` Hucl is a UNIX VAX that runs Latex '' Utterance ( 13a ) is acceptable , and indeed expected , if the user thinks that Operating-system : UNIX is a default attribute of VAX 's in the current environment ( e.g. , at the Aiken Computation Lab ) .</sentence>
				<definiendum id="0">Hucl</definiendum>
			</definition>
</paper>

		<paper id="0115">
			<definition id="0">
				<sentence>A basic block consists of two elements : and to that focus .</sentence>
				<definiendum id="0">basic block</definiendum>
				<definiens id="0">consists of two elements : and to that focus</definiens>
			</definition>
			<definition id="1">
				<sentence>Transition summaries consist of a summary of the material which implicates an expected , but unrealized , continuance of the discourse .</sentence>
				<definiendum id="0">Transition summaries</definiendum>
				<definiens id="0">consist of a summary of the material which implicates an expected , but unrealized , continuance of the discourse</definiens>
			</definition>
			<definition id="2">
				<sentence>BACK-ON-TRACK REPETITION Back-on-track repetition is a recovery device , usually brief , which occurs after an interruption .</sentence>
				<definiendum id="0">BACK-ON-TRACK REPETITION Back-on-track repetition</definiendum>
				<definiens id="0">a recovery device , usually brief , which occurs after an interruption</definiens>
			</definition>
			<definition id="3">
				<sentence>A MODEL FOR GENERATION We are currently developing a computational system for generating extended explanations that captures the structural characteristics observed in naturallyoccurring , descriptive explanations .</sentence>
				<definiendum id="0">MODEL FOR GENERATION We</definiendum>
				<definiens id="0">currently developing a computational system for generating extended explanations that captures the structural characteristics observed in naturallyoccurring , descriptive explanations</definiens>
			</definition>
			<definition id="4">
				<sentence>The ideal case is one in which each child of the candidate accounts for approximately the same number of concepts .</sentence>
				<definiendum id="0">ideal case</definiendum>
				<definiens id="0">one in which each child of the candidate accounts for approximately the same number of concepts</definiens>
			</definition>
</paper>

		<paper id="0107">
			<definition id="0">
				<sentence>Once it has generated this set of assertions , the strategic component calls the tactical component with a goal Semantics : Syntax , where Semantics consists of the assertions plus the distinguished variable that the utterance is 'about ' , and Syntax is an f-structure ( which may specify no more than the category . )</sentence>
				<definiendum id="0">Semantics</definiendum>
				<definiendum id="1">Syntax</definiendum>
				<definiens id="0">consists of the assertions plus the distinguished variable that the utterance is 'about ' , and</definiens>
			</definition>
			<definition id="1">
				<sentence>Suppose we have a MechanismMaintenance rule , stating that if `` x '' denotes a Machine and `` y '' denotes any kind of MaintenanceOperalion , `` x y '' denotes a MaintenanceOperation y with y Maintains x. Given input semantics ( Y ISA RepairOperation ) ( Y Maintains X ) ( X ISA Computer ) ( X CanRunLanguage Z ) ( Z Equals Lisp ) , with distinguished referent Y , the maintenance rule will eventually fire , generating patterns for a head ( Y ISA RepairOperation ) and a modifier ( X ISA Computer ) ( X CanRunLanguage Z ) ( Z Equals Lisp ) .</sentence>
				<definiendum id="0">X ISA Computer )</definiendum>
				<definiens id="0">a Machine and `` y '' denotes any kind of MaintenanceOperalion , `` x y '' denotes a MaintenanceOperation y with y Maintains x. Given input semantics ( Y ISA RepairOperation ) ( Y Maintains X ) ( X ISA Computer ) ( X CanRunLanguage Z ) ( Z Equals Lisp</definiens>
			</definition>
			<definition id="2">
				<sentence>For an example of a right-branching compound , suppose we have a Product-Manufacturer rule stating that if `` x '' is the name of a Product and `` y '' is the name of a Company , then `` a y x '' is a Product x that is ManuffacluredBy company y. Given the input ( X ISA Computer ) ( X UanufacturedBy Y ) ( X CanRunianguage Z ) ( Y Equals Symbolics ) ( Z Equals Lisp ) , the product rule will fire , producing a modifier sub-goal for ( Y Equals Symbolics ) and a head sub-goal for ( X ISA Computer ) ( X CanRunLanguage Z ) ( Z Equals Lisp ) .</sentence>
				<definiendum id="0">X ISA Computer ) ( X UanufacturedBy Y ) ( X CanRunianguage Z ) ( Y Equals Symbolics )</definiendum>
			</definition>
			<definition id="3">
				<sentence>4 To do this we reverse the order of the statements and replace each Bind statement ( which computes a relation between variable bindings ) with its inverse .</sentence>
				<definiendum id="0">statement</definiendum>
				<definiens id="0">computes a relation between variable bindings ) with its inverse</definiens>
			</definition>
			<definition id="4">
				<sentence>FUNCTION generate-tp-dn ( Goal ) ; operation : = choose ( choose-tp-dn-operation ( Goal ) ) CASE operation : lex lex-decomp ( Goal ) : unary-decomp ; ; e.g. METONYMY RULES : choose ( apply-unary-tp-dn-rule ( Goal ) ) : binary-decomp ; ; e.g. COMPOL~DING/VAGUEWORD RULES : AND ( &lt; lef $ -subgoal , right-subgoal &gt; : = choose ( apply-binary-tp-dn-rule ( Goal ) ) , choose ( generate ( left-subgoal ) ) , choose ( generate ( right-subgoal ) ) , choose ( apply-binary-bup-rule ( left-subgoal , right-subgoal ) ) ) .</sentence>
				<definiendum id="0">FUNCTION generate-tp-dn</definiendum>
				<definiendum id="1">METONYMY RULES</definiendum>
				<definiens id="0">left-subgoal ) ) , choose ( generate ( right-subgoal )</definiens>
			</definition>
</paper>

		<paper id="0103">
			<definition id="0">
				<sentence>FIG is a structured conneetionist generator bulk in this way .</sentence>
				<definiendum id="0">FIG</definiendum>
				<definiens id="0">a structured conneetionist generator bulk in this way</definiens>
			</definition>
			<definition id="1">
				<sentence>FIG incorporates new ways of handling constituency , word order and optional constituents ; and simple ways to avoid the problems of instantiatien and binding .</sentence>
				<definiendum id="0">FIG</definiendum>
				<definiens id="0">incorporates new ways of handling constituency</definiens>
			</definition>
			<definition id="2">
				<sentence>Parallelism is the natural way to generate if the input is very complex ( Ward 1989a ) .</sentence>
				<definiendum id="0">Parallelism</definiendum>
				<definiens id="0">the natural way to generate if the input</definiens>
			</definition>
			<definition id="3">
				<sentence>Elsewhere I argue that FIG points the way to accurate and flexible word choice ( Ward 1988 ) , producing naturalsounding output for machine translation ( Ward 1989c ) , and modeling the key aspects of the human language production process ( Ward 1989a ) .</sentence>
				<definiendum id="0">FIG</definiendum>
				<definiens id="0">points the way to accurate and flexible word choice</definiens>
			</definition>
			<definition id="4">
				<sentence>16 ( defp noun-phr ( constituents ( defp go-p ( constituents ( np-I ( np-2 ( np-3 ( 9-P-1 ( gp-2 ( gp-3 ( gp-4 obl article ( ( article 1.2 ) ) ) opt adjective ( ( adJective .28 ) ) ) obl noun ( ( cnoun .47 ) ) ) ) ) Figure 1 : Representation of the Eng~sh Noun-Phrase Construction obl go-w ( ( go-w .2 ) ) ) opt epart ( ( vparticle .6 ) ( directionr .2 ) ) ) opt'noun ( ( prep-phr .6 ) ( destinationr .2 ) ) ) opt verb ( ( purpose-clause .7 ) ( purposer .2 ) ) ) Figure 2 : Representation of the Valence of `` Go '' ) ) ( defp ex-there ( inhibit subj-pred passive ) ( constituents ( et-i obl therew ( ( therew .5 ) ) ) ( et-2 obl verb ( ( verb .5 ) ) ) ( et-3 obl noun ( ( noun .3 ) ) ) ) ) Figure3 : Representation ofthe Existential `` Then '' Construction there are no explicit choices to worry about , and thus there are no problems of ordenng or bookkeeping at all ( Ward 1989b ) .</sentence>
				<definiendum id="0">defp noun-phr ( constituents</definiendum>
				<definiens id="0">inhibit subj-pred passive ) ( constituents ( et-i obl therew ( ( therew .5 ) ) ) ( et-2 obl verb ( ( verb .5</definiens>
			</definition>
			<definition id="5">
				<sentence>In accordance with the intuition that a word is not truly appropriate unless it is both syntactically and semantically appropriate , the activation level for words is given by the product ( not the sum ) of incoming syntactic and semantic activation , where 'syntactic activation ' is activation received from constituents and syntactic categories .</sentence>
				<definiendum id="0">activation level</definiendum>
				<definiens id="0">given by the product ( not the sum ) of incoming syntactic and semantic activation , where 'syntactic activation ' is activation received from constituents and syntactic categories</definiens>
			</definition>
			<definition id="6">
				<sentence>Therefore the update process adds activation to those constructions whose cursors have changed and sets temporary lower bounds on their activation levels .</sentence>
				<definiendum id="0">update process</definiendum>
				<definiens id="0">adds activation to those constructions whose cursors have changed and sets temporary lower bounds on their activation levels</definiens>
			</definition>
</paper>

		<paper id="0112">
			<definition id="0">
				<sentence>Ulysses is a graphical environment for the design of secure , distributed software systems .</sentence>
				<definiendum id="0">Ulysses</definiendum>
				<definiens id="0">a graphical environment for the design of secure , distributed software systems</definiens>
			</definition>
			<definition id="1">
				<sentence>Joyce generates different types of texts about software designs : • It generates annotations of the design which are intended to serve as system documentation during and after the design process .</sentence>
				<definiendum id="0">Joyce</definiendum>
				<definiens id="0">generates different types of texts about software designs : • It generates annotations of the design which are intended to serve as system documentation during and after the design process</definiens>
			</definition>
			<definition id="2">
				<sentence>F30602-85-C-0098 Structure of Joyce Joyce consists of three separate modules , which perform distinct tasks and access their own knowledge bases .</sentence>
				<definiendum id="0">F30602-85-C-0098 Structure of Joyce Joyce</definiendum>
				<definiens id="0">consists of three separate modules , which perform distinct tasks and access their own knowledge bases</definiens>
			</definition>
			<definition id="3">
				<sentence>The Kernel is a complex component .</sentence>
				<definiendum id="0">Kernel</definiendum>
				<definiens id="0">a complex component</definiens>
			</definition>
			<definition id="4">
				<sentence>Thematic knowledge relates the thematic function of sentence elements to the thematic function of elements in adjacent sentences .</sentence>
				<definiendum id="0">Thematic knowledge</definiendum>
				<definiens id="0">relates the thematic function of sentence elements to the thematic function of elements in adjacent sentences</definiens>
			</definition>
			<definition id="5">
				<sentence>Each schema consists of a list of rhetorical predicates ; the predicates can be matched against the domain representation and reMized by a proposition , or they can be instantiated by another schema .</sentence>
				<definiendum id="0">reMized</definiendum>
				<definiens id="0">a list of rhetorical predicates ; the predicates can be matched against the domain representation</definiens>
			</definition>
			<definition id="6">
				<sentence>For the remaining subeomponents , Joyce decides to give a brief description of their function and of their security features .</sentence>
				<definiendum id="0">Joyce</definiendum>
				<definiens id="0">decides to give a brief description of their function and of their security features</definiens>
			</definition>
</paper>

		<paper id="0110">
			<definition id="0">
				<sentence>Hovy 's \ [ 1988\ ] `` structurer '' uses his sequence RST operator to produce the following narration of events in a naval domain ( where C4 indicates a condition or level of operational readiness ) : Knox , which is C4 , is en route to Sasebo .</sentence>
				<definiendum id="0">C4</definiendum>
				<definiens id="0">indicates a condition or level of operational readiness ) : Knox , which is C4 , is en route to Sasebo</definiens>
			</definition>
			<definition id="1">
				<sentence>Discourse Focus , Temporal Focus , and Spatial Focus Like Hovy \ [ 1988\ ] , TEXPLAN uses a hierarchical planner to select , structure , and order propositional content using a library of plan operators ( detailed in a subsequent section ) .</sentence>
				<definiendum id="0">TEXPLAN</definiendum>
				<definiens id="0">uses a hierarchical planner to select , structure , and order propositional content using a library of plan operators ( detailed in a subsequent section )</definiens>
			</definition>
			<definition id="2">
				<sentence>As in McKeown 's TEXT , TEXPLAN tracks past , current , and potential discourse focus ( DF ) in global registers .</sentence>
				<definiendum id="0">TEXPLAN</definiendum>
				<definiendum id="1">DF</definiendum>
				<definiens id="0">tracks past , current , and potential discourse focus (</definiens>
			</definition>
			<definition id="3">
				<sentence>TEXPLAN tracks TF by recording pointers to events that appear in the propositional content selected by the text planner just as it records DF from selected propositional content following McKeown ( 1982 ) .</sentence>
				<definiendum id="0">TEXPLAN</definiendum>
			</definition>
			<definition id="4">
				<sentence>I define spatial focus ( SF ) as the current entity or group of entities ( and its/their associated spatial location ) that the reader is attending to in space .</sentence>
				<definiendum id="0">spatial focus</definiendum>
				<definiendum id="1">SF</definiendum>
				<definiens id="0">the current entity or group of entities</definiens>
			</definition>
			<definition id="5">
				<sentence>Visual saliency is the noteworthiness ( from one perspective ) of an entity in relation to a set of static objects .</sentence>
				<definiendum id="0">Visual saliency</definiendum>
				<definiens id="0">the noteworthiness ( from one perspective ) of an entity in relation to a set of static objects</definiens>
			</definition>
			<definition id="6">
				<sentence>The next sections illustrate the input to the generator , and how TEXPLAN uses the notions of Reichenbachian time and temporal focus to narrate events and states .</sentence>
				<definiendum id="0">TEXPLAN</definiendum>
				<definiens id="0">uses the notions of Reichenbachian time and temporal focus to narrate events and states</definiens>
			</definition>
			<definition id="7">
				<sentence>The realization component of the system selects proper verb tense and aspect and indicates shifts in TF , for example , through the use of adverbials .</sentence>
				<definiendum id="0">realization component</definiendum>
				<definiens id="0">of the system selects proper verb tense and aspect and indicates shifts in TF</definiens>
			</definition>
			<definition id="8">
				<sentence>Nakhimovsky makes a key distinction between events , processes and states : For a linguist , the distinction between event-process is one of aspecmal perspective : `` The term 'process ' means a dynamic situation viewed imperfectively , and the term 'event ' means a dynamic situation viewed perfectively '' ( Comrie , 1976 : 51 ) .</sentence>
				<definiendum id="0">Nakhimovsky</definiendum>
				<definiendum id="1">event-process</definiendum>
				<definiens id="0">makes a key distinction between events , processes and states</definiens>
			</definition>
			<definition id="9">
				<sentence>This is accomplished by representing each communicative act ( either a rhetorical act or a speech act ) as an operator in a library of plans which are reasoned about by a hierarchical text planner \ [ Sacerdoti , 1977\ ] similar to that used by Hovy \ [ 1988\ ] and 1Surface to Air Missile 73 \ [ Moore , 1989\ ] .</sentence>
				<definiendum id="0">communicative act</definiendum>
				<definiens id="0">a rhetorical act or a speech act</definiens>
			</definition>
			<definition id="10">
				<sentence>A rhetorical act characterizes the communicative function of one or more utterances ( e.g. , describe , define , compare , narrate ) and may employ other rhetorical acts and/or speech acts to achieve its associated goals .</sentence>
				<definiendum id="0">rhetorical act</definiendum>
				<definiens id="0">characterizes the communicative function of one or more utterances</definiens>
			</definition>
			<definition id="11">
				<sentence>KNOW details an agent 's specific knowledge of the truth-values of propositions ( e.g. , KNOW ( H , Red ( ROBIN-I ) ) or KNOW ( H , -Yellow ( ROBIN-l ) ) ) where truth or falsity is defined by the propositions in the knowledge base .</sentence>
				<definiendum id="0">KNOW</definiendum>
				<definiendum id="1">KNOW ( H , Red ( ROBIN-I ) )</definiendum>
				<definiens id="0">details an agent 's specific knowledge of the truth-values of propositions</definiens>
				<definiens id="1">or KNOW ( H , -Yellow ( ROBIN-l ) ) ) where truth or falsity is defined by the propositions in the knowledge base</definiens>
			</definition>
			<definition id="12">
				<sentence>The introduce plan operaator describes the principle time , place , agents ( i.e. , characters ) using a variety of rhetorical means including definition , attribution , illustration , and division ( i.e. , classification and constituency ) ( see Maybury \ [ 1990\ ] for details ) .</sentence>
				<definiendum id="0">division</definiendum>
				<definiens id="0">the principle time , place , agents ( i.e. , characters ) using a variety of rhetorical means including definition , attribution</definiens>
			</definition>
			<definition id="13">
				<sentence>In this case this information is described using two rhetorical predicates : logical definition ( which indicates the genus and differentia of the package ) and constituency ( which indicates the subparts , in this case missions ) .</sentence>
				<definiendum id="0">constituency</definiendum>
				<definiens id="0">logical definition ( which indicates the genus and differentia of the package</definiens>
			</definition>
			<definition id="14">
				<sentence>NAME HEADER CONSTRAINTS PRECONDITIONS EFFECTS DECOMPOSITION narrate-report -topically Narrate ( S , H , events ) Topical-Sequence ( events ) ^ Ve e events Event ( e ) Ve E events KNOW-ABOUT ( S , e ) Vt E Topics ( events ) KNOW-ABOUT ( H , t ) Introduce ( S , H , events ) ^ Vtopic e Order-According-to-Salience ( Topics ( events ) ) Narrate-Sequence ( S , H , Events-with-Topic ( events , topic ) ) Figure 1 .</sentence>
				<definiendum id="0">Topics</definiendum>
				<definiendum id="1">Events-with-Topic</definiendum>
				<definiens id="0">Event ( e ) Ve E events KNOW-ABOUT ( S , e ) Vt E Topics ( events ) KNOW-ABOUT ( H , t ) Introduce ( S , H , events ) ^ Vtopic e Order-According-to-Salience</definiens>
			</definition>
			<definition id="15">
				<sentence>And by examining the relationship of speaker time ( S ) , event time ( E ) , and reference time ( R based on TF ) , the realization component is able to choose appropriate verb tense ( e.g. , if E=R &lt; S then use simple pasO. Similarly , the realization of temporal adverbs , which help to convey temporal relations among events , ( e.g. , `` and then '' , `` three minutes later '' , `` simultaneously '' , `` before '' , `` after '' ) is guided by the relationship of past to current TF. For example if the time of the current TF equals that of the past TF then connectives such as `` simultaneously '' or `` at the same time '' introduce utterances. Both temporal and spatial adverbs ( exemplified in the next section ) often refer anaphoncally to the current TF ( e.g. , `` ten minutes later '' ) or SF ( e.g. , `` three miles away '' ) . During realization , events that are of the same class , occur at the same time and share a semantic patient are combined as in `` One minute later Erfurt-A and Erfurt-D simultaneously fired a missile at offensive counter air mission 102. '' The adverb `` again '' is used when an event has already occurred , and thus functions as an anaphor. Other classes of adverbs can also enrich the event description. These include adverbs regarding manner ( e.g. , `` deftly '' , `` sadly '' ) , rate ( e.g. , `` slowly '' , `` rapidly '' ) , duration ( e.g. , `` for twenty minutes '' ) , frequency ( `` every ten minutes '' ) , and numeration ( e.g. , `` seventeen times '' ) . Some adverbs ( e.g. , manner , rate , durative , locative ) regard internal properties of the event whereas others relate the current event to other events and therefore are external such as temporal adverbs ( e.g. , `` simultaneously '' , `` yesterday '' ) or `` anaphodc '' adverbs ( e.g. , `` again '' , `` as before '' ) . The relationship of these and other classes of adverbials to DF , TF , and SF remains an interesting area for further work. 75 Narrate ( S , H , event-sequence ) Introduce ( S , H , event-sequence ) 1 • Describe ( S , H , # &lt; air-strike-10 &gt; ) Narrate-SequencelS , H , topicl-events ) ) / \ Inform ( S , H , Logical-Definition ( # &lt; air-strike-10 &gt; ) Inform ( S , H , Consti~tuency ( # &lt; air-strike-10 &gt; ) / Inform ( S , H , Event ( # &lt; ev-begin-mission &gt; ) ) Inform ( S , H , Event ( # &lt; ev-dispense &gt; ) ) Figure 3 .</sentence>
				<definiendum id="0">SF</definiendum>
				<definiendum id="1">SF</definiendum>
				<definiens id="0">speaker time ( S ) , event time ( E ) , and reference time ( R based on TF</definiens>
			</definition>
</paper>

		<paper id="0111">
			<definition id="0">
				<sentence>Salience explains the prioritization or foregrounding of objects or information .</sentence>
				<definiendum id="0">Salience</definiendum>
				<definiens id="0">explains the prioritization or foregrounding of objects or information</definiens>
			</definition>
			<definition id="1">
				<sentence>Conceptual salience originates in ( shared ) experiential knowledge .</sentence>
				<definiendum id="0">Conceptual salience</definiendum>
				<definiens id="0">originates in ( shared ) experiential knowledge</definiens>
			</definition>
			<definition id="2">
				<sentence>Route Description Generation A journey consists of a series of connected route sections .</sentence>
				<definiendum id="0">journey</definiendum>
			</definition>
			<definition id="3">
				<sentence>rlabel ( busid ( lm 134 ) ) \ ] rlabel ( busid ( sfu 145 ) ) \ ] Input to the text planner is a sequence of skeletal plans generated by the route finder .</sentence>
				<definiendum id="0">rlabel</definiendum>
				<definiens id="0">a sequence of skeletal plans generated by the route finder</definiens>
			</definition>
			<definition id="4">
				<sentence>The planner consists of two major submodules that correspond to two ordered stages of processing : ( 1 ) selector and ( 2 ) realization-specification ( rspec ) synthesizer .</sentence>
				<definiendum id="0">planner</definiendum>
			</definition>
			<definition id="5">
				<sentence>The knowledge base consists of points , landmarks , bus routes , streets and so on .</sentence>
				<definiendum id="0">knowledge base</definiendum>
				<definiens id="0">consists of points , landmarks , bus routes , streets and so on</definiens>
			</definition>
			<definition id="6">
				<sentence>The route finder works with the knowledge base and gives some objects the status of source , desanaaon and route-label in particular instances of route finding .</sentence>
				<definiendum id="0">route finder</definiendum>
				<definiens id="0">works with the knowledge base and gives some objects the status of source , desanaaon</definiens>
			</definition>
</paper>

	</volume>
