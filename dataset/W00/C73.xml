<?xml version="1.0" encoding="UTF-8"?>
	<volume id="C73">

		<paper id="1009">
			<definition id="0">
				<sentence>A transformational grammar tester is part of a strategy for the selection of a well-formed grammar matching the data base .</sentence>
				<definiendum id="0">transformational grammar tester</definiendum>
			</definition>
			<definition id="1">
				<sentence>In the program , UNG is the routine that controls all the subroutines and the matching of the input structures with those allowed by the phrase structure rules .</sentence>
				<definiendum id="0">UNG</definiendum>
				<definiens id="0">the routine that controls all the subroutines and the matching of the input structures with those allowed by the phrase structure rules</definiens>
			</definition>
			<definition id="2">
				<sentence>Insertion of a node ( after ) 140 SERGE BOISVERTANDRI~ DUGASDENISE BELANGER OBJ-mC is a system which has been implemented in low-level tORTeN IV for the CDC 6400 .</sentence>
				<definiendum id="0">Insertion of a node</definiendum>
				<definiendum id="1">SERGE BOISVERTANDRI~ DUGASDENISE BELANGER OBJ-mC</definiendum>
			</definition>
			<definition id="3">
				<sentence>D. L. LotrD~ , W. J. SCHO~N~ , TOT : A Transformational Grammar Tester , in Proc .</sentence>
				<definiendum id="0">TOT</definiendum>
				<definiens id="0">A Transformational Grammar Tester , in Proc</definiens>
			</definition>
</paper>

		<paper id="1027">
			<definition id="0">
				<sentence>( 12 ) ( 15 ) ( 18 ) ( 31 ) Syn=synonym Syn ( to help ) to aid Syn ( to call ) to name Conv-conversive Cony ( to build ) to be built ( by someone ) Cony ( to contain ) to be contained ( by something ) Cony ( A precedes B ) B follows A Cony ( A beat 13 ) B loses to A Cony ( A sold B to C ) C bought B from A Anti-antonym Anti ( beautiful ) plain , ugly Anti ( before ) after Gen genus Gen ( liquid ) substance Gen ( blue ) color Gen ( crawl ) move So-noun coinciding with the verb So ( to move ) movement So ( to be white ) whiteness Ao-adjectives coinciding with the verb Ao ( sun ) solar Ao ( time ) temporal Sinstr-noun denoting instrument of word Sinstr ( think ) brain Sinstr ( clap ) hands Mult-noun denoting aggregate Mult ( flowers ) bunch Mult ( sheep ) flock Figur-standard figurative designation Figur ( passion ) flame Figur ( misery ) abyss Oper-verb connecting name of participant with action oper ( support ) to lend oper ( defeat ) to suffer AN ENGLISH DICTIONARY FOR COMPUTERIZED SYNTACTIC 307 ( 39 ) ( 46 ) oper ( recession ) to experience Fin-verb meaning `` to cease `` , `` to stop `` Fin ( sound ) to die away Fin ( patience ) to lose Son-verb denoting typical sound Son ( lion ) to roar Son ( snake ) to hiss What they mean by information about the lexical universe of a word is `` an informal description of a suflqciendy broad piece of reality including the given situation as a constituent element. ``</sentence>
				<definiendum id="0">clap ) hands Mult-noun</definiendum>
				<definiens id="0">contained ( by something ) Cony ( A precedes B ) B follows A Cony ( A beat 13 ) B loses to A Cony ( A sold B to C ) C bought B from A Anti-antonym Anti ( beautiful ) plain , ugly Anti ( before ) after Gen genus Gen ( liquid ) substance Gen ( blue ) color Gen ( crawl ) move So-noun coinciding with the verb So ( to move</definiens>
				<definiens id="1">sheep ) flock Figur-standard figurative designation Figur ( passion ) flame Figur ( misery ) abyss Oper-verb connecting name of participant with action oper ( support ) to lend oper ( defeat ) to suffer AN ENGLISH DICTIONARY FOR COMPUTERIZED SYNTACTIC 307 ( 39 ) ( 46 ) oper ( recession ) to experience Fin-verb meaning `` to cease `` , `` to stop `` Fin ( sound ) to die away Fin ( patience ) to lose Son-verb denoting typical sound Son ( lion ) to roar Son ( snake ) to hiss What they mean by information about the lexical universe of a word is `` an informal description of a suflqciendy broad piece of reality including the given situation as a constituent element.</definiens>
			</definition>
			<definition id="1">
				<sentence>RESEMBLING ANOTHER KIND THAT IS USU OF A OF A OF A OF A OF A OF A OF A AJ FESTIVE AJ EPISTOLARY AJ EPICUREAN AJ ELEEMOSYNARY AJ ELEMENTARY AJ DEGENERATIVE AJ ELECTROMOTIVE AJ GEOCHEMICAL AJ ELECTRONIC AJ DEMOTIC AJ FILMY AJ DISCOIDAL AJ FUNERARY AJ EQUATIONAL AJ FULVOUS AJ GOOD AJ GOLDEN AJ GARDEN AJ FALSE LIGHT BLUISH GRAY OR BLUISH WHITE COLOR AJ GLAUCOUS LIGHT YELLOWISH BROWN AJ FALLOW MIXED EUROPEAN AND ASIATIC ORIGIN AJ EURASIAN PALE YELLOW GREEN COLOR AJ GLAUCOUS PARTICULAR SORT SPECIFIC AJ EXPRESS PLEASANT CHEERFUL DISPOSITION AJ GOOD-NATURED RUDDY HEALTHY COLOR AJ FLUSH 320 RAOUL N. SMITHEDWARD MAXWELL APPENDIX II HAVING AN EMBRYO HARD AND DENSE LIKE IVORY GIVEN TO OR MARKED BY DISSIPATION DISSOLUTE PROVIDED WITH OR CHARACTERIZED BY WINDOWS HAVING ONE OR .</sentence>
				<definiendum id="0">RESEMBLING ANOTHER KIND THAT</definiendum>
			</definition>
</paper>

		<paper id="2018">
			<definition id="0">
				<sentence>En fonction des relations stock6es en m6moire , on extrait le tableau associ6 k cette phrase : UN ANALYSEUR SYNTAXIQUE INTERACTIF 191 petit -- I chien nolr mange la I i soupe chaude phrase phrase l e le __ __ __0 1 petit chien -- \ [ -I -14 0 p ' +14 I 0 -14 + 14 -- 16 -- 14 + 14 noir 0 mange !</sentence>
				<definiendum id="0">En fonction</definiendum>
				<definiens id="0">des relations stock6es en m6moire , on extrait le tableau associ6 k cette phrase : UN ANALYSEUR SYNTAXIQUE INTERACTIF 191 petit -- I chien nolr mange la I i soupe chaude phrase phrase l e</definiens>
			</definition>
</paper>

		<paper id="1024">
			<definition id="0">
				<sentence>Furthermore we coded also the following data in explicit form beside each head-word : ( 1 ) complexity ( how many roots does the lexeme consist of ) , ( 2 ) homonymy , ( 3 ) part of speech ( in case of conversion each possible form class denoted ) , ( 4 ) the number of meanings , ( 5 ) style , ( 6 ) morphological data ( for words capable of inflexion ) , ( 7 ) strongly required government ( only for verbs ) , ( 8 ) etymology , ( 9 ) suffix , ( 10 ) length ( this latter datum , of course , was coded not by us ; it was decided and punched on the card in the proper place by the processing machine ) .</sentence>
				<definiendum id="0">complexity</definiendum>
			</definition>
			<definition id="1">
				<sentence>Besides revealing trivial truths such as `` it is the layer of the inner , Hungarian developments that is 19 290 r~RENC PAI'P nearest to the Finno-Ugrian layer `` , or `` the Latin and Neo-Latin layers are the farthest ones from the Finno-Ugrian layer `` , it gave about these distances certain valuable quantitative indices as well on the basis of which the model could be applied to other fields where indeed it has already brought really new results ( cf. 2.1.2 ) .</sentence>
				<definiendum id="0">Hungarian developments</definiendum>
			</definition>
</paper>

		<paper id="1003">
</paper>

		<paper id="1004">
			<definition id="0">
				<sentence>The term hyponymy has been used by J. LYoNs ( 1968 ) to denote the common but somewhat vague notion of `` semantic inclusion '' A hyponymy p of a word sense q is a word sense whose meaning is a `` subset `` of the meaning of q ; for example , scarlet is a hyponym of red , and tulip is a hyponym of flower .</sentence>
				<definiendum id="0">scarlet</definiendum>
				<definiendum id="1">tulip</definiendum>
				<definiens id="0">the common but somewhat vague notion of `` semantic inclusion '' A hyponymy p of a word sense q is a word sense whose meaning is a `` subset `` of the meaning of q ; for example ,</definiens>
			</definition>
			<definition id="1">
				<sentence>More specifically , suppose that Hi and Hi+l are the current structures after i and i + 1 senses , respectively , x and y are any two senses previously processed , and the distance between two senses on the same path is the number of arcs separating them .</sentence>
				<definiendum id="0">Hi+l</definiendum>
				<definiens id="0">the current structures after i and i + 1 senses , respectively , x and y are any two senses previously processed</definiens>
			</definition>
			<definition id="2">
				<sentence>In the case of H-forests , there is more scope for inconsistency , since any valid H-graph which is not also an Hforest represents a set of information which is inconsistent with Hforests .</sentence>
				<definiendum id="0">Hforest</definiendum>
			</definition>
			<definition id="3">
				<sentence>, then they are at the same or adjacent nodes in Di+l ; b ) if x is a distance d above y in Di , then x is a distance d or d -q1 above y in D~+I ; c ) if x is a distance d above y in Di+l , then x is a distance d or d-1 above y in D~ ; d ) x and y are not on the same path in Di iff they are not on the same path in Di+l. A D-forest is a highly predictive structure ; i.e. , a judgment involving one of its word senses will in general predict the outcome of many other judgments .</sentence>
				<definiendum id="0">D-forest</definiendum>
				<definiens id="0">a distance d above y in Di</definiens>
				<definiens id="1">a judgment involving one of its word senses will in general predict the outcome of many other judgments</definiens>
			</definition>
</paper>

		<paper id="1013">
</paper>

		<paper id="2023">
			<definition id="0">
				<sentence>The conversion programme consists mainly of the following subsections : a ) segmentation of the input-text into sentences and words .</sentence>
				<definiendum id="0">conversion programme</definiendum>
				<definiens id="0">consists mainly of the following subsections : a ) segmentation of the input-text into sentences and words</definiens>
			</definition>
</paper>

		<paper id="2007">
</paper>

		<paper id="1022">
</paper>

		<paper id="2027">
			<definition id="0">
				<sentence>Translate : some recurrent syntagmatic patterns of morpheme classes are part of the linguistic tool box , just as morphemes are .</sentence>
				<definiendum id="0">Translate</definiendum>
				<definiens id="0">some recurrent syntagmatic patterns of morpheme classes are part of the linguistic tool box</definiens>
			</definition>
			<definition id="1">
				<sentence>A. WOoDs , Transition networks fol natural language analysis , in * Commu .</sentence>
				<definiendum id="0">Transition</definiendum>
			</definition>
</paper>

		<paper id="1015">
			<definition id="0">
				<sentence>Human langmage consists of sounds , and it could be expected that at some late moment the material implementation of phonemes would come in .</sentence>
				<definiendum id="0">Human langmage</definiendum>
				<definiens id="0">consists of sounds , and it could be expected that at some late moment the material implementation of phonemes would come in</definiens>
			</definition>
</paper>

		<paper id="1017">
			<definition id="0">
				<sentence>212 B.V. $ UKHOTIN gorithm discovers an IC graph which shows the way in which morphemes are combined into words .</sentence>
				<definiendum id="0">IC graph</definiendum>
				<definiens id="0">shows the way in which morphemes are combined into words</definiens>
			</definition>
			<definition id="1">
				<sentence>Sti~ ( Kij ) is the mean conditional probability 1 ( f ( l~ ) f ( r. ) where the string K~j of the length L is divided into the left part l~ and the right part r~ ( l~r~ = Kq ) in all possible ways ; f ( l~ ) , f ( r~ ) , f ( K~ ) denoting the frequencies of the respective strings .</sentence>
				<definiendum id="0">Sti~ ( Kij )</definiendum>
				<definiens id="0">the mean conditional probability 1 ( f ( l~ ) f ( r. ) where the string K~j of the length L is divided into the left part l~ and the right part r~ ( l~r~ = Kq ) in all possible ways</definiens>
			</definition>
			<definition id="2">
				<sentence>V. SUKHOTIN A typical example of an algorithm which obtains mapping M -- -- = { E~ ~ El } ( E~ being some elements of the unknown language , E '' the respective elements of the known one ) is furnished by the algorithm which discovers the pronunciation of letters .</sentence>
				<definiendum id="0">E~</definiendum>
				<definiens id="0">being some elements of the unknown language , E '' the respective elements of the known one ) is furnished by the algorithm which discovers the pronunciation of letters</definiens>
			</definition>
</paper>

		<paper id="1001">
			<definition id="0">
				<sentence>These languages differ both as regards their syntax ( rules for forming propositions ) and their semantics ( the way of interpreting propositions ) .</sentence>
				<definiendum id="0">their semantics</definiendum>
				<definiens id="0">the way of interpreting propositions</definiens>
			</definition>
			<definition id="1">
				<sentence>A neighbourhood is a small model in which a certain vertex the centre is marked .</sentence>
				<definiendum id="0">neighbourhood</definiendum>
				<definiens id="0">a small model in which a certain vertex the centre is marked</definiens>
			</definition>
			<definition id="2">
				<sentence>A model is proper according to the scheme , if for every pair ( x , f ( x ) ) ( every n-tuple ( xl , ... , x , ) ) , wheref ( x ) or R ( xl , ... , x , , ) is the main or auxiliary function ( relation ) , NEIGHBOURHOOD DESCRIPTION OF FORMAL LANGUAGES 5 there exists the scheme 's suitable neighbourhood which holds for it .</sentence>
				<definiendum id="0">, )</definiendum>
				<definiens id="0">every n-tuple ( xl , ... , x , ) ) , wheref ( x ) or R ( xl , ... , x ,</definiens>
				<definiens id="1">the main or auxiliary function ( relation )</definiens>
			</definition>
			<definition id="3">
				<sentence>It can be explained on the example of the formula \ [ R ( x , y ) &amp; ( y &lt; which works for the set of natural numbers and defines the relation R ( the relation &lt; being basic ) .</sentence>
				<definiendum id="0">relation R</definiendum>
				<definiens id="0">the relation &lt; being basic )</definiens>
			</definition>
</paper>

		<paper id="1006">
			<definition id="0">
				<sentence>The work of the assignment function may be represented by the formula eX where e is any episemion and X is a semion with which it has been placed in correspondence , for example 0~T A~ P1 A~A~ P2 Aoco~ A Aoc~o~ D r AA~SA~ DA A~A~ Sfa etc. mions which are called semions .</sentence>
				<definiendum id="0">e</definiendum>
				<definiendum id="1">X</definiendum>
				<definiens id="0">a semion with which it has been placed in correspondence</definiens>
			</definition>
			<definition id="1">
				<sentence>These rules are as follows : ( a ) an elementary semion is a semion ; ( b ) if X is a semion which belongs to the episemion A pq , and Y is a semion , belonging to the episemion p , then ( XY ) is a semion , belonging to the episemion q. Rule ( b ) presented as a tree looks as follows : ( 8 ) pY q ( xr ) We shall call X an operator , Y an operand , and ( XY ) is the result of application of X to Y. P , .</sentence>
				<definiendum id="0">elementary semion</definiendum>
				<definiendum id="1">Y</definiendum>
				<definiens id="0">a semion which belongs to the episemion A pq</definiens>
			</definition>
			<definition id="2">
				<sentence>AocAococSf~ ocT Aoc~ocD T Aoc~P1 ( 11 ) Aococ ( SfAT ) oc ( DrP~ ) oc ( ( SL T ) ( DrP~ ) ) If Sfa is interpreted as 's , T as John , then Sf , ~ T corresponds to John 's .</sentence>
				<definiendum id="0">AocAococSf~ ocT Aoc~ocD T Aoc~P1</definiendum>
				<definiens id="0">SL T ) ( DrP~ ) ) If Sfa is interpreted as 's , T as John , then Sf , ~ T corresponds to John 's</definiens>
			</definition>
			<definition id="3">
				<sentence>The phenotype language is a natural language as is given in immediate observation .</sentence>
				<definiendum id="0">phenotype language</definiendum>
				<definiens id="0">a natural language as is given in immediate observation</definiens>
			</definition>
			<definition id="4">
				<sentence>The genotype language is hidden , not given in immediate observation ; it is a construct language which consists of two sub-lan= guages : the basic genotype language and the derived genotype language .</sentence>
				<definiendum id="0">genotype language</definiendum>
				<definiens id="0">consists of two sub-lan= guages : the basic genotype language and the derived genotype language</definiens>
			</definition>
			<definition id="5">
				<sentence>The basic genotype language is the language of thought representation ; the expressions of the basic genotype language which consist of elementary predicates may be identified with the thoughts which are to be embodied into a linguistic form .</sentence>
				<definiendum id="0">basic genotype language</definiendum>
				<definiens id="0">the language of thought representation ; the expressions of the basic genotype language which consist of elementary predicates may be identified with the thoughts which are to be embodied into a linguistic form</definiens>
			</definition>
			<definition id="6">
				<sentence>The basic genotype language consists of one- , twoand three-place predicates obtained through the rule : ( 14 ) S ~ I CJ P3 T~gT* 1 x See .</sentence>
				<definiendum id="0">basic genotype language</definiendum>
			</definition>
			<definition id="7">
				<sentence>A. SOBOLEVA In ( 14 ) S is a global symbol of sentence , i.e. a semion belonging to the category ~ .</sentence>
				<definiendum id="0">S</definiendum>
				<definiens id="0">a global symbol of sentence</definiens>
			</definition>
			<definition id="8">
				<sentence>P2 is a two-place predicate with a sentence and a term as its arguments .</sentence>
				<definiendum id="0">P2</definiendum>
			</definition>
			<definition id="9">
				<sentence>P3 is a three-place predicate with a sentence and two terms as its arguments .</sentence>
				<definiendum id="0">P3</definiendum>
			</definition>
			<definition id="10">
				<sentence>Cj is a two-place operator of conjunction with sentences as its arguments .</sentence>
				<definiendum id="0">Cj</definiendum>
			</definition>
			<definition id="11">
				<sentence>The combinator B as well as the other combinators may be applied both to basic and derived genotype sentences according to the rule ( 21 ) X ( YZ ) -- * BXYZ where X is the predicate of the matrix sentence , Y is the predicate of the embedded sentence , and BXY is a complex predicate with Z as its argument .</sentence>
				<definiendum id="0">X</definiendum>
				<definiendum id="1">Y</definiendum>
				<definiendum id="2">BXY</definiendum>
				<definiens id="0">the predicate of the matrix sentence</definiens>
				<definiens id="1">the predicate of the embedded sentence</definiens>
			</definition>
			<definition id="12">
				<sentence>METALANGUAGE AND FORMAL THEORY 73 L - , the confluentor of functions with identicalarguments : ( 23 ) XZ ( YZ ) ~ LXYZ where X is the predicate of the matrix , Y of the embedded sentence , and Z is the identical argument of both sentences , for example : ( 24 ) CaTI ( ~I T ' ) T ~ -+ LCa151T1T 2 which simulates the transformation of causation : * Mary persuaded John , John came Mary persuaded John to come The combinator L fulfils the function , analogical to `` predicateraising `` , `` subject-raising `` , and `` equi-NP-deletion `` , applied simultaneously .</sentence>
				<definiendum id="0">METALANGUAGE</definiendum>
				<definiendum id="1">X</definiendum>
				<definiendum id="2">Z</definiendum>
				<definiendum id="3">CaTI</definiendum>
				<definiendum id="4">`` equi-NP-deletion</definiendum>
				<definiens id="0">the predicate of the matrix</definiens>
				<definiens id="1">simulates the transformation of causation : * Mary persuaded John , John came Mary persuaded John to come The combinator L fulfils the function</definiens>
			</definition>
			<definition id="13">
				<sentence>K~ the operator of introducing a dummy argument : ( 28 ) K~ VZXY 1 VXY ~ Ks VXZY K , VXYZ where V is the predicate , X and Y are its arguments and Z is a dummy argument introduced either immediately after V ( if/£1 is applied ) , or after X or Y ( if Ks and/£3 are applied correspondingly ) , for example ( 29 ) VI ( /3T ' ) T2 -+ K1 VL To ( # TI ) T s which may be interpreted as * I like , John sings -+ I like it ( that ) John sings The operator K may be used to model the derivation of various it-constructions in English .</sentence>
				<definiendum id="0">V</definiendum>
				<definiendum id="1">Z</definiendum>
				<definiens id="0">the predicate</definiens>
			</definition>
			<definition id="14">
				<sentence>H the operator which , applied to a predicate of P~ ( i = 1 , 2 , 3 ) type changes it into a predicate of/3 type by nominalizing an embedded sentence , for example ( 31 ) PST ~ H/3 ( Rr S ) T t which may be interpreted e.g. as I believe John will come ~ I believe that John will come The operator R~ is a nominalizer belonging to the category A~ and interpreted as that or a complex of morphemes prep ... 's ... -ing , for example FORMAL METALANGUAGE AND FORMAL THEORY 75 ( 32 ) Em ( iST~T2 ) T 8 -- - &gt; HEm ( R r ( DT~T~ ) ) T s which may be given an interpretation of * John is amused , Harry plays the piano John is amused at Harry 's playing the piano Several more combinators are used in applicative generative grammar but we shall not dwell upon them here .</sentence>
				<definiendum id="0">T</definiendum>
				<definiens id="0">s which may be given an interpretation of * John is amused , Harry plays the piano John is amused at Harry 's playing the piano Several more combinators are used in applicative generative grammar</definiens>
			</definition>
			<definition id="15">
				<sentence>Here we shall give the rule of relativization : ( 33 ) cj z ( R ( xr ) r ) Where X is the predicate of the first conjoint sentence , Z the predicate of the second conjoint sentence and Y is the identical argument of both X and Z. iRA is the operator of relativization , a semion belonging to the category Al3A0~0~ .</sentence>
				<definiendum id="0">X</definiendum>
				<definiendum id="1">Y</definiendum>
				<definiens id="0">the predicate of the first conjoint sentence , Z the predicate of the second conjoint sentence</definiens>
				<definiens id="1">the identical argument of both X and Z. iRA is the operator of relativization , a semion belonging to the category Al3A0~0~</definiens>
			</definition>
			<definition id="16">
				<sentence>The notation shows that R~ is the operator which applied• to a sentence , maps it into a term identifier .</sentence>
				<definiendum id="0">R~</definiendum>
				<definiens id="0">the operator which applied• to a sentence , maps it into a term identifier</definiens>
			</definition>
			<definition id="17">
				<sentence>The sentences of the basic genotype language are regarded as the sentences of the zero degree of derivation , hence the basic genotype language is regarded as part of the derived genotype language which is a sum of the zero degree of derivation sentences .</sentence>
				<definiendum id="0">genotype language</definiendum>
				<definiens id="0">a sum of the zero degree of derivation sentences</definiens>
			</definition>
			<definition id="18">
				<sentence>Morpho phonological rules consist in the substitution of either phonological strings instead of phenotype expressions , or of some phonological strings instead of other phonological strings .</sentence>
				<definiendum id="0">Morpho phonological rules</definiendum>
				<definiens id="0">consist in the substitution of either phonological strings instead of phenotype expressions , or of some phonological strings instead of other phonological strings</definiens>
			</definition>
			<definition id="19">
				<sentence>G , is a sentence of the derived genotype language .</sentence>
				<definiendum id="0">G</definiendum>
				<definiens id="0">a sentence of the derived genotype language</definiens>
			</definition>
			<definition id="20">
				<sentence>In case n = 1 , G~ is a sentence of the zero degree of derivation .</sentence>
				<definiendum id="0">G~</definiendum>
				<definiens id="0">a sentence of the zero degree of derivation</definiens>
			</definition>
			<definition id="21">
				<sentence>F1 is the initial sentence of the phenotype component .</sentence>
				<definiendum id="0">F1</definiendum>
			</definition>
			<definition id="22">
				<sentence>L1 is a sentence obtained at the first step of the application of the linear transformational rules .</sentence>
				<definiendum id="0">L1</definiendum>
				<definiens id="0">a sentence obtained at the first step of the application of the linear transformational rules</definiens>
			</definition>
			<definition id="23">
				<sentence>Lp is a sentence obtained at the final step of the linear transformation rules .</sentence>
				<definiendum id="0">Lp</definiendum>
				<definiens id="0">a sentence obtained at the final step of the linear transformation rules</definiens>
			</definition>
			<definition id="24">
				<sentence>The level of microsituation is an interpretative level which is a function of a special component which may be called the dictionary of concrete lexemes .</sentence>
				<definiendum id="0">level of microsituation</definiendum>
				<definiendum id="1">interpretative level</definiendum>
				<definiens id="0">a function of a special component which may be called the dictionary of concrete lexemes</definiens>
			</definition>
			<definition id="25">
				<sentence>The dictionary of concrete lexemes consists of dictionary entries corresponding to separate concrete lexemes .</sentence>
				<definiendum id="0">dictionary of concrete lexemes</definiendum>
				<definiens id="0">consists of dictionary entries corresponding to separate concrete lexemes</definiens>
			</definition>
			<definition id="26">
				<sentence>However , the latter can be given a more exact interpretation : `` an animate subject ( ager~t ) brings pressure to bear on an animate object ( patient ) and the latter performs an action '' The derived macrosituation is a semantic representation corresponding to the sentences of the derived genotype language .</sentence>
				<definiendum id="0">animate subject</definiendum>
				<definiendum id="1">macrosituation</definiendum>
				<definiens id="0">a semantic representation corresponding to the sentences of the derived genotype language</definiens>
			</definition>
</paper>

		<paper id="1019">
			<definition id="0">
				<sentence>Si dans une position donn6e les deux phonemes appartiennent ~t la cat~gorie des inclus , leur environnement ne les caract~rise en aucune mani~re , donc il y a des raisons pour ignorer le coefficient qui correspond ~t cette position.90u encore si le phoneme est ddfectueux , il aura en cette position un environnement nul ou bien un environnement qui ne le caract~risera en aucune mani~re ; c'est pourquoi ces positions d6fectueuses doivent 8tre omises quand il s'agit de d6finir la dite moyenne .</sentence>
				<definiendum id="0">Si dans</definiendum>
				<definiens id="0">une position donn6e les deux phonemes appartiennent ~t la cat~gorie des inclus , leur environnement ne les caract~rise en aucune mani~re , donc il y a des raisons pour ignorer le coefficient qui correspond ~t cette position.90u encore si le phoneme est ddfectueux , il aura en cette position un environnement nul ou bien un environnement qui ne le caract~risera en aucune mani~re</definiens>
			</definition>
</paper>

		<paper id="2031">
</paper>

		<paper id="1030">
</paper>

		<paper id="2011">
</paper>

		<paper id="1018">
</paper>

		<paper id="2006">
</paper>

		<paper id="2025">
			<definition id="0">
				<sentence>TMP = temps LEU = localisation DIP .</sentence>
				<definiendum id="0">TMP</definiendum>
				<definiens id="0">temps LEU = localisation DIP</definiens>
			</definition>
			<definition id="1">
				<sentence>Nous donnons ci-dessous la liste compl &amp; e des types de bases ( formats morphologiques ) des substantifs en fonction des d~sinences qu'ils admettent ; la table 1 confient les f4minins r~partis comme ceci : 8 formats en oJ 13 formats en EJ 5 formats en QYU ; la table 2 des masculins 17 formats des 6 formats des la table 3 des masculins 6 formats des 5 formats des 10 formats des 6 formats des la table 4 des d~fectifs 4 formats des 5 formats des 1 formats des 3 formats des 5 formats des 4 formats des et neutres en OM r~partis en : masculins neutres ; et neutres en EM r~partis en : masculins durs neutres durs masculins mous neutres mous ; au singulier de tout genre dont : durs en 3 ( I durs en I durs en E durs en A 1 mous en I mous en YA au nom pluriel au nom pluriel 310 NtCOL^S NEDOBEJKINE TABLE 1 .</sentence>
				<definiendum id="0">formats morphologiques</definiendum>
			</definition>
			<definition id="2">
				<sentence>a ) n'impliquant aucune transformation de base Format D &amp; inence son interpr &amp; atiort dam ce format DS01 DS02 DS03 DS04 DS05 DS06 DS07 DS08 DS09 DS10 DSll DS12 DS13 DS13 DS14 YAM\ [ YAM ' YAX AMI AM AX Q QMI QYU I OYU o3 EYU EM OM EV OV O YI YI YA YU YU INS DAT phriel LOC INS DAT pluriel LOC NOMACC SIN INSPLU INSSIN GENDATLOCSIN , NOMPLU INSSIN GENPLU GENSIN , NOMPLU NOMPLU NOMSIN ACCSIN DATSIN APPLICATION DU SYSTEME A.T.E.F. 315 Format DS15 DS16 DS17 DS18 DS19 DS20 DS21 DS22 DS23 DS24 DS25 DS26 DS27 DS28 DS29 DS30 DS31 DS32 f D~sinence son interpretation dans ce format A U U J J Q Q ~J ~j rj YA YA A A E E E I I NOMSIN ACCSIN DATSIN GENPLU NOMSIN GENPLU NOMSIN INSSIN GENPLU INSSIN , GENPLU GENSIN GENSIN , NOMPLU GENSIN GENSIN , NOMPLU DAT LOC SIN LOC SIN NOMLOCSIN GENSIN , NOMPLU NOMPLU b ) impliquant des transformations de bases DT01 DT02 DT03 DT04 DT05 DT06 DT07 DT08 DT09 DT10 DTll EC EC EK EK OK OK IE I\ [ Ir II MYA MENA MENI ANE GENPLU NOMSIN GENPLU NOMSIN GENPLU NOMSIN NOMSIN LOCSIN GENDAT LOCSIN , NOMPLU LOCSIN , NOMPLU NOMSIN NOMPLU GENDATLOCSIN NOMPLU 316 I~ICOLAS NEDOBEJKINE Leurs paradigmes sont d &amp; rits/t l'aide de la variable DL d6j/t d6finie pour le substantif et de la variable AJ : = ( 1,2,3,4 ) qui se r6f &amp; e au type du masculin singulier au locatif et nominatif , ~t savoir : 1 = OM , YIJ ( IJ ) 2=OM , oJ 3 = YIJ ( IJ ) 4 = EM , J ( NUL ) D'autre part , pour obtenir diff &amp; entes d6rivations possibles ( forme courte , substantif en OST , comparatif en EE et superlatif en EJSH ) nous avons d6fini k l'int &amp; ieur de chaque type de flexion adjectivale des formats distincts .</sentence>
				<definiendum id="0">NOMPLU NOMPLU b</definiendum>
				<definiens id="0">DS32 f D~sinence son interpretation dans ce format A U U J J Q Q ~J ~j rj YA YA A A E E E I I NOMSIN ACCSIN DATSIN GENPLU NOMSIN GENPLU NOMSIN INSSIN GENPLU INSSIN</definiens>
				<definiens id="1">EC EC EK EK OK OK IE I\ [ Ir II MYA MENA MENI ANE GENPLU NOMSIN GENPLU NOMSIN GENPLU NOMSIN NOMSIN LOCSIN GENDAT LOCSIN</definiens>
			</definition>
			<definition id="3">
				<sentence>Une base par verbe en G ou K-+ VET7IL pour le plupart des verbes ( s'il n'y a pas de voyelle mobile ) , ou 2 bases dans le cas contraire : exemple : ZHG -+ VET7D ZHEG -+ VEPS5 Le verbe STIKHQ a la base STIG ~ VET2D 6 ) Verbes en ATQ UT en N , M la base du pr6sent -- &gt; VET5D si imp = i la base du pass6-+ VPS2 7 ) TEILETQ , MEILETQ , PEILETQ : 2 bases : TIL ~ VETHD TElL ~ VPS5 BOTOTQ , POLOTOQ , KOLOTQ : 2 bases BOIL -+ VET1S BOILO -+ VEPS2 8 ) DAVATQ , ZNAVA , STAVATQ : I base en va DAVA VETItL 9 ) BITQ , VITQ , etc ... . , VYITQ , ILYITQ , DUTQ , ILAZUTQ : 2 bases : BQ -+ VET1D BI -+ VPS2 10 ) ZHITQ , PLYITQ , etc ... . : 2 bases : ZHIV ~ VET5D ZHI ~ VPS2 11 ) DETQ , STATQ ~ identiques ~t 3 APPLICATION DU SYSTEME A.T.E.F. 323 BEZHATQ BRITQ -- &gt; 2 bases : OSHIBITQ ( SYA ) -- &gt; 1 base : REVETQ -- &gt; 2 bases : XOTEQ -- - &gt; 2 bases : IDTI ~ 2 bases : EXATQ ~ 2 bases : BYITQ -- &gt; 2 bases : DATQ ESTQ Cas partlculiers -- &gt; 2 bases : BEZH -- &gt; BEZHA -+ BRE -- &gt; BRI -+ OSHIB -- &gt; REV + KEVE - &gt; XOKH -+ XOTE - &gt; ID + SHED -- &gt; ED -+ EXA -- &gt; BUD BYI DAD -~ -- &gt; 2 bases : DA -+ El ) -- &gt; -- &gt; 2 bases : E -- &gt; VITID VPS1 VET1D VPS2 VET5R .</sentence>
				<definiendum id="0">STAVATQ</definiendum>
				<definiens id="0">2 bases : BQ -+ VET1D BI -+ VPS2 10 ) ZHITQ , PLYITQ , etc ...</definiens>
				<definiens id="1">OSHIBITQ ( SYA ) -- &gt; 1 base : REVETQ -- &gt; 2 bases : XOTEQ -- - &gt; 2 bases</definiens>
			</definition>
</paper>

		<paper id="2021">
			<definition id="0">
				<sentence>The task of the MasA is to elaborate a system for analysing simple sentences of present-day-German. ``</sentence>
				<definiendum id="0">MasA</definiendum>
				<definiens id="0">to elaborate a system for analysing simple sentences of present-day-German.</definiens>
			</definition>
			<definition id="1">
				<sentence>They , too , are described object `` ; Vot stands for the verb class with the '' Satzbauplan '' 01 ( obligatory nominative object plus obligatory accusative object ) .</sentence>
				<definiendum id="0">Vot</definiendum>
				<definiens id="0">the verb class with the '' Satzbauplan '' 01 ( obligatory nominative object plus obligatory accusative object )</definiens>
			</definition>
			<definition id="2">
				<sentence>RI : ( DET1A ) ( DET2A ) ( DET4 ) ( ADJ ) NOM ~ NG R2 : ( DETIA ) ( DET2B ) ( ADJ ) NOM ~ NG R3 : ( DET1B ) ( DET2C ) ( ADJ ) NOM ~ NG R4 : ( DET1C ) / ( DET2D ) / ( DET5 ) ( ADJ ) NOM ~ NG R5 : ( DET2C ) ( DET3 ) ( ADJ ) NOM ~ NG .</sentence>
				<definiendum id="0">RI</definiendum>
			</definition>
			<definition id="3">
				<sentence>`` A '' is an abbreviation of '' Angabe `` .</sentence>
				<definiendum id="0">A ''</definiendum>
				<definiens id="0">an abbreviation of '' Angabe</definiens>
			</definition>
			<definition id="4">
				<sentence>M is a three-dlmensional matrix which gets built up during the morphological analysis of an input sentence , and which contains all computed information of all the words of this sentence .</sentence>
				<definiendum id="0">M</definiendum>
				<definiens id="0">a three-dlmensional matrix which gets built up during the morphological analysis of an input sentence , and which contains all computed information of all the words of this sentence</definiens>
			</definition>
			<definition id="5">
				<sentence>PRAEP is the word class which stands at the extreme left in German NGs ( according to our restrictions ) ; it is the last one to be looked for .</sentence>
				<definiendum id="0">PRAEP</definiendum>
				<definiendum id="1">NGs</definiendum>
				<definiens id="0">the word class which stands at the extreme left in German</definiens>
			</definition>
			<definition id="6">
				<sentence>An example may prove this as well as the fact that there remain lots of ambiguities at this level of analysis : ( 2 ) nahe so sehr griindlich vergifteten Wdldern I PRAEP ADV ADV ADJU ADJ NOM I description I VERB t ADV ADV ADJU ADJ NOM t description 2 VERB ADVIADV ADJU ADJ NOM I description 3 VERB ADV ADV IADJU ADJ NOM I description 4 VERB ADV ADV ADJU I ADJ NOM I description 5 VERB ADV ADV ADJU VERB I NOMI description 6 ( 3 ) vor so sehr griindlich vergifteten Wiildern I PRAEP ADV ADV ADJU ADJ NOM t description 1 If PRAEP is a homograph , ADV* and ADJU* may or may not be constituents of the nominal NG ( see ( 2 ) ) .</sentence>
				<definiendum id="0">NG</definiendum>
				<definiens id="0">so sehr griindlich vergifteten Wdldern I PRAEP ADV ADV ADJU ADJ NOM I description I VERB t ADV ADV ADJU ADJ NOM t description 2 VERB ADVIADV ADJU ADJ NOM I description 3 VERB ADV ADV IADJU ADJ NOM I description 4 VERB ADV ADV ADJU I ADJ NOM I description 5 VERB ADV ADV ADJU VERB I NOMI description 6 ( 3 ) vor so sehr griindlich vergifteten Wiildern I PRAEP ADV ADV ADJU ADJ NOM t description 1 If PRAEP is a homograph , ADV* and ADJU* may or may not be constituents of the nominal</definiens>
			</definition>
			<definition id="7">
				<sentence>A nominal complex NK is a noun group or a string of noun groups which are part of a sentence .</sentence>
				<definiendum id="0">nominal complex NK</definiendum>
				<definiens id="0">a noun group or a string of noun groups which are part of a sentence</definiens>
			</definition>
</paper>

		<paper id="2019">
			<definition id="0">
				<sentence>In greater detail , the task specified by the triple &lt; a , e , v ) is carried out as follows : e , v ) and put it on the task list. alternate chain in turn. Let d be the current edge. Carry out the process de214 MARTIN KAY scribed below for each new edge d. In other words , first let d = e , then set d to the alternate of d on each occasion unless d has an alternate of O , in which case , stop. If the characters of the arc a and the edge d are not the same , do nothing. If they are the same and the arc has a replacement , then introduce a new sequence of edges into the chart to represent the replacement starting at vertex v and ending at the vertex which is the successor of d. Whether or not there is a replacement , if the arc has a successor s and the edge has a successor t , then create a new task ( s , t , v ) and put it on the task list. It will be clear from this that a task can create any number of new tasks and this is why it is necessary to keep a list of them. The entire process is set in motion by putting on the task list a task ( I , w , w ) for each vertex w in the chart. Recall that , for such purposes as this , a vertex is represented by the label of its first edge and , initially , there will be exactly one edge incident from each vertex. I might , therefore , just as well have said that a task is created for each edge in the chart. Tasks are now removed from the list and carried out until none remain. The procedure , as described so far , will result in the rules being applied to the characters of the initial string and all possible results obtainable in this way being added to the chart. However , there is no provision for applying rules to substrings that arise , in whole or in part , from the application of other rules. Part of the problem can be solved by adding a newtask ( I , n , n ) for each new vertex n that is added to the list as a result of applying a rule. In fact , the initial task list and these later additions would all be Covered by a general requirement that a task ( I , n , n ) is created for every vertex n added to the chart , initially or later. But there remains the problem of ensuring that , when new edges are introduced incident from existing vertices , all processes that should apply to that edge do in fact apply. The difficulty is that at least some tasks will already have been applied to the edges incident from that vertex and will , by now , have disappeared without trace. A simple example will show how this can arise. Suppose that the initial chart is as follows : O -- -. -- -- -- -O~ O a b MORPHOLOGICAL ANALYSIS 215 and that the rules are as in the following network : C b d The initial task list is as follows : Arc Edge Vertex 1 1 1 1 2 2 The first task is removed from the list and carried out. Since arc number 1 has an alternate , a new task is put on the list. Since we are assuming that the order of the task list is immaterial , let us add the new task at the head of the list so that we now have : Arc Edge Vertex 2 1 1 1 2 2 The current edge has no alternates so that it is the only one to be considered in this task. The/abel on the edge is a and the label on the arc is b. These do not match and the task therefore comes to an end. The next task is ( 2 , 1 , 1 ) . Arc 2 has no alternate so that no new task has to be created for it. There is only one edge to be considered and arc 2 does , in fact , have the same symbol as edge 1. There is no replacement but both arc and edge have successors. A new task is therefore created , and we place it , as before , at the head of the list , which is now as follows : Arc Edge Vertex 3 2 1 1 2 2 This new task is now immediately removed from the list to be carried out. Once again , there is only one edge to consider and its character is 216 MART~N XA '' ¢ b. This does not match the c on the arc and the task therefore terminates. Notice that there are now no tasks on the list with vertex number 1 so that there is no longer any possibility of adding new edges at that vertex. The one task remaining will cause a new edge to be added at vertex 2 which could have been successfully used by the task just completed. But it is now too late. To complete the story , task ( 1 , 2 , 2 ) is now started , leaving the task list empty. The arc and edge match and a replacement is made giving the following as the final chart : O £ , lid -O This problem can be solved in a variety of ways. Most of them consist in carefully controlling the order in which items are removed from the task list. For reasons that will emerge later , I shall here propose an alternative solution. With each vertex in the chart , there will be associated a wait list which will simply be a list of things to be done to any new edge added at that vertex. An entry on a wait list will be a couple ( arc , vertex ) . Whenever a new edge is added at the given vertex , a new task will be created for each item on the wait list , the required triple being formed by adding the new edge to the couple on the wait list. It remains only to describe how new entries are made on a wait list. This is done in a third step which we now add to the description of how tasks are carried out. belongs ~ it is not already there. In the example just considered , this will cause , among other things , a couple ( 3 , 15 to be placed on the wait list for vertex 2. When the new edge representing the character c is appended to this vertex , a new task will automatically be created , namely ( 3 , 3 , 15 , where 3 is taken to be the label of the new edge. When this task is carried out , it will lead immediately to the addition of a new edge at vertex 1 and the final chart will have the desired final form , namely : d MORPHOLOGICAL ANALYSIS 217 The principal problems that arise in dictionary consultation concern ( 1 ) what to look up , and ( 2 ) how to store and gain access to the dictionary. The problem of what to look up is the problem of deciding which of the substrings that the chart contains at the end of the rewriting process should be referred to the dictionary. We shall see that the approach we take to the second of these problems is strongly conditioned by the solution we adopt to the first. One of the earliest solutions to the problem of what to look up was the following : start at the beginning of the string and find the longest word in the dictionary that can be matched beginning at that point. Then repeat the process starting with the first unmatched character. This so-called longest-match procedure is easy to fault. In a word like underivable , it will surely recognize under as the longest initial component and go on to forage for something in the dictionary to match ivable. Furthermore , the scheme would doubtless have to be modified before it could be applied to data presented in the form of a chart because there could be more than one longest matching initial substring if they lay on different paths. Almost any process applied to a chart will necessarily have to be nondeterministic. But it is easy to see that the process of dictionary consultation must , in any case , be nondeterministic because there are many cases of morphological ambiguity. In English , there are a few words like elipses that are derivable from more than one stem ; in this case elipse and elipsis. In other languages , such examples are much easier to find. The word conti in Italian is the plural of both conto and conte and there are many other words like it. It seems , then , that nothing less than a procedure that exhausts the coverings of all the strings in the chart will have the generality we require. By a covering of a string I mean a segmentation of the string into non-overlapping substrings each of which is an entry in the dictionary. The English word interminable has only one correct segmentation that would be deemed correct in most texts , but it has at least two coverings by the English lexicon , for it is not only in qterminate + able , but also inter + mine + able. The second analysis might possibly be considered correct in a text on mining containing a sentence like These strata are not interminable with presently available machinery. Logically , there is little to distinguish dictionary consultation from the application of rewriting rules. In one case strings of characters are rewritten by other strings of characters whereas , in the other , they are rewritten by strings of items of a fundamentally different kind , namely words or the lexical descriptions of words. The principal difference is 218 MARTIN KAY that dictionary consultation is a process that does not apply to its own results ; the input always consists of characters and the output of words. But there are practical considerations that are usually adduced to distinguish dictionary consultation as a special process. Dictionaries are very large relative to many of the other bodies of data that a linguistic computer program must treat and it has therefore usually been impossible to accommodate them in the rapid-access the tree. n = 0 and skip to step 6. w differs from the word at node v. MORPHOLOGICAL ANALYSIS 22l that link and return to step 2 ; otherwise announce that the word is not in the dictionary. The method is readily recognizable as a variant of the familiar technique known as binary search. The principal difference lies in the treatment of words that share initial characters. This modification makes possible considerable economies in storage space because common initial substrings are only stored in one place. However , the variation also leads to interesting economies in the work that must be done to identify words in character strings stored in the form of a chart. Suppose the rewriting procedure is changed to allow for two kinds of task , the original rewriting tasks and what I shall call dictionary tasks. A dictionary task will be represented oll the task list by a quadruple ( node , edge , vertex , position ) in which the edge and vertex fill the same roles as in the rewriting task but , instead of an arc representing part of a rewriting rule , there is a dictionary node. Position is a number giving the number of characters of the substring that labels the dictionary node which have already been matched. A dictionary task ( n , e , v , p ) is carried out as follows : Is the character at `` \ [ edge e equal to the \ ] character at position I pofnoden ? .1 S ~ J If the char. \ [ / at edge e is I i1¢ less than the less than the 17 Let x = p I char. at pos. p of node n , let x = 0 , else let x = 1. , / I If there is a link numbered X to a node IlI~ then create task &lt; m , d , v , 1 &gt; .</sentence>
				<definiendum id="0">Italian</definiendum>
				<definiens id="0">the task specified by the triple &lt; a , e , v ) is carried out as follows : e , v ) and put it on the task list. alternate chain in turn. Let d be the current edge. Carry out the process de214 MARTIN KAY scribed below</definiens>
				<definiens id="1">in which case , stop. If the characters of the arc a and the edge d are not the same , do nothing. If they are the same and the arc has a replacement , then introduce a new sequence of edges into the chart to represent the replacement starting at vertex v and ending at the vertex which is the successor of d. Whether or not there is a replacement , if the arc has a successor s and the edge has a successor t , then create a new task ( s , t , v</definiens>
				<definiens id="2">a task is created for each edge in the chart. Tasks are now removed from the list and carried out until none remain. The procedure , as described so far , will result in the rules being applied to the characters of the initial string and all possible results obtainable in this way being added to the chart. However , there is no provision for applying rules to substrings that arise , in whole or in part , from the application of other rules. Part of the problem can be solved by adding a newtask ( I , n , n ) for each new vertex n that is added to the list as a result of applying a rule. In fact , the initial task list and these later additions would all be Covered by a general requirement that a task ( I , n , n ) is created for every vertex n added to the chart , initially or later. But there remains the problem of ensuring that , when new edges are introduced incident from existing vertices , all processes that should apply to that edge do in fact apply. The difficulty is that at least some tasks will already have been applied to the edges incident from that vertex and will , by now , have disappeared without trace. A simple example will show how this can arise. Suppose that the initial chart is as follows : O -- -. -- -- -- -O~ O a b MORPHOLOGICAL ANALYSIS 215 and that the rules are as in the following network : C b d The initial task list is as follows : Arc Edge</definiens>
				<definiens id="3">no alternate so that no new task has to be created for it. There is only one edge to be considered and arc 2 does , in fact</definiens>
				<definiens id="4">now immediately removed from the list to be carried out. Once again , there is only one edge to consider and its character is 216 MART~N XA '' ¢ b. This does not match the c on the arc and the task therefore terminates. Notice that there are now no tasks on the list with vertex number 1 so that there is no longer any possibility of adding new edges at that vertex. The one task remaining will cause a new edge to be added at vertex 2 which could have been successfully used by the task just completed. But it is now too late. To complete the story</definiens>
				<definiens id="5">now started , leaving the task list empty. The arc and edge match and a replacement is made giving the following as the final chart : O £ , lid -O This problem can be solved in a variety of ways. Most of them consist in carefully controlling the order in which items are removed from the task list. For reasons that will emerge later , I shall here propose an alternative solution. With each vertex in the chart , there will be associated a wait list which will simply be a list of things to be done to any new edge added at that vertex. An entry on a wait list will be a couple ( arc , vertex ) . Whenever a new edge is added at the given vertex , a new task will be created for each item on the wait list , the required triple being formed by adding the new edge to the couple on the wait list. It remains only to describe how new entries are made on a wait list. This is done in a third step which we now add to the description of how tasks</definiens>
				<definiens id="6">15 to be placed on the wait list for vertex 2. When the new edge representing the character c is appended to this vertex</definiens>
				<definiens id="7">the addition of a new edge at vertex 1 and the final chart will have the desired final form , namely : d MORPHOLOGICAL ANALYSIS 217 The principal problems that arise in dictionary consultation concern ( 1 ) what to look up , and ( 2 ) how to store and gain access to the dictionary. The problem of what to look up is the problem of deciding which of the substrings that the chart contains at the end of the rewriting process</definiens>
				<definiens id="8">the problem of what to look up was the following : start at the beginning of the string and find the longest word in the dictionary that can be matched beginning at that point. Then repeat the process starting with the first unmatched character. This so-called longest-match procedure is easy to fault. In a word like underivable , it will surely recognize under as the longest initial component and go on to forage for something in the dictionary to match ivable. Furthermore , the scheme would doubtless have to be modified before it could be applied to data presented in the form of a chart because there could be more than one longest matching initial substring if they lay on different paths. Almost any process applied to a chart will necessarily have to be nondeterministic. But it is easy to see that the process of dictionary consultation must , in any case</definiens>
				<definiens id="9">other words like it. It seems , then , that nothing less than a procedure that exhausts the coverings of all the strings in the chart will have the generality we require. By a covering of a string I mean a segmentation of the string into non-overlapping substrings each of which is an entry in the dictionary. The English word interminable has only one correct segmentation that would be deemed correct in most texts , but it has at least two coverings by the English lexicon , for it is not only in qterminate + able , but also inter + mine + able. The second analysis might possibly be considered correct in a text on mining containing a sentence like These strata are not interminable with presently available machinery. Logically , there is little to distinguish dictionary consultation from the application of rewriting rules. In one case strings of characters are rewritten by other strings of characters whereas , in the other , they are rewritten by strings of items of a fundamentally different kind</definiens>
				<definiens id="10">a process that does not apply to its own results ; the input always consists of characters and the output of words. But there are practical considerations that are usually adduced to distinguish dictionary consultation as a special process. Dictionaries are very large relative to many of the other bodies of data that a linguistic computer program must treat and it has therefore usually been impossible to accommodate them in the rapid-access the tree. n = 0 and skip to step 6. w differs from the word at node v. MORPHOLOGICAL ANALYSIS 22l that link and return to step 2</definiens>
				<definiens id="11">a variant of the familiar technique known as binary search. The principal difference lies in the treatment of words that share initial characters. This modification makes possible considerable economies in storage space because common initial substrings are only stored in one place. However , the variation also leads to interesting economies in the work that must be done to identify words in character strings stored in the form of a chart. Suppose the rewriting procedure is changed to allow for two kinds of task , the original rewriting tasks and what I shall call dictionary tasks. A dictionary task will be represented oll the task list by a quadruple ( node , edge , vertex , position ) in which the edge and vertex fill the same roles as in the rewriting task but , instead of an arc representing part of a rewriting rule</definiens>
				<definiens id="12">a number giving the number of characters of the substring that labels the dictionary node which have already been matched. A dictionary task ( n , e , v , p ) is carried out as follows : Is the character at `` \ [ edge e equal to the \ ] character at position I pofnoden ? .1 S ~ J If the char. \ [ / at edge e is I i1¢ less than the less than the 17 Let x = p I char. at pos. p of node n , let x = 0 , else let x = 1.</definiens>
			</definition>
			<definition id="1">
				<sentence>Ye~ Is the last character at \ ] node n in position p ?</sentence>
				<definiendum id="0">Ye~</definiendum>
			</definition>
</paper>

		<paper id="1028">
			<definition id="0">
				<sentence>Each entry consists of an English adverb , its German translation equivalents , and syntactic and semo-syntactic features as described under 2.4.5 .</sentence>
				<definiendum id="0">entry</definiendum>
				<definiens id="0">consists of an English adverb , its German translation equivalents , and syntactic and semo-syntactic features as described under 2.4.5</definiens>
			</definition>
			<definition id="1">
				<sentence>Optionality of complements is expressed by the value LA ( lambda ) with a comma , as in FC ( A , LA ) , which reads `` this verb ( or adjective ) takes an optional complement noun phrase in the accusative '' 328 ANNETTE STACHOWITZ c ) The additional restrictions consist at present mainly of tags indicating the subject area for those words which are restricted to or hav % special usage in such areas as zoology , law , music , etc .</sentence>
				<definiendum id="0">LA )</definiendum>
			</definition>
</paper>

		<paper id="1012">
			<definition id="0">
				<sentence>In order to acc0mplish these goals , the contents of the etymological dictionary were put on cards , each of which contained the following entries : a ) a non-Cornish word ( with an indication of the language to which it belongs ) ; b ) the Cornish word related in the dictionary to the item under a ) ; c ) the type of relationship existing between item a ) and item b ) ; and whether this relationship is afftrmed , denied or uncertain ; d ) the indication that item b ) is or is not a nominal compound ( this being the only type of compound found in Old Cornish ) ; e ) in the event that item b ) is a nominal compound , a breakdown of the elements contained in it ; 2 f ) the page from which the foregoing material was taken .</sentence>
				<definiendum id="0">c</definiendum>
				<definiens id="0">contained the following entries : a ) a non-Cornish word ( with an indication of the language to which it belongs ) ; b ) the Cornish word related in the dictionary to the item under a ) ;</definiens>
				<definiens id="1">a nominal compound</definiens>
			</definition>
			<definition id="1">
				<sentence>- '' To these eleven ratings will be added that of 0 which will not indicate the relationship between Cornish and non-Cornish voices , as in the case of the other ratings , but will serve instead to distinguish the nonCornish words ( actually , Cymric ) which , due to the various vicissitudes of the handwritten tradition , have crept into the authentic Cornish glosses and which , as such , do not form part of the present study .</sentence>
				<definiendum id="0">Cymric )</definiendum>
				<definiens id="0">do not form part of the present study</definiens>
			</definition>
</paper>

		<paper id="2009">
			<definition id="0">
				<sentence>Nous avons donc recours aux services de professionnels dans le domaine , la Soci &amp; 6 de Math4matiques Appliqu4es ( SMA ) de Montreal , compagnie de consultants qui est unique au Qu4bec .</sentence>
				<definiendum id="0">Nous avons donc recours</definiendum>
				<definiens id="0">SMA ) de Montreal , compagnie de consultants qui est unique au Qu4bec</definiens>
			</definition>
</paper>

		<paper id="2012">
</paper>

		<paper id="1023">
</paper>

		<paper id="2028">
			<definition id="0">
				<sentence>The REQUEST ( Restricted English Question-answering ) System is an experimental natural language query system currently under development at the n3M Thomas J. Watson Research Center .</sentence>
				<definiendum id="0">REQUEST</definiendum>
				<definiens id="0">Restricted English Question-answering ) System is an experimental natural language query system currently under development at the n3M Thomas J. Watson Research Center</definiens>
			</definition>
			<definition id="1">
				<sentence>l~qu~sT thus differs markedly from such well-known systems as those of F. B. T~OlVIPSON ( 1973 ) ( direct semantic interpretation of surface structures ) , W. A. WOODS ( 1972 ) ( representation of grammatical information and parsing strategy in augmented transition networks ) , and T. WINOGRAD ( 1972 ) ( direct incorporation of grammatical information within the parsing program ) .</sentence>
				<definiendum id="0">T. WINOGRAD</definiendum>
				<definiens id="0">representation of grammatical information and parsing strategy in augmented transition networks</definiens>
			</definition>
			<definition id="2">
				<sentence>The current version of the REQUEST System consists of a set of programs written in Lisp 1.5 , together with an associated set of data files containing the lexicon , grammar , semantic interpretation rules , and data base .</sentence>
				<definiendum id="0">REQUEST System</definiendum>
				<definiens id="0">consists of a set of programs written in Lisp 1.5 , together with an associated set of data files containing the lexicon , grammar , semantic interpretation rules , and data base</definiens>
			</definition>
			<definition id="3">
				<sentence>EPROCESSING OUTPUT : ( ( WHAT ( OR ( VADJ ( + ADJ + QUANT ) WH SOME ) ( NP ( NOM ( V ( + ADJ + QUANT ) WH SOME ) ( NOM ( NOUN ( -HUMAN + SG ) ( V THING ) ( INDEX ( -CONST ) Xl ) ) ) ) ) ) ) ( WAS ( AUK ( + PAST + SG ) BE ) ) ( GM ( NPROPNOM ( NOUN ( -HUMAN + SG ) ( INDEX ( + CONST + CO ) GM ) ) ) ) ( 'S ( GENAF 'S ) ( GROSS-INCOME ( NMNL ( -HUMAN + SG + Q NOUN + ARG1 + PERIODIC + NMNL ) ( V ( + POSS2 ) AMOUNT MONEY GROSS ) ( INDEX ( CONST ) X5 ) ) ) ( FOR .</sentence>
				<definiendum id="0">EPROCESSING OUTPUT</definiendum>
				<definiendum id="1">AMOUNT MONEY GROSS ) ( INDEX</definiendum>
				<definiens id="0">VADJ ( + ADJ + QUANT ) WH SOME ) ( NP ( NOM ( V ( + ADJ + QUANT ) WH SOME ) ( NOM ( NOUN ( -HUMAN + SG ) ( V THING ) ( INDEX ( -CONST ) Xl ) ) ) ) ) ) ) ( WAS ( AUK ( + PAST + SG ) BE ) ) ( GM ( NPROPNOM ( NOUN ( -HUMAN + SG ) ( INDEX ( + CONST + CO ) GM ) ) ) ) ( 'S ( GENAF 'S ) ( GROSS-INCOME ( NMNL ( -HUMAN + SG + Q NOUN + ARG1 + PERIODIC + NMNL ) ( V ( + POSS2 )</definiens>
			</definition>
			<definition id="4">
				<sentence>TCMPDBLK exemplifies the interaction of syntactic and semantic information in the transformational component of the REQUEST System , in that it filters out a variety of otherwise acceptable structures in which a noun phrase or prepositional phrase with head noun marked ( + TIME ) is adjacent to a noun phrase with head noun marked ( + PERIODIC ) , but where the former is not analyzed as a modifier of the latter .</sentence>
				<definiendum id="0">TCMPDBLK</definiendum>
				<definiens id="0">exemplifies the interaction of syntactic and semantic information in the transformational component of the REQUEST System</definiens>
			</definition>
			<definition id="5">
				<sentence>GO TO CONTINUATION 1.11 CONTINUATION 1.11 : ( BD BE EQUAL ( GM ( ( ( AMOUNT MONEY GROSS ) IS ) 1970 ) ) ( A ( ( ( WH SOME ) LARGE ) ( AMOUNT xl ) ) ) BD ) AUXlNUMA APPLIED .</sentence>
				<definiendum id="0">BD BE EQUAL ( GM</definiendum>
			</definition>
			<definition id="6">
				<sentence>GO TO CONTINUATION 1.13 CONTINUATION 1.13 : ( BD EQUAL ( GM ( ( ( AMOUNT MONEY GROSS ) X5 ) ( ¢ 1970 ~ ) ) ) ( A ( ( ( WH SOME ) LARGE ) ( AMOUNT X1 ) ) ) BD ) NPPREPOS APPLIED .</sentence>
				<definiendum id="0">BD EQUAL ( GM ( ( ( AMOUNT MONEY GROSS ) X5 )</definiendum>
				<definiendum id="1">LARGE )</definiendum>
				<definiens id="0">A ( ( ( WH SOME )</definiens>
			</definition>
			<definition id="7">
				<sentence>GO TO CONTINUATION 4.3 CONTINUATION 4.3 : ( BD ( AMOUNT MONEY GROSS i X5 GM 1970 BD ) SEARCHING FOR EMBEDDED CLAUSES A STRUCTURAL DESCRIPTION OF SENTENCE 4 : ( BD ( AMOUNT MONEY GROSS ) X5 GM 1970 'BD ) A STRUCTURAL DESCRIPTION OF SENTENCE 1 : ( BD EQUAL ( THE ( X5 ( ~ ' BD ( AMOUNT MONEY GROSS ) X5 GM 1970 BD '0 ) ) ( A ( ( ( WH SOME ) LARGE ) ( AMOUNT Xl ) ) ) BD ) UNDERLYING STRUCTURES : LARGE ) ( AMOUNT X1 ) ) ) BD ) LOGICAL FORM : `` ( SIZEOF ( SETX ( QUOTE Xl ) ( QUOTE ( AND ( EQUAL ( QUOTE 18752354000 ) X1 ( AMOUNT Xl ) ) ) ) ) ANSWERS : NEXT QUESTION ?</sentence>
				<definiendum id="0">SIZEOF</definiendum>
				<definiens id="0">A ( ( ( WH SOME ) LARGE ) ( AMOUNT Xl ) ) ) BD ) UNDERLYING STRUCTURES : LARGE ) ( AMOUNT X1 ) ) ) BD</definiens>
			</definition>
			<definition id="8">
				<sentence>Processing the structure against the remainder of the postcyclic transformations successively deletes the preposition `` in '' in favor of the features ( q-LOC2 ) and ( + IN2 ) ( continuation 1.6 ) , replaces `` thing `` by the more specific noun `` amount `` ( continuation 1.7 ) , expands ( ( WH SOME ) ( AMOUNT X1 ) ) intoa ( A ( ( ( WH SOME ) LARGE ) ( AMOUNT X1 ) ) ) ( continuation 1.8 ) , and finally eliminates the ( qWH ) feature on the NP dominating the latter ( continuation 1.9 ) i ( It should be noted here in passing that the WHATNUMA transformation not only accounts in part for the underlying equivalence of sentence pairs like `` What were GM 's earnings ? ``</sentence>
				<definiendum id="0">WH SOME )</definiendum>
				<definiendum id="1">intoa</definiendum>
				<definiens id="0">A ( ( ( WH SOME ) LARGE ) ( AMOUNT X1 ) ) ) ( continuation 1.8 ) , and finally eliminates the ( qWH ) feature on the NP dominating the latter</definiens>
			</definition>
			<definition id="9">
				<sentence>The final transformation that applies in the first cycle is inverse noun formation ( ORDNOUNF ) , which moves the V dominating ( AMOUNT MONEY GROSS ) into the subordinate clause fragment as main predicate along with an NP dominating a copy of the variable X5 , with the original copy of X5 remaining outside the subordinate clause as the `` binding `` instance of that variable .</sentence>
				<definiendum id="0">ORDNOUNF</definiendum>
				<definiens id="0">moves the V dominating</definiens>
			</definition>
</paper>

		<paper id="2017">
			<definition id="0">
				<sentence>Exemple : These pigs bread three times a year The farmer breed these pigs three times a year Le groupe ( 1 ) est pris comme un compl~ment ~ la phrase ( ajout la phrase ) et le groupe ( 2 ) est analysd comme l'objet .</sentence>
				<definiendum id="0">Exemple</definiendum>
				<definiens id="0">1 ) est pris comme un compl~ment ~ la phrase ( ajout la phrase</definiens>
			</definition>
</paper>

		<paper id="2020">
			<definition id="0">
				<sentence>Thus an ALGORITrIM OF LIMITED SYNTAX ( ALS ) in the form of several fundamental syntagms is gained , which pre230 PETER KI3MMEL serves a full scale consolidation of the natural momentum and enables the user to feel familiar at once .</sentence>
				<definiendum id="0">ALGORITrIM OF LIMITED SYNTAX ( ALS</definiendum>
				<definiendum id="1">pre230 PETER KI3MMEL</definiendum>
				<definiens id="0">serves a full scale consolidation of the natural momentum and enables the user to feel familiar at once</definiens>
			</definition>
			<definition id="1">
				<sentence>The RADICAL represents a vertex to the origill -~ i i i .</sentence>
				<definiendum id="0">RADICAL</definiendum>
				<definiens id="0">a vertex to the origill -~ i i i</definiens>
			</definition>
			<definition id="2">
				<sentence>AN ALGORITHM OF LIMITED SYNTAX 235 If an information unit or RADICAL turns out to be not new , the exact age has to be determined .</sentence>
				<definiendum id="0">ALGORITHM OF LIMITED SYNTAX 235 If</definiendum>
				<definiens id="0">an information unit or RADICAL turns out to be not new , the exact age has to be determined</definiens>
			</definition>
			<definition id="3">
				<sentence>The Relative frequency substitutes more or less Shannon/Weaver 's Bit-Metric .</sentence>
				<definiendum id="0">Relative frequency</definiendum>
			</definition>
			<definition id="4">
				<sentence>An individual associates with a certain meaning ( RADICAL ) another meaning , which lies far away from the Cluster-Branches of the first concern ( Fig .</sentence>
				<definiendum id="0">RADICAL</definiendum>
				<definiendum id="1">meaning</definiendum>
			</definition>
			<definition id="5">
				<sentence>The RADICAL represents the counter-part to the PARTICLE in ALs-Texts .</sentence>
				<definiendum id="0">RADICAL</definiendum>
				<definiens id="0">the counter-part to the PARTICLE in ALs-Texts</definiens>
			</definition>
			<definition id="6">
				<sentence>Newsweek correspondent Tony Clifton reports how Macao , once known as the world 's wickedest city , is flourishing against all oddsand changing in the process .</sentence>
				<definiendum id="0">Newsweek correspondent Tony Clifton</definiendum>
				<definiens id="0">reports how Macao , once known as the world 's wickedest city , is flourishing against all oddsand changing in the process</definiens>
			</definition>
			<definition id="7">
				<sentence>Each RADICAL represents one meaning .</sentence>
				<definiendum id="0">RADICAL</definiendum>
				<definiens id="0">one meaning</definiens>
			</definition>
			<definition id="8">
				<sentence>Consequently ALs-Texts can be printed for answers in 10 different national languages .</sentence>
				<definiendum id="0">Consequently ALs-Texts</definiendum>
			</definition>
</paper>

		<paper id="2016">
</paper>

		<paper id="1002">
			<definition id="0">
				<sentence>Then denotes : P ( A ) : the set of all subsets of A ( the powerset of A ) A* : the free monoid over A A × B : the cartesian product of A and B I xl : the `` length '' of x ~ A* ( the number of elements of A which x consists of ) ; I xl ~ IN .</sentence>
				<definiendum id="0">P ( A )</definiendum>
				<definiendum id="1">× B</definiendum>
				<definiens id="0">the set of all subsets of A ( the powerset of A ) A* : the free monoid over A A</definiens>
			</definition>
			<definition id="1">
				<sentence>c ) B is any description of w. Let 113 be the set of all intended descriptions of all sequences of words and punctuation-signs of some language .</sentence>
				<definiendum id="0">c ) B</definiendum>
				<definiens id="0">any description of w. Let 113 be the set of all intended descriptions of all sequences of words</definiens>
			</definition>
			<definition id="2">
				<sentence>, B ) L X : b ) c ) LEX is a relation between ( P ( WORD ) ) * and XB .</sentence>
				<definiendum id="0">LEX</definiendum>
				<definiens id="0">a relation between ( P ( WORD ) ) * and XB</definiens>
			</definition>
			<definition id="3">
				<sentence>1 ) A : = { x\ [ x~IN^O &lt; x &lt; 4 } x is element of A : . , * x e IN^ 0 &lt; x &lt; 4 2 ) w is a noun : , , w has some characteristics like prefix , suffix and SO on. 3 ) w is a verb : ~* a part of w ( the stem ) is element of a list and suffix and prefix have some characteristics. In both cases ( extensional or intentional ) the lexicon has the abstract form : w description of w ( w , B ) OT Let x E segm ( CHAR* ) Case I. x = ep. There is nothing to analyse. Case 2. a. ~ ~N such that x = { Ul } { .~ } ... { .. } ^ ui e WORD2 O PS ( i= 1 , 2 , ... , n ) . Let { q , t~ ... . , t , } c_ { 1 , 2 , ... , n } ; p ~ &gt; 1 Let k be a map k : { tl , t , ... .. tp } -- -+ { tl , t , , ... , tp } such that k is ONE-TO-ONE and ONTO .</sentence>
				<definiendum id="0">B ) OT</definiendum>
				<definiens id="0">a verb : ~* a part of w ( the stem ) is element of a list</definiens>
				<definiens id="1">Let x E segm ( CHAR* ) Case I. x = ep. There is nothing to analyse. Case 2. a. ~ ~N such that x = { Ul } { .~ } ... { .. } ^ ui e WORD2 O PS ( i= 1 , 2 , ... , n ) . Let { q</definiens>
				<definiens id="2">a map k : { tl , t , ... .. tp } -- -+ { tl , t , , ... , tp } such that k is ONE-TO-ONE and ONTO</definiens>
			</definition>
			<definition id="4">
				<sentence>Then ( k ( q ) , k ( &amp; ) , ... , k ( tp ) ) is a permutation of ( tx , t , ... .. tp ) .</sentence>
				<definiendum id="0">... , k</definiendum>
				<definiens id="0">a permutation of ( tx , t , ... .. tp )</definiens>
			</definition>
</paper>

		<paper id="1020">
</paper>

		<paper id="2026">
			<definition id="0">
				<sentence>Greek shows great freedom in forming compound verbs by the addition of prepositional prefixes .</sentence>
				<definiendum id="0">Greek</definiendum>
				<definiens id="0">shows great freedom in forming compound verbs by the addition of prepositional prefixes</definiens>
			</definition>
			<definition id="1">
				<sentence>The lemma field in the stem list is an index into the Lemma Table , which gives the length of the lemma and its origin within the Lemma String .</sentence>
				<definiendum id="0">lemma field</definiendum>
				<definiens id="0">an index into the Lemma Table , which gives the length of the lemma and its origin within the Lemma String</definiens>
			</definition>
</paper>

		<paper id="1029">
</paper>

		<paper id="1007">
			<definition id="0">
				<sentence>In general , a context-free grammar consists of a set of rewriting rules each of which is of the form ( 1.1 ) A .</sentence>
				<definiendum id="0">context-free grammar</definiendum>
				<definiens id="0">consists of a set of rewriting rules each of which is of the form ( 1.1 ) A</definiens>
			</definition>
			<definition id="1">
				<sentence>Based on the explicit syntax given by Scott and Strachey in the form of context-free grammar , we can describe this syntax for binary numerals by the following logical formulae : ON LOGICAL FORMULATION OF THE ' COMPUTATION PROCESS Numeral ( ~ Numeml ( 1 ) Numeml ( ~ Numeml ( ~ Numeral ( x-0 ) Numeral ( xA1 ) , 91 f : Nml ~ N. Thus , for each x ~ Nml , the function value f ( x ) is the number denoted by the numeral x. Based on the idea of the semantical equations given by Scott and Strachey and using our general principles described in ~ 2 , we can use the language of predicate logic to state the following semantic rules which define precisely this evaluation function : ( 3.1 ) ( 3.2 ) ( 3.3 ) ( 3.4 ) Numeral ( 0 ) ~ f ( O ) = O , Numeral ( 1 ) D f ( 1 ) = 1 , Numeral ( x ) , , Numeral ( x-O ) = f ( x~O ) = If ( x ) , Numeral ( x ) , , Numeral ( xA1 ) = f ( xA1 ) = 2f ( x ) + 1 .</sentence>
				<definiendum id="0">function value f ( x )</definiendum>
				<definiens id="0">the number denoted by the numeral x. Based on the idea of the semantical equations given by Scott</definiens>
			</definition>
			<definition id="2">
				<sentence>To give an account of meanings ( or denotations ) of the various parts of a sentence and their relationships , Suppes introduces set-theoretical functions , just like we have used number-theoretic functions in the semantical system for the language of numerals .</sentence>
				<definiendum id="0">Suppes</definiendum>
				<definiens id="0">the semantical system for the language of numerals</definiens>
			</definition>
			<definition id="3">
				<sentence>In Suppes 's explicit formulation , the nodes of the phrase-marker will be numbered , so that the denotation function f is actually defined for pairs ( n , s ) , where n is the number assigned to a node of the phrase-marker and s is a terminal or nonternfinal symbol .</sentence>
				<definiendum id="0">n</definiendum>
				<definiens id="0">the number assigned to a node of the phrase-marker and s is a terminal or nonternfinal symbol</definiens>
			</definition>
			<definition id="4">
				<sentence>f ( y-x7x-f ... -x , ) = g ( f ( y ) , f ( x 0 ... .. f ( x , ) ) , based on the assumption , that the meaning of an expression depends on the meanings of its parts ; it is a function of the meanings of its parts .</sentence>
				<definiendum id="0">f</definiendum>
				<definiendum id="1">f</definiendum>
				<definiens id="0">x , ) ) , based on the assumption , that the meaning of an expression depends on the meanings of its parts</definiens>
			</definition>
			<definition id="5">
				<sentence>In his semantic theory for categorial grammar , Lewis holds , however , the view that the result of concatenating a phrase of the category c/q ... c~ with intension i0 , a phrase of the category c1 with intension/1 , ... , and a phrase of the category q with intension i , is a phrase of the category e with intension ; 0 ( il ... .. i. ) .</sentence>
				<definiendum id="0">semantic theory</definiendum>
				<definiens id="0">the view that the result of concatenating a phrase of the category c/q ... c~ with intension i0 , a phrase of the category c1 with intension/1 , ... , and a phrase of the category q with intension i , is a phrase of the category e with intension ; 0</definiens>
			</definition>
</paper>

		<paper id="2024">
			<definition id="0">
				<sentence>Morphology is that part of linguistics which studies word formation and provides us with rules and explanation about the internal structure of a word .</sentence>
				<definiendum id="0">Morphology</definiendum>
				<definiens id="0">that part of linguistics which studies word formation and provides us with rules and explanation about the internal structure of a word</definiens>
			</definition>
</paper>

		<paper id="2030">
</paper>

		<paper id="1021">
</paper>

		<paper id="2014">
</paper>

		<paper id="2001">
			<definition id="0">
				<sentence>* Each group consists of words of equal or nearly equal values of frequency .</sentence>
				<definiendum id="0">Each group</definiendum>
				<definiens id="0">consists of words of equal or nearly equal values of frequency</definiens>
			</definition>
			<definition id="1">
				<sentence>The most frequently used n words belong to the group with rank 1 , the following n words constitute the group with rank 2 and the words having in the dictionary numbers from ( i1 ) n + 1 till i.n constitute a group with rank i. Then the ratio N ( i , t ) of words with an age equal to or greater than t in the i-th group of the dictionary is : ( 1 ) N ( ; , 0 = ~v ( Kt V~ ) where K is a constant .</sentence>
				<definiendum id="0">K</definiendum>
			</definition>
</paper>

		<paper id="2002">
			<definition id="0">
				<sentence>INTRODUCTION People use language principally as a means of communication , each language community determining the scope of the particular language it uses .</sentence>
				<definiendum id="0">INTRODUCTION People</definiendum>
			</definition>
			<definition id="1">
				<sentence>nl is the number of sentences in which a given syntagm appears x~ times .</sentence>
				<definiendum id="0">nl</definiendum>
				<definiens id="0">the number of sentences in which a given syntagm appears x~ times</definiens>
			</definition>
</paper>

		<paper id="2029">
</paper>

		<paper id="1016">
</paper>

		<paper id="2004">
			<definition id="0">
				<sentence>In the tables , NR stands for `` No response '' , and TC stands for `` Total Confusion '' which is the sum of all the readings which appears on the left or right of the diagonal plus NR .</sentence>
				<definiendum id="0">NR</definiendum>
				<definiendum id="1">TC</definiendum>
				<definiens id="0">the sum of all the readings which appears on the left or right of the diagonal plus NR</definiens>
			</definition>
			<definition id="1">
				<sentence>Consonants First Second Problable Error Probable Error Initial Middle Final Combined Initial Middle Final position position position Error position position position k kh kh kh kh g~h* kh k k k k g gh gh gh gh k* k* gh g kh g g kh* g c ch ch ch ch j j* ch c c c c j jh jh jh jh c* jh ch ch j ch/j j j T D TH TH TH/D TH D* TH T T T T D D DH DH DH T* DH D D D T/TH* T* t th th th th dh* dh* th t t t t dh* d dh dh dh d d d d t/th th* p ph b ph ph bh* ph p p p* p b bh bh bh bh p ph* bh b b ph b~h p~h* ph* R RH RH RH RH R R R gh* g* kh* e* C* DH* DH* d t* t # h* b b * l~epresents insignificant error ( CONFUSION is 5 % or less ) Underlined consonants are significant errors ( CONFUSION is 33 % or more ) PERCEPTION AND ACQUISITION OF ASPIRATION 41 The probable error in initial , medial and final position is determined from Tables I , rt and m respectively .</sentence>
				<definiendum id="0">CONFUSION</definiendum>
				<definiendum id="1">CONFUSION</definiendum>
				<definiens id="0">Consonants First Second Problable Error Probable Error Initial Middle Final Combined Initial Middle Final position position position Error position position position k</definiens>
			</definition>
			<definition id="2">
				<sentence>For example : Confusion/k/and/kh/ ( Diagonal indicates confusion of/g/for/gh/ etc. and vice versa ) k , e , t , T , P kh , ch , TH th , ph g , i , D , d , b gh , /h , DH dh , bh unvoiced unvoiced unaspirated aspirated k.c , T , t , p kh , ch , TD th , ph voiced voiced unaspirated aspirated ~ , j , D , d , b gh , ih , Dh , dh R bh , RH Confusion of/T/for/D/ ( /bh/was mistaken for/ph\ [ ) unvoiced unvoiced voiced voiced unaspirated aspirated unaspirated aspirated A contrastive analysis of a fragment of Hindi and English sounds will predict the following bilingual interference : ( 1 ) In English , only unvoiced aspirated consonants occur in initial position so it is likely that an English speaker will replace unvoiced 44 T~J K. BHATIA unaspirated consonants by unvoiced aspirated ones .</sentence>
				<definiendum id="0">RH Confusion of/T/for/D/</definiendum>
				<definiens id="0">bh unvoiced unvoiced unaspirated aspirated k.c , T , t , p kh , ch</definiens>
			</definition>
</paper>

		<paper id="1008">
			<definition id="0">
				<sentence>Friedman introduced a new type of feature , called contextual , which comprises Chomsky 's strict subcategorization and selectional restrictions ; i.e. , it is all the same for further processing , whether a THE INTERACTIVE VERSION OF THE T.G.T.-SYSTEM 105 contextual rule involves features , like ( a ) or just category symbols , like ( b ) in ( Fig .</sentence>
				<definiendum id="0">contextual</definiendum>
				<definiens id="0">comprises Chomsky 's strict subcategorization and selectional restrictions</definiens>
			</definition>
			<definition id="1">
				<sentence>The main innovation is the concept of the `` side effects `` , which makes the selectional rules independent of the order of inserting lexical items into the derivational tree .</sentence>
				<definiendum id="0">main innovation</definiendum>
				<definiens id="0">makes the selectional rules independent of the order of inserting lexical items into the derivational tree</definiens>
			</definition>
</paper>

		<paper id="2003">
			<definition id="0">
				<sentence>1 On this basis it is possible to come to the conclusion of bilateral dependency of the language organization level ( the level of its complexity ) on ( 1 ) complexity value of the language mechanism input information stream , and ( 2 ) complexity value of the output information stream which is to be produced by the language mechanism .</sentence>
				<definiendum id="0">organization level</definiendum>
			</definition>
			<definition id="1">
				<sentence>The stabilising level of an optimum redundancy of the sign messages in these conditions , beyond doubt , is higher than during the period , which preceded the reconstructions of the language system , because in order to reach the optimum ( i.e. preceding ) level of understanding with the help of the most general in their meaning sign- '' hints `` , it is necessary to describe the object of a message from several various points .</sentence>
				<definiendum id="0">stabilising level</definiendum>
				<definiens id="0">i.e. preceding ) level of understanding with the help of the most general in their meaning sign- '' hints</definiens>
			</definition>
</paper>

		<paper id="2005">
			<definition id="0">
				<sentence>THE ITALIAN MACHINE DICTIONARY : A SEMANTIC APPROACH 51 processing as an auxiliary tool in the study of the style of individual authors , schools , or literary genres .</sentence>
				<definiendum id="0">ITALIAN MACHINE DICTIONARY</definiendum>
				<definiens id="0">A SEMANTIC APPROACH 51 processing as an auxiliary tool in the study of the style of individual authors , schools , or literary genres</definiens>
			</definition>
			<definition id="1">
				<sentence>a ) They are conceived so as to be , as far as possible , generalized ( i.e. applicable to all the texts processed at the Dr , whatsoever their nature , language , or the purpose of the processing ) , 1° flexible ( the user can activate , within the set of rules which constitute the `` algorithmic linguistic knowledge '' of the program , those rules which best respond to his particular needs ) , 11 and modular ( the components must be inter-compatible and open to the inclusion of any eventual new components : the inter-compatibility is ensured by exchangeinterfaces between the various components ; these interfaces consist in a formalism which provides structures , organizations and codes for the representation of linguistic units both at the text and at the linguistic system level ) .</sentence>
				<definiendum id="0">modular</definiendum>
				<definiens id="0">possible , generalized ( i.e. applicable to all the texts processed at the Dr , whatsoever their nature , language , or the purpose of the processing ) , 1° flexible ( the user can activate , within the set of rules which constitute the `` algorithmic linguistic knowledge '' of the program , those rules which best respond to his particular needs</definiens>
			</definition>
			<definition id="2">
				<sentence>Secondly , LDP studies algorithms which permit the data to be structured conveniently , organizing them so that their regularity , diversity , correlations , etc. , can be evidenced without it being necessary to make this organisation dependent on the `` a priori `` choice of a general global theoretical model .</sentence>
				<definiendum id="0">etc.</definiendum>
				<definiens id="0">permit the data to be structured conveniently , organizing them so that their regularity , diversity , correlations ,</definiens>
			</definition>
			<definition id="3">
				<sentence>The project described in the following pages by N. Calzolari and L. Pecchia is an original development in the field of semantics along these general planning lines .</sentence>
				<definiendum id="0">L. Pecchia</definiendum>
				<definiens id="0">an original development in the field of semantics along these general planning lines</definiens>
			</definition>
			<definition id="4">
				<sentence>THE ITALIAN MACHINE DICTIONARY : A SEMANTIC APPROACH 63 depth occurrence occurrence of the marker as 1st marker ESSERE 1 0 0 ( being ) 2 93 90 3 135 43 4 33 10 5 4 4 total 265 147 ANIMALE 1 1 1 ( animal ) 2 42 40 3 139 53 4 11 2 5 1 1 total 194 97 MAMMIFERO 1 0 0 ( mammal ) 2 126 124 3 241 52 4 32 8 5 6 0 total 405 184 Fig .</sentence>
				<definiendum id="0">ITALIAN MACHINE DICTIONARY</definiendum>
				<definiens id="0">A SEMANTIC APPROACH 63 depth occurrence occurrence of the marker</definiens>
			</definition>
</paper>

		<paper id="2015">
			<definition id="0">
				<sentence>The module has as an input utterances of a natural language and translates them into a `` brain '' formalism or vice-versa ( as proved by T. WINOGRAD , 1971 , during the analysis of an utterance a feedback from the `` brain `` is desirable for efficiency ) .</sentence>
				<definiendum id="0">vice-versa</definiendum>
				<definiens id="0">an input utterances of a natural language and translates them into a</definiens>
			</definition>
			<definition id="1">
				<sentence>A permutation is a string of references to schemata , described in the first part of a rule , separated by descriptions of required punctuation marks ( including an empty punctuation mark for lexes which are to compose words ) .</sentence>
				<definiendum id="0">permutation</definiendum>
				<definiens id="0">a string of references to schemata , described in the first part of a rule , separated by descriptions of required punctuation marks ( including an empty punctuation mark for lexes which are to compose words )</definiens>
			</definition>
			<definition id="2">
				<sentence>J. WEIZENBAUM , ELIZA : a Computer Program for the Study of Natural Language Communication between Man and Machine , in &lt; ~ Communications of the ACMes , IX ( 1966 ) 1 .</sentence>
				<definiendum id="0">ELIZA</definiendum>
				<definiens id="0">a Computer Program for the Study of Natural Language Communication between Man and Machine</definiens>
			</definition>
</paper>

		<paper id="1025">
</paper>

		<paper id="1005">
			<definition id="0">
				<sentence>The base trees in general have the form s s or in linear notation Consequently each base tree consists of a finite set of subtrees or kernel trees each of the form S ( @ $ 1 ( ... ) @ ) where x is a string Over i I shall assume the reader somewhat familiar with the theory of generative transformational grammar .</sentence>
				<definiendum id="0">x</definiendum>
				<definiens id="0">the form s s or in linear notation Consequently each base tree consists of a finite set of subtrees or kernel trees each of the form S</definiens>
				<definiens id="1">a string Over i I shall assume the reader somewhat familiar with the theory of generative transformational grammar</definiens>
			</definition>
			<definition id="1">
				<sentence>transformational grammars defined by Petrick : a ) To my knowledge there is no finite procedure to determine whether a given T-grammar has the defining properties of the class or not , which represents a solution to the problem whether there exists V means the entire vocabulary , Y~ the terminal , ~ the nonterminal vocabulary of the base .</sentence>
				<definiendum id="0">transformational grammars</definiendum>
				<definiens id="0">a ) To my knowledge there is no finite procedure to determine whether a given T-grammar has the defining properties of the class or not , which represents a solution to the problem whether there exists V means the entire vocabulary , Y~ the terminal , ~ the nonterminal vocabulary of the base</definiens>
			</definition>
			<definition id="2">
				<sentence>Obviously only the minimal complex of a T-rule ( relative to some tree ) is relevant for the observation of the structural change produced by the rule , because all structure beyond it ( above and below in the tree ) is not directly concerned .</sentence>
				<definiendum id="0">T-rule</definiendum>
				<definiens id="0">not directly concerned</definiens>
			</definition>
			<definition id="3">
				<sentence>n ) ) F ( X ( j ) Y ( i ) ) E ( v ) ) ( ~ o~ , o~5 S ( C ( M ( K ( D ( d ) F ( X ( f ) Y ( i ) ) H ) ) ) E ( v ) ) _~ = S ( C ( M ( K ( D ( d ) F ( F ' ( X ( j ) Y ( i ) ) ) ) F ' ( X ( j ) Y ( i ) ) H ) E ( V ) ) y~ ___ &gt; t ® : : -~ S ( C ( M ( yIF ' ( X ( j ) Y ( i ) ) H ( N ( n ) F ( f ) ) ) ) E ( v ) ) == S ( C ( M ( y~H ( N ( n ) F ( F ' ( X ( j ) Y ( i ) ) ) ) ) ) E ( v ) ) I~ t ~s = S ( C ( M ( y~F ' ( X ( j ) Y ( i ) ) H ( Q ( A ( a ) F ( I ) ) H ) ) ) E ( v ) ) ( ~ = S ( C ( M ( y~H ( Q ( A ( a ) F ( f ) ) F ( X ( j ) Y ( i ) ) H ) ) ) E ( v ) ) -- t ~ ) ~o = S ( C ( M ( y~H ( Q ( A ( a ) F ( F ' ( X ( j ) Y ( i ) ) ) ) F ( X ( j ) Y ( i ) ) H ) ) ) E ( v ) ) Y~ -- ~l ~1~ = H ( y2F ' ( X ( j ) Y ( i ) ) H ( N ( n ) F ( f ) ) ) ® ~ = H ( y~H ( N ( n ) F ' ( X ( j ) Y ( i ) ) ) ) ) I ~3 = H ( y2F ' ( X ( j ) Y ( i ) ) H ( Q ( A ( a ) F ( f ) ) H ) ) ( ~ ) o~4 = H ( y~H ( Q ( A ( a ) F ( f ) ) F ' ( X~j ) Y ( i ) ) H ) ) Q ) o~S-H ( y~H ( Q ( A ( a ) F ( F ' ( X~ ) Y ( i ) ) ) ) F ' ( X ( j ) Y ( i ) ) H ) ) There is no difficulty in verifying that the continuations which could follow always start with the minimal complexes ~u and ~18 .</sentence>
				<definiendum id="0">n ) ) F ( X</definiendum>
				<definiendum id="1">y~H ( N ( n ) F</definiendum>
				<definiendum id="2">F ' ( X</definiendum>
				<definiendum id="3">o~S-H ( y~H</definiendum>
				<definiens id="0">A ( a ) F ( I ) ) H ) ) ) E ( v ) )</definiens>
				<definiens id="1">i ) ) ) ) F ( X ( j ) Y ( i ) ) H ) ) ) E ( v ) ) Y~ -- ~l ~1~ = H ( y2F ' ( X ( j ) Y ( i ) ) H ( N ( n ) F ( f ) )</definiens>
			</definition>
</paper>

		<paper id="2010">
			<definition id="0">
				<sentence>Thomistic Works Parathomistic Works 1,000,000 W In Table 4 one can notice that among the Thomistic works the Stenographic reports ( REPOtLTATIONES ) , which are distinct from the truly dictated works ( these are among the proper works ) , present a RMS deviation of F which is about half of that of the other groups of Thomistic works ; is this a significant fact ?</sentence>
				<definiendum id="0">Thomistic</definiendum>
				<definiendum id="1">;</definiendum>
				<definiens id="0">works the Stenographic reports ( REPOtLTATIONES ) , which are distinct from the truly dictated works ( these are among the proper works ) , present a RMS deviation of F which is about half of that of the other groups of Thomistic works</definiens>
			</definition>
</paper>

		<paper id="2032">
			<definition id="0">
				<sentence>Ambiguous word forms ( often called `` homonyms `` or in written language `` homographs `` ) are known as obstacles in many fields of computational linguistics , especially in automatic documentation , content analysis or mechanical translation .</sentence>
				<definiendum id="0">Ambiguous word forms</definiendum>
			</definition>
			<definition id="1">
				<sentence>: ... ohearingfS ... -\ ] hear/+/ing/ to hear -/hearing/+/ hearing Frnc. : ... OpacherO ... -Ipachl+/er p cher ( VRB ) /p~cher/- } -\ ] O/ p~cher ( SUB ) Russ. : ... f3valaxf3 ... -/val/q-/ax/ val /valax/+/ valax As the segments which have thus been detected do not coincide graphematically ( e.g./trieb/-/getriebe { ) , i.e. , as the respective lexiconentries are to be fotmd at different places in the lexicon , for the identification of such homographs enormous parsing and comparing procedures are required .</sentence>
				<definiendum id="0">VRB</definiendum>
				<definiens id="0">the respective lexiconentries are to be fotmd at different places in the lexicon , for the identification of such homographs enormous parsing</definiens>
			</definition>
			<definition id="2">
				<sentence>The disadvantage consists in the fact that monosemic and ambiguous word forms are submitted to the same procedure , which amounts to an undue delay of the determination ofmonosemic word forms .</sentence>
				<definiendum id="0">disadvantage</definiendum>
				<definiens id="0">consists in the fact that monosemic and ambiguous word forms are submitted to the same procedure , which amounts to an undue delay of the determination ofmonosemic word forms</definiens>
			</definition>
</paper>

		<paper id="1014">
			<definition id="0">
				<sentence>For example , D 1 is the 1-successor of S , D2 is the 0-successor of D1 , and S is the 1-successor olD2 , in code word D. Two separation symbols are said to be compatible if ( I ) They are t-successors of S , for some code symbol t , or , ( II ) They are t-successors of two separation symbols which are themselves compatibles .</sentence>
				<definiendum id="0">D2</definiendum>
				<definiendum id="1">S</definiendum>
				<definiens id="0">the 0-successor of D1 , and</definiens>
			</definition>
			<definition id="1">
				<sentence>Furthermore , a separation symbol X~ ( Qx ) is the t-successor of the separation symbol Qv if X } ( Qx ) is a t-successor of Px and re ( X , Y ) = 1 .</sentence>
				<definiendum id="0">separation symbol X~ ( Qx )</definiendum>
				<definiens id="0">a t-successor of Px and re</definiens>
			</definition>
			<definition id="2">
				<sentence>SYLLABLE TYPES OF TURKISH LANGUAGE ( 0 denotes vowel , 1 denotes consonant ) Symbol Structure Example A 0 a~lk ( open ) B 10 baba ( father ) C 01 ekmek ( bread ) D 101 altm ( gold ) E 011 erk ( power ) F 1011 tiirk ( turkish ) G 110 kraliqe ( queen ) H 1101 kontrol ( control ) I 1110 strateji ( strategy ) J 11101 stronsiyum ( strontium ) K 11011 tren~kot ( trench coat ) L 10111 kontrbas ( cello ) The first six syllable types ( types A-F ) are syllable types of proper Turkish language .</sentence>
				<definiendum id="0">SYLLABLE TYPES OF TURKISH LANGUAGE (</definiendum>
				<definiens id="0">consonant ) Symbol Structure Example A 0 a~lk ( open ) B 10 baba</definiens>
				<definiens id="1">types A-F ) are syllable types of proper Turkish language</definiens>
			</definition>
			<definition id="3">
				<sentence>One set of constraints can be summarized as : `` no syllable starting with two or more consonants can follow a syllable ending with a vowel `` .5 With the addition of this set of contraints , the constraint matrix becomes A B C D E F G H I J K L A B C D E F G H I J K L -1 1 0 0 0 0 1 0 1 0 0 01 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ' It is also interesting to note that the first order constraints to make the code A , B , ... . F uniquely decipherable of finite delay are found to be precisely those constraints inherent in the language .</sentence>
				<definiendum id="0">constraint matrix</definiendum>
				<definiens id="0">becomes A B C D E F G H I J K L A B C D E F G H I J K</definiens>
			</definition>
</paper>

		<paper id="2022">
			<definition id="0">
				<sentence>As indicated above , a lemma is defined as a group of two or more word-forms of the text which morphologically may be flexed forms of a common word stem within one of the flexion paradigms included 270 GUSTAV LE't , INBACH in the analysis ( most so-called irregular paradigms being excluded as too difficult to automate ) .</sentence>
				<definiendum id="0">lemma</definiendum>
				<definiens id="0">a group of two or more word-forms of the text which morphologically may be flexed forms of a common word stem within one of the flexion paradigms included 270 GUSTAV LE't , INBACH in the analysis ( most so-called irregular paradigms being excluded as too difficult to automate )</definiens>
			</definition>
			<definition id="1">
				<sentence>To quote the extreme example , a form XXSTES is treated as a putative stem in itself and as derived from the following putative stems : XXSTESS ( this is the x-modification of Table 1 , the double consonant only appears before endings containing an e ) ; XXSTS ( the z-modification ) ; XXST ; XXS and XX .</sentence>
				<definiendum id="0">XXSTESS</definiendum>
				<definiendum id="1">XXSTS</definiendum>
				<definiens id="0">a putative stem in itself and as derived from the following putative stems</definiens>
			</definition>
			<definition id="2">
				<sentence>In the cases where Swedish has the same stem modifications that my program takes into account , Hellberg has to define the stem as the shortest part of the word which is identical in all flexed forms ; this increases the number of different endings , and the definition of a stem comes rather far from the ordinary grammatical concept , while mine corresponds rather closely to it .</sentence>
				<definiendum id="0">Swedish</definiendum>
				<definiens id="0">to define the stem as the shortest part of the word which is identical in all flexed forms ; this increases the number of different endings</definiens>
			</definition>
</paper>

		<paper id="1011">
			<definition id="0">
				<sentence>Here we proceed to a more sophisticated notion of the correlational function which is defined as a ratio of the individual categorial measure of a processed linguistic unit to the average categorial measure .</sentence>
				<definiendum id="0">correlational function</definiendum>
				<definiens id="0">a ratio of the individual categorial measure of a processed linguistic unit to the average categorial measure</definiens>
			</definition>
</paper>

		<paper id="1026">
			<definition id="0">
				<sentence>Si , en effet , il est vrai que la d &amp; finition peut ~tre exprim~e par la formule f ( x ) dans laquelle x est la base , il est 6galement vrai que la m~me formule peut decnre un derive , en tant que ce dernier r6sulte compos6 d'une base et d'tm suffixe qui a les m~me caract6ristiques de r6gularit6 que nous avons reconnues dam la fonction .</sentence>
				<definiendum id="0">Si</definiendum>
				<definiens id="0">en effet , il est vrai que la d &amp; finition peut ~tre exprim~e par la formule f</definiens>
			</definition>
</paper>

		<paper id="1010">
			<definition id="0">
				<sentence>The GC is a context-free phrase structure grammar , i.e. a grammar of the type 2 in Chomsky 's classification of grammars .</sentence>
				<definiendum id="0">GC</definiendum>
				<definiens id="0">a context-free phrase structure grammar</definiens>
			</definition>
			<definition id="1">
				<sentence>The GC contains recursive rules .</sentence>
				<definiendum id="0">GC</definiendum>
				<definiens id="0">contains recursive rules</definiens>
			</definition>
</paper>

		<paper id="2008">
</paper>

		<paper id="2013">
			<definition id="0">
				<sentence>27 ADJ * PREA PREP PROV : -ADJ * PREA 28 ADJ * PREA PR .</sentence>
				<definiendum id="0">ADJ * PREA PREP PROV</definiendum>
			</definition>
			<definition id="1">
				<sentence>87 ADJA * SUBS ~ PONP tLECS RESP : • *********o , ,u , ,**** AMBIGUITE -ADJA * SUBS * PONF -ADJA * SUBS * ILECS -ADJA * SUBS * RESP 88 ADJA ' . '</sentence>
				<definiendum id="0">ADJA</definiendum>
				<definiens id="0">• *********o , ,u , ,**** AMBIGUITE -ADJA * SUBS * PONF -ADJA * SUBS * ILECS -ADJA * SUBS * RESP 88 ADJA '</definiens>
			</definition>
</paper>

	</volume>
