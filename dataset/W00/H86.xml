<?xml version="1.0" encoding="UTF-8"?>
	<volume id="H86">

		<paper id="1023">
			<definition id="0">
				<sentence>A generator , on the other hand , does n't need a full range of syntactic capabilities ( one way of saying whatever it needs to say may be enough ) ; nor does it need a very large lexicon ( one word for everything it needs to say , and fewer syntactic distinctions corresponding to a smaller syntactic component ) .</sentence>
				<definiendum id="0">generator</definiendum>
			</definition>
			<definition id="1">
				<sentence>Each entry contains morphological information , semantic information matching certain patterns in the data , and stylistic information ( which aids in lexical selection ) as well as lexical material .</sentence>
				<definiendum id="0">stylistic information</definiendum>
				<definiens id="0">morphological information , semantic information matching certain patterns in the data</definiens>
			</definition>
			<definition id="2">
				<sentence>12This is a much more efficient style of representation where there is a lot of morphological information to be eKpressed , Since in most systems different senses of the same ( orthographic or phonological ) worcl will receive different lexical entries , but the inflection will be the same , For examDle , be as a passive auxiliary ( as in the bug was eaten by the bat ) and be as a copula ( as in the bug was a spider ) are veery different syntactically and semantcally , but they share the same inflected forms ( i.e. am .</sentence>
				<definiendum id="0">passive auxiliary</definiendum>
				<definiens id="0">a spider ) are veery different syntactically and semantcally , but they share the same inflected forms ( i.e. am</definiens>
			</definition>
			<definition id="3">
				<sentence>`` Idiom '' as used here is more restricted than the sense it Ts given in e.g. Longman Dictionary of English Idioms , \ [ Longman 79\ ] ( which includes collocations , standard metaphors , proverbs etc. as well ) ; it =s closer to what are characterized as `` traditional idioms '' in the introduction to Longman 's .</sentence>
				<definiendum id="0">Idiom</definiendum>
				<definiens id="0">traditional idioms '' in the introduction to Longman 's</definiens>
			</definition>
			<definition id="4">
				<sentence>In fact , SEND is a subconcept of the concept DIRECTED ACTION , and since the grammar knows that directed actions have agents it will construct an agent noun phrase .</sentence>
				<definiendum id="0">SEND</definiendum>
				<definiens id="0">a subconcept of the concept DIRECTED ACTION , and since the grammar knows that directed actions have agents it will construct an agent noun phrase</definiens>
			</definition>
			<definition id="5">
				<sentence>\ [ Fillmore 79\ ] Charles Fillmore , `` Innocence : a second idealization for linguistics , '' in Proceedings of the 5th Annual Meeting of the Berkeley Linguistics Society , BLS , 1979 .</sentence>
				<definiendum id="0">Innocence</definiendum>
			</definition>
</paper>

		<paper id="1011">
			<definition id="0">
				<sentence>PUNDIT , written in Prolog , is a highly modular system consisting of distinct syntactic , semantic and pragmatics components .</sentence>
				<definiendum id="0">PUNDIT</definiendum>
				<definiens id="0">a highly modular system consisting of distinct syntactic , semantic and pragmatics components</definiens>
			</definition>
			<definition id="1">
				<sentence>The grammar consists of contextfree BNF definitions ( currently numbering approximately 80 ) and associated restrictions ( approximately 35 ) .</sentence>
				<definiendum id="0">grammar</definiendum>
			</definition>
			<definition id="2">
				<sentence>For example , the rye fragment consists of a tensed verb + object as in Replaced spindle motor .</sentence>
				<definiendum id="0">rye fragment</definiendum>
				<definiens id="0">consists of a tensed verb + object as in Replaced spindle motor</definiens>
			</definition>
			<definition id="3">
				<sentence>Restriction Grammar is a descendent of Sager 's string grammar \ [ Sager1981\ ] .</sentence>
				<definiendum id="0">Restriction Grammar</definiendum>
			</definition>
			<definition id="4">
				<sentence>replace ( time ( Per ) ) &lt; cause ( agent ( A ) , use ( instrument ( I ) , exchange ( object 1 ( O 1 ) , object2 ( 02 ) , time ( Per ) ) ) ) The following mapping rule specifies that the agent can be indicated by the subject of the clause .</sentence>
				<definiendum id="0">replace ( time ( Per</definiendum>
				<definiens id="0">time ( Per ) ) ) ) The following mapping rule specifies that the agent can be indicated by the subject of the clause</definiens>
			</definition>
			<definition id="5">
				<sentence>As before , reference resolution tries to find a referent in the current FocusList which is a semantically acceptable subject given the thematic structure of the verb and the domain-specific selectional restrictions associated with them .</sentence>
				<definiendum id="0">FocusList</definiendum>
			</definition>
			<definition id="6">
				<sentence>Implicit entities may be either empty syntactic constituents in sentence fragments or unfilled semantic roles associated with domain-specific verb decompositions .</sentence>
				<definiendum id="0">Implicit entities</definiendum>
				<definiens id="0">empty syntactic constituents in sentence fragments or unfilled semantic roles associated with domain-specific verb decompositions</definiens>
			</definition>
</paper>

		<paper id="1009">
			<definition id="0">
				<sentence>75 The semantic analysis component consists of two parts : clause semantics and noun phrase semantics .</sentence>
				<definiendum id="0">semantic analysis component</definiendum>
				<definiens id="0">consists of two parts : clause semantics and noun phrase semantics</definiens>
			</definition>
			<definition id="1">
				<sentence>In addition , each node has an operational-status field , which holds information about a part which is reported in a message .</sentence>
				<definiendum id="0">operational-status field</definiendum>
				<definiens id="0">holds information about a part which is reported in a message</definiens>
			</definition>
</paper>

		<paper id="1013">
			<definition id="0">
				<sentence>z ) z &lt; yAif~z D z &lt; zVz~z It is useful to have an adjacency relation between points on a scale , and there are a number of ways we could introduce it. We could simply take it to be primitive ; in a scale having a distance function , we could define two points to be adjacent when the distance between them is less than some ~ ; finally , we could define adjacency in terms of the grain-size : fvz , y. , } a~ ( z , r. ' ) = ( 3 : ) , ~ , ^ , ~ If ^ - , \ [ z ~ If\ ] , Two important possible properties of scales are connectedness and denseness. We can say that two elements of a scale are connected by a chain of adj relations : ( VZ. If. J ) cmmeded ( z. If. e ) _= • dj ( z , If , . ) v ( 3 : ) ndj ( z. z. + ) ^ connected ( : . If. + ) A scale is connected ( econnecled ) if all pairs of elements are connected. A scale is dense if between any two points there is a third point , until the two points are so close together that the grain-size wo n't let us tell what the situation is. Cranking up the magnification could well resolve the continuous space into a discrete set , as objects into at , om , . ( V , } den , e ( , ) E fVz , If , &lt; ) z E • ^ If E. ^ order ( &lt; , s ) ^ z &lt; If D ( 3 : } ( . &lt; z ^ : &lt; If ) v ( ~a z ) ( z ~ : ^ • ~ y ) This captures the commonsense notion of continuity. A subscale of a scale has as its elements a subset of the elements of the scale and has as its partial ordering and its grain the partial ordering and the grain of the scale. ( VJ , . &lt; . ~ ) e , de , ( &lt; . s , ) ^ grain ( -- , . , ) D ( W , s ) \ [ , u6 , cele ( s , . , , ) m , ub , d ( , s. , t ) ^ order ( &lt; , e , ) ^ grain ( .-. , s , ) \ ] An interval can be defined as a connected subscale : ( Vi ) imftq~el ( i ) m ( 3. ) scale ( e ) ^ nb.eaiz ( i , . ) ^ , connected ( i ) The relations between time intervals that Allen and Kauts ( 1985 ) have defined can be defined in a straightforward manner in the approach presented here , applied to intervth in general. A concept closely related to Scales is that of a `` cycle'. This is a system which has a natural ordering locally but contains a loop globally. Examples include the color wheel , clock times , and geographical locations ordered by `` east of.. % % 'o have axiomatized cycles iri terms of a ternary /asfween relation , whose axioms parallel the axioms for a partial ordering. The figure-ground relationship is of fundamental importance in language. We encode this with the primitive predicate af. The minimal structure that seems to be necessary for something to be a ground is that of a scale ; hence , this is a selectional constraint on the arguments of at. 129 at ( z , ~ } : ( 3 s } y • s ^ scale ( s ) At this point , we are already in • position to define some fairly complex words. As an illustration , we give the example of `` range* as in `` z ranges from It to z '' : ( V= , V , z ) range ( = , U , : ) ( 3 s , s| , ul , us ) scale ( s } , ^ swbscale ( el , s ) ^bottom ( y , s , } ^ top ( z , s , ) ^ '' 1 • z ^ at ( ~s , y } ^us • z ^ at ( u : ,z ) ^ ( Vu } \ [ n • = ~ ( 3v } t , • s , A tt ( u , t , } \ ] A very important scale is the linearly ordered scale of numbers. We do not plan to reason axiomatically about numbers , but it is useful in natural language processing to have encoded a few facts about numbers. For example , • set has a cardinality which is an element of the number scale. Verticality is a concept that would be most properly analyzed in the section on space , but it is a property that many other scales have acquired metaphorically , for whatever reason. The number scale is one of these. Even in the absence of an analysis of verticality , it is • useful property to have as a primitive in lexical semantics. The word `` high* is a vague term that asserts an entity is in the upper region of some scale. It requires that the scale be a vertical one , such as the number scale. The verticality requirement distinguishes `` high* from the more general term'very* ; we can say `` very hard* but not `` highly hard'. The phrase `` highly planar '' sounds all right because the high register of `` planar* suggests a quantifiable , scientific accuracy , whereas the low register of `` fiat* makes `` highly fiat* sound much worse. The test of any definition is whether it allows one to draw the appropriate inferences. In our target texts , the phrase `` high usage* occurs. Usage is a set of using events , and the verticality requirement on `` high '' forces us to coerce the phrase into `` a high or large number of using events '' . Combining this with an axiom that says that the use of • mechanical device involves the likelihood of abrasive events , as defined below , and with the definition of `` wear '' in terms of abrasive events , we should be able to conclude the likelihood of wear. There are two possible ontoiogies for time. In the first , the one most acceptable to the mathematically minded , there is a time line , which is a scale having some topological structure. We can stipulate the time line to be linearly ordered ( although it is not in approaches that build ignorance of relative times into the representation of time ( e.g. , Hobbs , 1974 ) nor in approaches using branching futures ( e.g. , McDermott , 1985 ) ) , and we can stipulate it to be dense ( although it is not in the situation calculus ) . We take before to be the ordering on the time line : ( Vtl , ts } beforc ( t , , t : ) .~ ( 3 T , &lt; } Time-line ( T } ^ order ( &lt; , T ) ^tie ~ A tzET Atl ~t2 We allow both instants and intervals of time. Most events occur at some instant or during some interval. In this approach , nearly every predicate takes a time argument. In the second ontology , the one that seems to be more deeply rooted in language , the world consists of a large number of more or less independent processes , or histories , or sequences of events. There is a primitive relation change between conditions. Thus , can.go ( e , , ~ } ^ p ( e , , z } ^ ¥ ( e : , z ) says that there is a change from the condition el of p being true of z to the condition ez of q being true of z. The time line in this ontology is then an artificial construct , • regular sequence of imagined abstract events-think of them as ticks of a clock in the National Bureau of Standards -- to which other events can be related. The change ontology seems to correspond to the way we e×perience the world. We recognize relations of causality , change of state , and copresence among events and conditions. When events are not related in these ways , judgments of relative time must be mediated by copresence relations between the events and events on a clock and change of state relations on the clock. The predicate change possesses &amp; limited transitivity. There has been • change from Reagan being an actor to Reagan being President , even though he was governor in between. But we probably do not want to say there has been • change from Reagan being an actor to Margaret Thatcher being Prime Minister , even though the second comes after the first. We can say that times , viewed in this ontology as events , always have a change relation between them. ( Vti , t : Jbefore ( tl , t : } ~ ehange ( tl , t : ) The predicate change is related to before by the axiom ( re , , ca } change ( e , , e : ) ( 3 el , t : ) at ( el , tl ) ^at ( es , t , } ^ ks fore ( t1 , t : ) This does not allow us to derive change of state from ternpond succession. For this , we need axioms of the form ~¢e , ,q , t , ,tz , m ) f ( e , ,z ) A at ( e , ,G ) ^fI ( ez , z ) ^ at ( ca , t= ) ^ bcfore ( tl , l~ ) chance ( el , ¢ : ) That is , if z is p at time tl and q at a later time t : , then there has been a change of state from one to the other. Time arguments in predications can be viewed as abbreviations : ( v= , t ) p ( = , t } -= ( 3e ) f ( e , : ) ^ ut ( e , t ) 130 The word `` move ' , or the predica~ move , ( as in `` z moves from g to z ' ) can tbe• be defined equivale•tly in terms of change ( Vz , y , . } move ( . , It , z } E ( 3 e , , e , ) change ( e t , e , ) ^ at ' ( es , z , It ) ^ at ' ( e , ,. , z ) m or in terms of the time line ( v : , It , : ) mo , ,e ( . , y , . ) m ( 3 is , t , ) at ( z , y , t , ) ^ at ( z , z , t2 ) ^ before ( tt , f , ) In English and apparently all other natural languages , both ontologies are represented i• the lexicon. The time line ontology is found i• clock and calendar terms , tense systems of verbs , and in the deictic temporal locatives such as `` yesterday* , `` today* , `` tomorrow* , `` last night '' , sad so on. The change ontology is exhibited in mvst verbs , and in temporal clausal connectives. The universal presence of both classes of lexical items and grammatical markers in natural languages requires a theory which can accommodate both o•tologies , illustrating the importance of methodological principle 4. Among temporal connectives , the word `` while '' presents interesting problems. I• `` st while e~ ' , s2 must be an event occurring over • time interval ; et must be an event and may occur either at a point or over an interval. One % first guess is that the point or interval for et must be included in the interval for ca. However , there are cases , such as it rained while I was in Philadelphia. or The electricity should be off while the switch is being repaired. which suggest the reading `` h is included in el*. We came to the conclusion that one can infer •o more than that es and e , overlap , and any tigh ( er constraints result from implicatures from background knowledge. The word `` immediately* also presents a number of problems. It requires its argument e to be an ordering relation between two entities z and g on some scale s. immediate ( e } : ( 3 z , y , s ) less-lhan ' ( e , z , It , s ) It is not clear what the constraints on the scale are. Temporal and spatial scales are okay , as i• `` immediately after 'the alarm* and `` immediately to the left ' , but the size gale is•'t : * John is immediately larger than Bill. Etymologically , it means that there are no intermediate entities between z and y on s. Thus , OP ' e , z , y , s ) immediate ( e ) ^ less-Shah ' ( e , z , 71 , s ) D -~ ( 3z ) less-than ( z , z , s ) ^ less-than ( z , 7I , s ) S/ B Figure I : The simplest space. However , this will only work if we r~trict z to be a relevant entity. For example , in the sentence We disengaged the compressor immediately after the alarm. the implication is that •o event that could damage the compressor occurred between the alarm and the disengagement , since the text is about equipment failure. Structure The notion of dimension has been made precise in linear al|ebr4. Since the concept of a region is used metaphorically u well ms i• the spatial sense , however , we were concerned to determine the minimal structure that a system requires for it to make sense to call it a space of more than one dimension. For a two.dimensional space , tt~re must be a scale , or partial ordering , for each dimension. Moreover , the two scales must be independent , in that the order of elements o• one scale can not be determined from their order on the other. Formally , ( ~ el , h , &lt; , , &lt; , } seale , ( s , , sp } ^ scale , ( s , , sp ) A o.dt. ( &lt; , ,. , ) A order ( &lt; , , s , ) ^ ( 3. ) ( 3y , ) ( z &lt; , y , ^ • &lt; , . , ) ^ ( 3u , ) ( z &lt; , m ^ ~ &lt; , z ) Note that this does •or allow &lt; ffi to be simply the reverse of ~t. A• u•surprising co•sequence of this definition is that the minima\ ] example of a two*dimensional space consists of three points ( three points determine a plane } , e.g. , the points A , B , ud C , where A &lt; t B , A &lt; t C , C &lt; , A , A &lt; z B. This is Illustrated in Figure 1. The dimensional scales are apparently found in all nat• rat languages i• relevant domains. The familiar threedimensional space of common sense is defined by the three scale pairs `` up-down '' , `` front-back '' , and `` left-right ' ; the two*dimensional plane of the commonsense conception of the earth 's surface is represented by the two scale pairs `` north-south '' and `` east-west '' . 131 The simplest , although not the only , way to define adjacency in the space is as adjacency on both scales : ( ¥ z , y , sp ) adj ( z , y , sp ) ( B s , , . , ) scale , ( s , , sp ) ^ sosle , ( s : , sp ) ^adj ( z , ~ , s , } ^ ad/ ( z , y , s , ) A region is a subset of a space. 'I~he surface and interior of a region can be defined in terms of adjacency , in • manner paralleling the definition of a boundary in point-set topoiog ) '. In the following , s is the boundary or surface of • twoor three-dimensional region • embedded in a space sp. ( vs , r } sur/'acc ( s , r , •p ) ~_ ( Vz ) z~ r D \ [ zes ( EEy } ( y £ sp ^ - , ( y E r ) A adj ( z , y , sp ) ) \ ] Finally , we can define the notion of `` contact '' in terms of points in different regions being adjacent. ( Vr , , r , , sp ) eontact ( r , , r , , sp ) -- = disjoint ( rl , r2 ) A ( Ez , y } ( z E r , A y E r. ^ adj ( z , Thsp ) ) By picking the scales and defining adjacency right , we can talk about points of contact between communicational networks , systems of knowledge , and other metaphorical domains. By picking the scales to be the real line and defining adjacency in terms of C-neighborhoods , we get Euclidean space and can talk about contact between physical objects. Physical objects and materials must be distinguished , just as they are apparently distinguished in every natural language , by means of the count noun mass noun distinction. A physical object is not a bit of material , but rather is comprised of a bit of material at any given time. Thus , rivers and human bodies are physical objects , even though their material constitution changes over time. This distinction also allows us to talk about an object losing material through wear and still being the same object. We will say that an entity b is a bit of material by means of the expression material ( b ) : Bits of material are characterized by both extension and cohesion. The primitive predication occupies ( b , r , t ) encodes extension , saying that • bit of material b occupies a region • at time t. The topology of a bit of material is then parasitic on the topology of the region it occupies. A part bl of • bit of material b is • bit of material whose occupied region is always • subregion of the region occupied by b. Point-like particles ( particle ) are defined in terms of points in the occupied region , disjoint bits ( disjointl n't } in terms of disjointness of regions , and contact between bits in terms of contact between their regions. We can then state as follows the Principle of NonJoint-Occupancy that two bits of material can not occupy the same place at the same time : 0 ' h , h ) ( di.jo~ntb~t ( b , , h ) D ( V z , ~ , b. , b4 ) i.tcrior ( b , , b , ) A interior ( b4 , &amp; , ) A particle ( z , b , ) A ~rtide ( y , b4 ) - , ( Ez ) ( ut ( ~ , ~ } ^ .t ( y , ~ ) ) At some future point in our work , this may emerge as a consequence of a richer theory of cohesion and force. The cohesion of materials is also a primitive property , for we must distinguish between a bump on the surface of u object tad • chip merely lying on the surface. Cohesion depends on • primitive relation bond between particles of material , paralleling the role of adj in regions. The relation attached is defined as the transitive closure of bond. A topology of cohesion is built up in a manner analogous to the topology of regions. In addition , we have encoded the relation that bond bears to motion , i.e. that bonded bits remain adjacent and that one moves when the other does , tad the relation of bond to force , i.e. that there is a characteristic force that breaks a bond ' in a given material. Different materials react in different ways to forces of various strengths. Materials subjected to force exhibit or fail to exhibit several invariance properties , proposed by Hager ( 1985 ) . If the material is shape-invariant with respect to • particular force , its shape remains the same. If it is topologically invariant , particles that are adjacent remain adjacent. Shape invariance implies topological invariance. Subject to forces of a certain strength or degree dl , • material ceases being shape-invariant. At a force of strength d : &gt; dl , it ceases being topologically iavaxiant , and at • force of strength d• _~ d : , it simply break• .</sentence>
				<definiendum id="0">z ) z &lt; yAif~z D z &lt; zVz~z It</definiendum>
				<definiens id="0">useful to have an adjacency relation between points on a scale , and there are a number of ways we could introduce it. We could simply take it to be primitive ; in a scale having a distance function , we could define two points to be adjacent when the distance between them is less than some ~ ; finally , we could define adjacency in terms of the grain-size : fvz , y. , } a~ ( z , r. ' ) = ( 3 : ) , ~ , ^ , ~ If ^ - , \ [ z ~ If\ ] , Two important possible properties of scales are connectedness and denseness. We can say that two elements of a scale are connected by a chain of adj relations : ( VZ. If. J ) cmmeded ( z. If. e ) _= • dj ( z , If , . ) v ( 3 : ) ndj ( z. z. + ) ^ connected ( : . If. + ) A scale is connected ( econnecled ) if all pairs of elements are connected. A scale is dense if between any two points there is a third point , until the two points are so close together that the grain-size wo n't let us tell what the situation is. Cranking up the magnification could well resolve the continuous space into a discrete set , as objects into at , om , . ( V , } den , e ( , ) E fVz , If , &lt; ) z E • ^ If E. ^ order ( &lt; , s ) ^ z &lt; If D ( 3 : } ( . &lt; z ^ : &lt; If ) v ( ~a z ) ( z ~ : ^ • ~ y ) This captures the commonsense notion of continuity. A subscale of a scale has as its elements a subset of the elements of the scale and has as its partial ordering and its grain the partial ordering and the grain of the scale. ( VJ , . &lt; . ~ ) e , de , ( &lt; . s , ) ^ grain ( -- , . , ) D ( W , s ) \ [ , u6 , cele ( s , . , , ) m , ub , d ( , s. , t ) ^ order ( &lt; , e , ) ^ grain ( .-. , s , ) \ ] An interval can be defined as a connected subscale : ( Vi ) imftq~el ( i ) m ( 3. ) scale ( e ) ^ nb.eaiz ( i , . ) ^ , connected ( i ) The relations between time intervals that Allen and Kauts ( 1985 ) have defined can be defined in a straightforward manner in the approach presented here , applied to intervth in general. A concept closely related to Scales is that of a `` cycle'. This is a system which has a natural ordering locally but contains a loop globally. Examples include the color wheel , clock times , and geographical locations ordered by `` east of.. % % 'o have axiomatized cycles iri terms of a ternary /asfween relation , whose axioms parallel the axioms for a partial ordering. The figure-ground relationship is of fundamental importance in language. We encode this with the primitive predicate af. The minimal structure that seems to be necessary for something to be a ground is that of a scale ; hence , this is a selectional constraint on the arguments of at. 129 at ( z , ~ } : ( 3 s } y • s ^ scale ( s ) At this point , we are already in • position to define some fairly complex words. As an illustration , we give the example of `` range* as in `` z ranges from It to z '' : ( V= , V , z ) range ( = , U , : ) ( 3 s , s| , ul , us ) scale ( s } , ^ swbscale ( el , s ) ^bottom ( y , s , } ^ top ( z , s , ) ^ '' 1 • z ^ at ( ~s , y } ^us • z ^ at ( u : ,z ) ^ ( Vu } \ [ n • = ~ ( 3v } t , • s , A tt ( u , t , } \ ] A very important scale is the linearly ordered scale of numbers. We do not plan to reason axiomatically about numbers , but it is useful in natural language processing to have encoded a few facts about numbers. For example , • set has a cardinality which is an element of the number scale. Verticality is a concept that would be most properly analyzed in the section on space , but it is a property that many other scales have acquired metaphorically , for whatever reason. The number scale is one of these. Even in the absence of an analysis of verticality , it is • useful property to have as a primitive in lexical semantics. The word `` high* is a vague term that asserts an entity is in the upper region of some scale. It requires that the scale be a vertical one , such as the number scale. The verticality requirement distinguishes `` high* from the more general term'very* ; we can say `` very hard* but not `` highly hard'. The phrase `` highly planar '' sounds all right because the high register of `` planar* suggests a quantifiable , scientific accuracy , whereas the low register of `` fiat* makes `` highly fiat* sound much worse. The test of any definition is whether it allows one to draw the appropriate inferences. In our target texts , the phrase `` high usage* occurs. Usage is a set of using events , and the verticality requirement on `` high '' forces us to coerce the phrase into `` a high or large number of using events '' . Combining this with an axiom that says that the use of • mechanical device involves the likelihood of abrasive events , as defined below , and with the definition of `` wear '' in terms of abrasive events , we should be able to conclude the likelihood of wear. There are two possible ontoiogies for time. In the first , the one most acceptable to the mathematically minded , there is a time line , which is a scale having some topological structure. We can stipulate the time line to be linearly ordered ( although it is not in approaches that build ignorance of relative times into the representation of time ( e.g. , Hobbs , 1974 ) nor in approaches using branching futures ( e.g. , McDermott , 1985 ) ) , and we can stipulate it to be dense ( although it is not in the situation calculus ) . We take before to be the ordering on the time line : ( Vtl , ts } beforc ( t , , t : ) .~ ( 3 T , &lt; } Time-line ( T } ^ order ( &lt; , T ) ^tie ~ A tzET Atl ~t2 We allow both instants and intervals of time. Most events occur at some instant or during some interval. In this approach , nearly every predicate takes a time argument. In the second ontology , the one that seems to be more deeply rooted in language , the world consists of a large number of more or less independent processes , or histories , or sequences of events. There is a primitive relation change between conditions. Thus , can.go ( e , , ~ } ^ p ( e , , z } ^ ¥ ( e : , z ) says that there is a change from the condition el of p being true of z to the condition ez of q being true of z. The time line in this ontology is then an artificial construct , • regular sequence of imagined abstract events-think of them as ticks of a clock in the National Bureau of Standards -- to which other events can be related. The change ontology seems to correspond to the way we e×perience the world. We recognize relations of causality , change of state , and copresence among events and conditions. When events are not related in these ways , judgments of relative time must be mediated by copresence relations between the events and events on a clock and change of state relations on the clock. The predicate change possesses &amp; limited transitivity. There has been • change from Reagan being an actor to Reagan being President , even though he was governor in between. But we probably do not want to say there has been • change from Reagan being an actor to Margaret Thatcher being Prime Minister , even though the second comes after the first. We can say that times , viewed in this ontology as events , always have a change relation between them. ( Vti , t : Jbefore ( tl , t : } ~ ehange ( tl , t : ) The predicate change is related to before by the axiom ( re , , ca } change ( e , , e : ) ( 3 el , t : ) at ( el , tl ) ^at ( es , t , } ^ ks fore ( t1 , t : ) This does not allow us to derive change of state from ternpond succession. For this , we need axioms of the form ~¢e , ,q , t , ,tz , m ) f ( e , ,z ) A at ( e , ,G ) ^fI ( ez , z ) ^ at ( ca , t= ) ^ bcfore ( tl , l~ ) chance ( el , ¢ : ) That is , if z is p at time tl and q at a later time t : , then there has been a change of state from one to the other. Time arguments in predications can be viewed as abbreviations : ( v= , t ) p ( = , t } -= ( 3e ) f ( e , : ) ^ ut ( e , t ) 130 The word `` move ' , or the predica~ move , ( as in `` z moves from g to z ' ) can tbe• be defined equivale•tly in terms of change ( Vz , y , . } move ( . , It , z } E ( 3 e , , e , ) change ( e t , e , ) ^ at ' ( es , z , It ) ^ at ' ( e , ,. , z ) m or in terms of the time line ( v : , It , : ) mo , ,e ( . , y , . ) m ( 3 is , t , ) at ( z , y , t , ) ^ at ( z , z , t2 ) ^ before ( tt , f , ) In English and apparently all other natural languages , both ontologies are represented i• the lexicon. The time line ontology is found i• clock and calendar terms , tense systems of verbs , and in the deictic temporal locatives such as `` yesterday* , `` today* , `` tomorrow* , `` last night '' , sad so on. The change ontology is exhibited in mvst verbs , and in temporal clausal connectives. The universal presence of both classes of lexical items and grammatical markers in natural languages requires a theory which can accommodate both o•tologies , illustrating the importance of methodological principle 4. Among temporal connectives , the word `` while '' presents interesting problems. I• `` st while e~ ' , s2 must be an event occurring over • time interval ; et must be an event and may occur either at a point or over an interval. One % first guess is that the point or interval for et must be included in the interval for ca. However , there are cases , such as it rained while I was in Philadelphia. or The electricity should be off while the switch is being repaired. which suggest the reading `` h is included in el*. We came to the conclusion that one can infer •o more than that es and e , overlap , and any tigh ( er constraints result from implicatures from background knowledge. The word `` immediately* also presents a number of problems. It requires its argument e to be an ordering relation between two entities z and g on some scale s. immediate ( e } : ( 3 z , y , s ) less-lhan ' ( e , z , It , s ) It is not clear what the constraints on the scale are. Temporal and spatial scales are okay , as i• `` immediately after 'the alarm* and `` immediately to the left ' , but the size gale is•'t : * John is immediately larger than Bill. Etymologically , it means that there are no intermediate entities between z and y on s. Thus , OP ' e , z , y , s ) immediate ( e ) ^ less-Shah ' ( e , z , 71 , s ) D -~ ( 3z ) less-than ( z , z , s ) ^ less-than ( z , 7I , s ) S/ B Figure I : The simplest space. However , this will only work if we r~trict z to be a relevant entity. For example , in the sentence We disengaged the compressor immediately after the alarm. the implication is that •o event that could damage the compressor occurred between the alarm and the disengagement , since the text is about equipment failure. Structure The notion of dimension has been made precise in linear al|ebr4. Since the concept of a region is used metaphorically u well ms i• the spatial sense , however , we were concerned to determine the minimal structure that a system requires for it to make sense to call it a space of more than one dimension. For a two.dimensional space , tt~re must be a scale , or partial ordering , for each dimension. Moreover , the two scales must be independent , in that the order of elements o• one scale can not be determined from their order on the other. Formally , ( ~ el , h , &lt; , , &lt; , } seale , ( s , , sp } ^ scale , ( s , , sp ) A o.dt. ( &lt; , ,. , ) A order ( &lt; , , s , ) ^ ( 3. ) ( 3y , ) ( z &lt; , y , ^ • &lt; , . , ) ^ ( 3u , ) ( z &lt; , m ^ ~ &lt; , z ) Note that this does •or allow &lt; ffi to be simply the reverse of ~t. A• u•surprising co•sequence of this definition is that the minima\ ] example of a two*dimensional space consists of three points ( three points determine a plane } , e.g. , the points A , B , ud C , where A &lt; t B , A &lt; t C , C &lt; , A , A &lt; z B. This is Illustrated in Figure 1. The dimensional scales are apparently found in all nat• rat languages i• relevant domains. The familiar threedimensional space of common sense is defined by the three scale pairs `` up-down '' , `` front-back '' , and `` left-right ' ; the two*dimensional plane of the commonsense conception of the earth 's surface is represented by the two scale pairs `` north-south '' and `` east-west '' . 131 The simplest , although not the only , way to define adjacency in the space is as adjacency on both scales : ( ¥ z , y , sp ) adj ( z , y , sp ) ( B s , , . , ) scale , ( s , , sp ) ^ sosle , ( s : , sp ) ^adj ( z , ~ , s , } ^ ad/ ( z , y , s , ) A region is a subset of a space. 'I~he surface and interior of a region can be defined in terms of adjacency , in • manner paralleling the definition of a boundary in point-set topoiog ) '. In the following , s is the boundary or surface of • twoor three-dimensional region • embedded in a space sp. ( vs , r } sur/'acc ( s , r , •p ) ~_ ( Vz ) z~ r D \ [ zes ( EEy } ( y £ sp ^ - , ( y E r ) A adj ( z , y , sp ) ) \ ] Finally , we can define the notion of `` contact '' in terms of points in different regions being adjacent. ( Vr , , r , , sp ) eontact ( r , , r , , sp ) -- = disjoint ( rl , r2 ) A ( Ez , y } ( z E r , A y E r. ^ adj ( z , Thsp ) ) By picking the scales and defining adjacency right , we can talk about points of contact between communicational networks , systems of knowledge , and other metaphorical domains. By picking the scales to be the real line and defining adjacency in terms of C-neighborhoods , we get Euclidean space and can talk about contact between physical objects. Physical objects and materials must be distinguished , just as they are apparently distinguished in every natural language , by means of the count noun mass noun distinction. A physical object is not a bit of material , but rather is comprised of a bit of material at any given time. Thus , rivers and human bodies are physical objects , even though their material constitution changes over time. This distinction also allows us to talk about an object losing material through wear and still being the same object. We will say that an entity b is a bit of material by means of the expression material ( b ) : Bits of material are characterized by both extension and cohesion. The primitive predication occupies ( b , r , t ) encodes extension , saying that • bit of material b occupies a region • at time t. The topology of a bit of material is then parasitic on the topology of the region it occupies. A part bl of • bit of material b is • bit of material whose occupied region is always • subregion of the region occupied by b. Point-like particles ( particle ) are defined in terms of points in the occupied region , disjoint bits ( disjointl n't } in terms of disjointness of regions , and contact between bits in terms of contact between their regions. We can then state as follows the Principle of NonJoint-Occupancy that two bits of material can not occupy the same place at the same time : 0 ' h , h ) ( di.jo~ntb~t ( b , , h ) D ( V z , ~ , b. , b4 ) i.tcrior ( b , , b , ) A interior ( b4 , &amp; , ) A particle ( z , b , ) A ~rtide ( y , b4 ) - , ( Ez ) ( ut ( ~ , ~ } ^ .t ( y , ~ ) ) At some future point in our work , this may emerge as a consequence of a richer theory of cohesion and force. The cohesion of materials is also a primitive property , for we must distinguish between a bump on the surface of u object tad • chip merely lying on the surface. Cohesion depends on • primitive relation bond between particles of material , paralleling the role of adj in regions. The relation attached is defined as the transitive closure of bond. A topology of cohesion is built up in a manner analogous to the topology of regions. In addition , we have encoded the relation that bond bears to motion , i.e. that bonded bits remain adjacent and that one moves when the other does , tad the relation of bond to force , i.e. that there is a characteristic force that breaks a bond ' in a given material. Different materials react in different ways to forces of various strengths. Materials subjected to force exhibit or fail to exhibit several invariance properties , proposed by Hager ( 1985 ) . If the material is shape-invariant with respect to • particular force , its shape remains the same. If it is topologically invariant , particles that are adjacent remain adjacent. Shape invariance implies topological invariance. Subject to forces of a certain strength or degree dl , • material ceases being shape-invariant. At a force of strength d : &gt; dl , it ceases being topologically iavaxiant , and at • force of strength d• _~ d : , it simply break•</definiens>
			</definition>
			<definition id="1">
				<sentence>, t ) ^ ¢on , iatR-o $ ( o , b , t } ^ au , f.ce ( s , b ) A par~ide ( ~ , s ) ^ change ' ( c , st , `` = ) ^ attacAed ' ( e , , be , b ) ^ not ~ ( e : , el ) ^cause ( ca , e ) ^ hit ' ( ca , m , be ) After the abrasive event , the pointlike bit b0 is no longer a part of the object o : 133 ( Ve , m , o , be , e , , e : , t : ) abr-e~ent ' ( e , m , o , be ) ^ changd ( e , e , , e : } ^ attached ' ( el , be , b ) Anot ' ( e~ , ej ) A at ( e : ,t : ) ^ consists-of ( o , b : , t : ) D - , part ( bo , b : ) It is necessary to state this explicitly since objects and bits of material can be discontinuous .</sentence>
				<definiendum id="0">b</definiendum>
				<definiendum id="1">par~ide</definiendum>
				<definiens id="0">no longer a part of the object o : 133 ( Ve , m , o</definiens>
			</definition>
			<definition id="2">
				<sentence>An abrasion is a large number of abrasive events widely distributed through some nonpointlike region on the surface of an object : ( Ve , m , o ) abrad~ ( e , m , o ) E ( 3bs } \ [ ( Ve , ) \ [ e , E e D ( 3be ) be 6 bs A abr-eventJiet , m , o , bo ) \ ] ^ ( V b , s , tHat ( e , t ) ^ consists-of ( o , b , t ) ^ surface ( s , b ) D ( 3 r ) subregion ( r , S ) ^ widelpdistributed ( bs , r ) \ ] \ ] Wear can occur by means of a large collection of abrasive events distributed over time as well as space ( so that there may be no time at which enough abrasive events occur to count as an abrasion ) .</sentence>
				<definiendum id="0">abr-eventJiet</definiendum>
				<definiendum id="1">S ) ^ widelpdistributed (</definiendum>
				<definiens id="0">a large number of abrasive events widely distributed through some nonpointlike region on the surface of an object : ( Ve , m , o ) abrad~ ( e , m , o</definiens>
				<definiens id="1">bs , r ) \ ] \ ] Wear can occur by means of a large collection of abrasive events distributed over time as well as space ( so that there may be no time at which enough abrasive events occur to count as an abrasion )</definiens>
			</definition>
			<definition id="3">
				<sentence>A norm is a pattern which is established either by conventional stipulation or by statistical regularity .</sentence>
				<definiendum id="0">norm</definiendum>
				<definiens id="0">a pattern which is established either by conventional stipulation or by statistical regularity</definiens>
			</definition>
</paper>

		<paper id="1003">
</paper>

		<paper id="1024">
			<definition id="0">
				<sentence>RST is a theory of natural text ; it was developed entirely on natural texts , such as the political advocacy text analyzed below .</sentence>
				<definiendum id="0">RST</definiendum>
				<definiens id="0">a theory of natural text ; it was developed entirely on natural texts</definiens>
			</definition>
</paper>

		<paper id="1002">
			<definition id="0">
				<sentence>NYU has principal responsibility for development of the domain knowledge base ; SDC has principal responsibility for development of the flexible parser and for the domain-independent discourse components .</sentence>
				<definiendum id="0">NYU</definiendum>
				<definiendum id="1">SDC</definiendum>
				<definiens id="0">principal responsibility for development of the domain knowledge base ;</definiens>
				<definiens id="1">principal responsibility for development of the flexible parser and for the domain-independent discourse components</definiens>
			</definition>
			<definition id="1">
				<sentence>The SDC ( PROLOG-based ) system uses a topdown left-to-right Prolog implementation of a version of the restriction grammar ( Hirschman and Puder 1986 ) .</sentence>
				<definiendum id="0">SDC ( PROLOG-based ) system</definiendum>
				<definiens id="0">uses a topdown left-to-right Prolog implementation of a version of the restriction grammar</definiens>
			</definition>
			<definition id="2">
				<sentence>The semantic analyzer generates separate semantic representations for the individual sentences of the message .</sentence>
				<definiendum id="0">semantic analyzer</definiendum>
				<definiens id="0">generates separate semantic representations for the individual sentences of the message</definiens>
			</definition>
</paper>

		<paper id="1020">
			<definition id="0">
				<sentence>ABSTRACT Tree Adjoining Grammar ( TAG ) is a formalism for natural language grammars .</sentence>
				<definiendum id="0">ABSTRACT Tree Adjoining Grammar ( TAG )</definiendum>
			</definition>
			<definition id="1">
				<sentence>We will now define T ( G ) : The set of all truce derived in G starting from initial trees in I. This set will be called the tree net of G. L ( G ) : The set of all terminal strings which appear in the frontier of the trees in T ( G ) .</sentence>
				<definiendum id="0">T ( G )</definiendum>
				<definiens id="0">The set of all terminal strings which appear in the frontier of the trees in T ( G )</definiens>
			</definition>
			<definition id="2">
				<sentence>This set will be called the string I.xngeage ( or language ) of G. If L is the string language of a TAG G thee we say that L is a Tree-Adjoining Language ITAL\ ] .</sentence>
				<definiendum id="0">string I.xngeage</definiendum>
			</definition>
			<definition id="3">
				<sentence>set of all auxiliary trees are adjoinable at n. SA is written as ( C ) , where C is a subset of the set of all auxiliary trees adjoinable at n. If C equals the set of all auxiliary trees adjoinable at n , then we do not explicitly state this at the node u. the node N. NA will be writte• a8 ( ~ ) .</sentence>
				<definiendum id="0">C</definiendum>
				<definiens id="0">a subset of the set of all auxiliary trees adjoinable at n. If C equals the set of all auxiliary trees adjoinable at n</definiens>
			</definition>
			<definition id="4">
				<sentence>The algorithm , we present here to parse Tree-Adjoining Languages ( TALe ) , is a modification of the CYK algorithm ( which is described in detail in \ [ Aho and Ullman,1073\ ] ) , which •sea a dynamic programming technique to parse CFL 's .</sentence>
				<definiendum id="0">Tree-Adjoining Languages</definiendum>
				<definiendum id="1">TALe</definiendum>
				<definiens id="0">a modification of the CYK algorithm ( which is described in detail in \ [ Aho and Ullman,1073\ ] ) , which •sea a dynamic programming technique to parse CFL 's</definiens>
			</definition>
			<definition id="5">
				<sentence>Step 3 For i=O to n-I step I do Step 4 for J=l to n-I step 1 do Step 6 put foot nodes of all nuxilinry trees In A\ [ l.t.J.J\ ] Step 6 For 1=0 to n step 1 do Step 7 For i=l to 0 step -I do ~Step 8 For J=i to I step | do Step 9 For k=l to J step -1 do Step 10 do Cue 1 Step 11 do Cane 2 Step 12 do Case 8 Step 13 do Case 6 Step 14 do Case 4 Step 18 Accept if root of sons initial tree E A\ [ O.J.J , n\ ] , 0 &lt; j &lt; n where , ( a ) Came 1 corresponds to situation where the left sibling is the ancestor of the foot node. The parent is put in A\ [ Q , k , I\ ] if the left sibling is in A\ [ i , j , k , m\ ] and the right sibling is in A\ [ m , p , p , l\ ] , where k _ m &lt; I , m ~ p , p &lt; I. Therefore Case I is written as For n=k to 1-I step I do for p= n to 1 , step I do if there is a left sibling in A\ [ i , J.k.n\ ] and the right sibling in A\ [ a.p.p.1\ ] satisfying appropriate restrictions then put their parent in A\ [ i , J.k.1\ ] . ( b ) Case 2 corresponds to the ease where the right sibling is the ancestor of the foot node. If the left sibling is in A\ [ i , m , m , p\ ] and the right sibling is in A\ [ p , j , k , I\ ] , i &lt; m &lt; p and p &lt; j , then we put their parent in A\ [ i , j , k , I\ ] . This may be written as For n=i to J- ! step I do For p=a*l to \ ] step i do for all left siblin~ in A\ [ i.n , m , p\ ] ud right siblings in A\ [ p.J.k.1\ ] satisfying appropriate rentrictionn put thei= parents in A\ [ i.J.k.1\ ] . 217 ( ¢ ) Case 3 corresponds to the case where •either ehildre• •re ancestors of the foot •ode. If the left sibling E A\ [ i , j , j , m\ ] and the right • sibling E A\ [ m , p , p , l I then we ca• pet the parent in A\ [ i , j , j , l\ ] if it is the ¢g~ulthat ( i &lt; j &lt; _ mori_ &lt; j &lt; m ) and ( m &lt; p &lt; Iorm &lt; p &lt; | ) , This may be written as for • = J to 1-1 step I do for p = J to 1 step i do for all left 81blLngs In ACL , | , J.a\ ] and right slblings in A\ [ nop.p.l\ ] 8atisfylng the appropriate restrictions pet their parent in A\ [ ioJ , J°l\ ] . ( e ) Case 5 corresponds to adjoining. If X is • node in A\ [ m~ , k , p\ ] and Y is the root of a auxiliary tree with same symbol as that of X , such thatYisiuA\ [ i , m , p , I\ ] ( ( i &lt; m &lt; p &lt; Iori &lt; m &lt; p &lt; l ) and ( m &lt; j &lt; k_ porm_~ j &lt; k &lt; p ) ) . Thls may be written as for • = ~. to | step t do for p = • to I step I do if t node X 6 A\ [ n , J.k , p\ ] tad the root of auxiliary tree Is in A\ [ i , a.pol\ ] then put X in A\ [ l.J.k.1\ ] Case 4 corresponds to the case where a node Y has only one child X If X E A\ [ i , j , k , I\ ] then put Y in A\ [ i , j , k , I I. Repeat Case 4 again if Y has no siblings. It is obvious that steps 10 through 15 ( cases ~-e ) are completed in O ( e : ~ ) , because the different cases have at most two nested for loop statements , the iterating variables taking values in the range 0 through n. They are repeated atmost O ( n 4 ) times , because of the four loop statements in steps 6 through 9. The initialization phase ( steps 1 through 5 ) has a time complexity of O ( n + n 2 ) = O ( n2 ) . Step 15 is completed in O ( n ) . Therefore , the time complexity of the parsing algorithm is O ( nS ) . The main issue in proving the algorithm correct , is to show that while computing the contents of an element of the array A , we must have already determined the contents of other elements of the array needed to correctly complete this entry. We can show this inductively by considering each case individually. We give an informal argument below. Case l : We need to know the contents of A { i , j , k , m\ ] , A\ [ m , p , p , l l where m &lt; I , i &lt; m , when we ate trying to compute the contents of A\ [ i , j , k , l\ ] . Since I is the variable itererated in the outermost loop ( step 6 ) , we nan assume { by induction hypothesis ) that for all m &lt; I and for all p , q , r , the co•teats of AIp , q , r , m \ ] are already computed. Hence , the contents of A\ [ i , j , k , m\ ] are known. Similarly , for all m &gt; i. and for all p , q , and r _ I , A\ [ m , p , q , r i would have been computed .</sentence>
				<definiendum id="0">Y</definiendum>
				<definiens id="0">if the left sibling is in A\ [ i , j , k , m\ ] and the right sibling is in A\ [ m , p , p</definiens>
				<definiens id="1">the root of a auxiliary tree with same symbol as that of X , such thatYisiuA\ [ i , m , p</definiens>
			</definition>
			<definition id="6">
				<sentence>We let the set I of initial trees of G be ( te } , where t e is the tree shown in Fig 4.3a. The set of auxiliary trees A is dermed M A= ( tsx/t IEIt } UA t. The tree teA is as shown in Fig 4.3b , with the constraints on the root of each ttA being the null adjoining constraint , no constraints on the foot , and the constraints on the nodes of the subtreee t I of the trees tlA being the same as those for the corresponding nodes in the initial tree t I of G t. To see why L ( G ) .</sentence>
				<definiendum id="0">t e</definiendum>
				<definiens id="0">with the constraints on the root of each ttA being the null adjoining constraint</definiens>
			</definition>
			<definition id="7">
				<sentence>Let G be a TAG generating L T and M = ( Q , E , 6 , q0 , QF ) be a fruits state automaton recognizing L R. We can construct a grammar G and will 8how that L ( GI ) -L T N L R. Let a be an elementary tree in G. We shall negotiate with each node a quadruple ( ql , q2 , q~ , q4 ) where ql , q2 , qa , q4 E Q. Let ( ql , qa , qs , q4 ) be associated with a node X in a. Let us assume that a is an auxiliary tree , and that X is an ancestor of tbe foot node of n , ud hence , the ancestor of the foot node of any derived tree -/iu D ( a ) .</sentence>
				<definiendum id="0">qa</definiendum>
				<definiendum id="1">X</definiendum>
				<definiens id="0">an ancestor of tbe foot node of n , ud hence</definiens>
			</definition>
			<definition id="8">
				<sentence>For each initial tree a , ar~ociate with the root the quadruple ( q0 , q , q , qt ) where qo is the initial state of the finite state automaton M , nnd qf E QFFor each auxiliary tree 0 of G , a~5ociate with the root the quadruple ( qt , q2 , q.q , q4 ) , where q , ql , q2 , q~ , q4 are some variables which will later be given values from Q. Let X be some •ode in some elementary tree a. Let ( qt , q2 , q3 , q4 ) be associated with X. Then , we have to consider the follo'~ing caacs .</sentence>
				<definiendum id="0">qo</definiendum>
				<definiendum id="1">ql</definiendum>
				<definiens id="0">each auxiliary tree 0 of G , a~5ociate with the root the quadruple</definiens>
			</definition>
			<definition id="9">
				<sentence>Null constraint in the original grammar will force us to use null constraint and not consider the cases where it is not the case that ql == P and q4 -s. If the label of Y is a terminal 'a ' then we choose r such that oe ' ( p , n ) ~ r. If the constraint at X is n null adjoining constraint , then • o~ ( ql , a ) = r. Case 3 : This corresponds to the case where neither the left child Y nor the right child Z of the node X is the ancestor of the foot node of o or if ~ is a initial tree .</sentence>
				<definiendum id="0">Null constraint</definiendum>
				<definiendum id="1">X</definiendum>
				<definiens id="0">n null adjoining constraint</definiens>
				<definiens id="1">the case where neither the left child Y nor the right child Z of the node</definiens>
				<definiens id="2">the ancestor of the foot node of o or if ~ is a initial tree</definiens>
			</definition>
			<definition id="10">
				<sentence>The induction hypothesis is that if all derived trees obtained after k &lt; n adjoining operations have the property P then so will th• derived trees after • .4I adjoiniugs where P is defi•ed as , Property P : If any node X in a derived tree '3 ' has the foot-node of the tree p to which X belo•gs labelled Y as a desce•dant such that w s Y w s is the frontier of the subtree of # rooted at X , then if ( qs , q2 , ~ , q4 ) had been associated with X , 6 ' ( qvwl ) , ~ qz and ~ ( q3 , w2 ) ~ q4 , a•d if w is the frontier of the subtree under the foot • ode of # in '7 is then ~ ( qs , w ) ~= q~ .</sentence>
				<definiendum id="0">induction hypothesis</definiendum>
				<definiens id="0">if all derived trees obtained after k &lt; n adjoining operations have the property P then so will th• derived trees after • .4I adjoiniugs where P is defi•ed as , Property P : If any node X in a derived tree '3 ' has the foot-node of the tree p to which X belo•gs labelled Y as a desce•dant such that w s Y w s is the frontier of the subtree of # rooted at X</definiens>
			</definition>
			<definition id="11">
				<sentence>There are several cams to co•sider Case I : X. is the ancestor of the foot node of 81 , such that the fro•tier of the subtree of ,81 rooted at X is wsYw 4 and the frontier of the subtree of 7 rooted at X is w , wlZwsw4 .</sentence>
				<definiendum id="0">X.</definiendum>
				<definiens id="0">the ancestor of the foot node of 81</definiens>
			</definition>
			<definition id="12">
				<sentence>* The arrow denotes the head of the string , which in turn determines where the string is split up when wrapping operation takes pl~e. For example , consider X- &gt; LI~ ( A , B ) , and let A=t*WhlX and B=t'Uglv .</sentence>
				<definiendum id="0">B</definiendum>
				<definiens id="0">the head of the string , which in turn determines where the string is split up when wrapping operation takes pl~e. For example</definiens>
			</definition>
</paper>

		<paper id="1007">
			<definition id="0">
				<sentence>The IRUS software \ [ 1\ ] consists of two subsystems : one for linguistic processing and one for adding specifics of the back end .</sentence>
				<definiendum id="0">IRUS software</definiendum>
				<definiens id="0">consists of two subsystems : one for linguistic processing</definiens>
			</definition>
			<definition id="1">
				<sentence>The decision support environment of the Fleet Command Center Battle Management Program ( FCCBMP ) involves a suite of decision-making tools .</sentence>
				<definiendum id="0">FCCBMP )</definiendum>
				<definiens id="0">involves a suite of decision-making tools</definiens>
			</definition>
</paper>

		<paper id="1008">
</paper>

		<paper id="1015">
			<definition id="0">
				<sentence>The theoretical apparatus of a TAG consists of a pr/mitively defined set of `` elementary '' phrase structure trees , a '~xking '' relation that can be used to define dependency relations between two nodes within an elementary tree , and an `` adjunction '' operation that combines trees under specifiable constraints .</sentence>
				<definiendum id="0">theoretical apparatus of a TAG</definiendum>
				<definiens id="0">consists of a pr/mitively defined set of `` elementary '' phrase structure trees , a '~xking '' relation that can be used to define dependency relations between two nodes within an elementary tree , and an `` adjunction '' operation that combines trees under specifiable constraints</definiens>
			</definition>
			<definition id="1">
				<sentence>Systemic grammars employ a functional vocabulary : they emphasize the uses to which language can be put -- how languages achieve their speakers '' goals-rather than its formal structure .</sentence>
				<definiendum id="0">Systemic grammars</definiendum>
				<definiens id="0">employ a functional vocabulary : they emphasize the uses to which language can be put -- how languages achieve their speakers '' goals-rather than its formal structure</definiens>
			</definition>
			<definition id="2">
				<sentence>( the-day '' Hvents-~-the-GU~-tanker-war ~1 as-ttHiource ( mn~-ever4 # ~me-ever~-~lpe_vnryk , o-om { em # &lt; hlbby-rnbalm Thomhavel &gt; # &lt; ~t-by-mbsaes Ubedan &gt; &gt; ~nmual ~ &lt; nurrter-of-sP~ps-I~a 2 &gt; Jde y-theps ) ( partkxlars # &lt; damage-r~xxt Thorahavet O~o-omc~s &gt; # &lt; da.~e-repo , t Uber~n Uoyds &gt; ) ) * 152 This realization speOJicatiou represents the structured object which gives the toplevel plan for this utterance .</sentence>
				<definiendum id="0">speOJicatiou</definiendum>
				<definiens id="0">the structured object which gives the toplevel plan for this utterance</definiens>
			</definition>
			<definition id="3">
				<sentence>The path consists of a stream of entities representing phrasal nodes , constituent positions ( indicated by square brackets ) , instances of information units ( in boldface ) , instances of words , and activated attachment points ( the labeled circle under the predicate ; see next section ) .</sentence>
				<definiendum id="0">path</definiendum>
			</definition>
			<definition id="4">
				<sentence>11 Whether the word formation component should in fact have the power of a TAG or CFG is an open question .</sentence>
				<definiendum id="0">CFG</definiendum>
				<definiens id="0">an open question</definiens>
			</definition>
			<definition id="5">
				<sentence>McDonald &amp; Pustejovsky ( 1985a ) `` SAMSON : a computational theory of prose style in generation '' , Proceedings of the 1985 meeting of the European Association for Computational Linguistics .</sentence>
				<definiendum id="0">SAMSON</definiendum>
				<definiens id="0">a computational theory of prose style in generation ''</definiens>
			</definition>
</paper>

		<paper id="1016">
			<definition id="0">
				<sentence>We describe how HYPO generates a constellation of legally-meaningful hypothetical fact situations ( `` hypos '' ) which are `` near '' a given fact situation .</sentence>
				<definiendum id="0">HYPO</definiendum>
				<definiens id="0">generates a constellation of legally-meaningful hypothetical fact situations ( `` hypos '' ) which are `` near '' a given fact situation</definiens>
			</definition>
			<definition id="1">
				<sentence>I. Introduction HYPO is a program to model reasoning with cases and hypotheticals ( `` hypos '' ) .</sentence>
				<definiendum id="0">I. Introduction HYPO</definiendum>
				<definiens id="0">a program to model reasoning with cases and hypotheticals ( `` hypos '' )</definiens>
			</definition>
			<definition id="2">
				<sentence>HYPO generates these hypotheticals heuristically using certain well-known general heuristics ( e.g. , examine extreme cases ) as well as HYPO-specific ones ( e.g. , examine weaker/stronger cases along a HYPO dimension ) .</sentence>
				<definiendum id="0">HYPO</definiendum>
				<definiens id="0">generates these hypotheticals heuristically using certain well-known general heuristics</definiens>
			</definition>
			<definition id="3">
				<sentence>Further the meaning of concepts ( and rules ) changes over time , and , in fact , the law can be viewed as a system which learns ( in a LEX-like manner ) from the cases presented to it \ [ Rissland &amp; Collins , 1986\ ] .</sentence>
				<definiendum id="0">meaning of concepts</definiendum>
				<definiens id="0">a system which learns ( in a LEX-like manner</definiens>
			</definition>
			<definition id="4">
				<sentence>Q : A rather extreme position .</sentence>
				<definiendum id="0">Q</definiendum>
			</definition>
			<definition id="5">
				<sentence>The output of the CASE-ANALYSIS MODULE is the Case-analysis-record which contains : I. applicable factual predicates The case-analysis-record is used by HYPO 's ARGUMENT and HYPO-GEN modules .</sentence>
				<definiendum id="0">MODULE</definiendum>
				<definiens id="0">the Case-analysis-record which contains : I. applicable factual predicates The case-analysis-record is used by HYPO 's ARGUMENT and HYPO-GEN modules</definiens>
			</definition>
			<definition id="6">
				<sentence>The process occurs in two steps : ( 1 ) analyze the seed case ; ( 2 ) generate legally relevant derivative hypotheticals .</sentence>
				<definiendum id="0">process</definiendum>
				<definiens id="0">occurs in two steps : ( 1 ) analyze the seed case ; ( 2 ) generate legally relevant derivative hypotheticals</definiens>
			</definition>
			<definition id="7">
				<sentence>Pick an applicable dimension and make the case weaker or stronger along that dimension .</sentence>
				<definiendum id="0">Pick</definiendum>
				<definiens id="0">an applicable dimension and make the case weaker or stronger along that dimension</definiens>
			</definition>
			<definition id="8">
				<sentence>owledge relevant CKB cases : Telex v. IBM To make a hypothetical out of a fact situation according to this heuristic method , HYPO selects a near miss dimension and `` fills in '' the missing prerequisites .</sentence>
				<definiendum id="0">HYPO</definiendum>
				<definiens id="0">selects a near miss dimension and `` fills in '' the missing prerequisites</definiens>
			</definition>
			<definition id="9">
				<sentence>HYPO instantiates objects and makes appropriate cross references among objects ' slots so that the missing factual predicates are satisfied .</sentence>
				<definiendum id="0">HYPO</definiendum>
				<definiens id="0">instantiates objects and makes appropriate cross references among objects ' slots so that the missing factual predicates are satisfied</definiens>
			</definition>
			<definition id="10">
				<sentence>HYPO generates a derivative hypothetical weaker/stronger than the seed case by using the information it knows about dimensions .</sentence>
				<definiendum id="0">HYPO</definiendum>
				<definiens id="0">generates a derivative hypothetical weaker/stronger than the seed case by using the information it knows about dimensions</definiens>
			</definition>
			<definition id="11">
				<sentence>DataGeneral is a conflict-example : it is weak for the plaintiff along the secrets-voluntarilydisclosed dimension ( 100 disclosees ) and strong for the plaintiff along the disclosures-subjectto-restriction dimension ( each disclosure subject to nondisclosure agreement ) .</sentence>
				<definiendum id="0">DataGeneral</definiendum>
				<definiens id="0">a conflict-example : it is weak for the plaintiff along the secrets-voluntarilydisclosed dimension ( 100 disclosees ) and strong for the plaintiff along the disclosures-subjectto-restriction dimension ( each disclosure subject to nondisclosure agreement )</definiens>
			</definition>
			<definition id="12">
				<sentence>Using methods H1 through H3 , HYPO endows the seed situation with the facts to make the case strong for the plaintiff .</sentence>
				<definiendum id="0">HYPO</definiendum>
				<definiens id="0">endows the seed situation with the facts to make the case strong for the plaintiff</definiens>
			</definition>
			<definition id="13">
				<sentence>Q : Suppose ( d ) that Cupcake paid a large sum to a former employee of WidgetKing to use the information to build a competing product , as Telex did .</sentence>
				<definiendum id="0">Q</definiendum>
				<definiens id="0">Suppose ( d ) that Cupcake paid a large sum to a former employee of WidgetKing to use the information to build a competing product</definiens>
			</definition>
			<definition id="14">
				<sentence>Held for plaintiff IBM on trade secrets mtqappropriation claim where Telex gained access to IBM 's ¢onlldeatinl product development information by hiring an IBM employee , paying him 8 large bonus to develop a competing product .</sentence>
				<definiendum id="0">IBM employee</definiendum>
				<definiens id="0">trade secrets mtqappropriation claim where Telex gained access to IBM 's ¢onlldeatinl product development information by hiring an</definiens>
			</definition>
</paper>

		<paper id="1005">
			<definition id="0">
				<sentence>The CLEAR system allows users to ask for explanations of specific concepts .</sentence>
				<definiendum id="0">CLEAR system</definiendum>
				<definiens id="0">allows users to ask for explanations of specific concepts</definiens>
			</definition>
			<definition id="1">
				<sentence>Phrase-structure trees can be shown to be appropriate to characterize structural descriptions for sentences , including those aspects which are usually characterized by transformational grammars , by making certain amendations to CFG 's , without increasing their power , or by generating them from elementary trees ( phrase-markers ) by a suitable rule of composition , increasing the ~powcr only mildly beyond that of CFG 's .</sentence>
				<definiendum id="0">Phrase-structure trees</definiendum>
				<definiens id="0">usually characterized by transformational grammars , by making certain amendations to CFG 's , without increasing their power , or by generating them from elementary trees ( phrase-markers ) by a suitable rule of composition , increasing the ~powcr only mildly beyond that of CFG 's</definiens>
			</definition>
			<definition id="2">
				<sentence>Structural descriptions provided by phrase-structure trees are used explicitly or implicltly in natural language processing systems .</sentence>
				<definiendum id="0">Structural descriptions</definiendum>
				<definiens id="0">provided by phrase-structure trees are used explicitly or implicltly in natural language processing systems</definiens>
			</definition>
			<definition id="3">
				<sentence>The Relationship Between Tree Adjoining Grammars And Head Grammars , K. ViJay-Shanker , David J. Weir and Aravind K. Joshl , MS-CIS-86-01 , LINC LAB 06 Tree Adjoining Grammars ( TAG ) and Head Grammars ( HG ) were introduced to capture certain structural properties of natural languages .</sentence>
				<definiendum id="0">Relationship Between Tree Adjoining Grammars</definiendum>
			</definition>
</paper>

		<paper id="1018">
</paper>

		<paper id="1006">
</paper>

		<paper id="1012">
			<definition id="0">
				<sentence>The focusing mechanism in this system consists of two parts -- a FocusList , which is a list of entities in the order in which they are to be considered as loci , and a focusing algorithm , which orders the FocusList .</sentence>
				<definiendum id="0">focusing mechanism</definiendum>
				<definiendum id="1">FocusList</definiendum>
				<definiens id="0">a list of entities in the order in which they are to be considered as loci , and a focusing algorithm , which orders the FocusList</definiens>
			</definition>
			<definition id="1">
				<sentence>119 definition of the thematic role theme is that , for a verb of motion , the theme is the argument that moves .</sentence>
				<definiendum id="0">theme</definiendum>
				<definiens id="0">the argument that moves</definiens>
			</definition>
			<definition id="2">
				<sentence>The FoeuaLiat is a list of all the discourse entities which are eligible to be considered as foci , listed in the order in which they are to be considered .</sentence>
				<definiendum id="0">FoeuaLiat</definiendum>
				<definiens id="0">a list of all the discourse entities which are eligible to be considered as foci , listed in the order in which they are to be considered</definiens>
			</definition>
			<definition id="3">
				<sentence>The CurrentContext contains the information that has been conveyed by the discourse so far .</sentence>
				<definiendum id="0">CurrentContext</definiendum>
				<definiens id="0">contains the information that has been conveyed by the discourse so far</definiens>
			</definition>
			<definition id="4">
				<sentence>entContext looks after the discourse-initial sentence , The field engineer replaced the disk drive .</sentence>
				<definiendum id="0">entContext</definiendum>
				<definiens id="0">looks after the discourse-initial sentence</definiens>
			</definition>
</paper>

		<paper id="1014">
			<definition id="0">
				<sentence>In terms of our theory of generation , attachment points are grAMmAtical properties of phrasaJ configurations : places where the existing surface structure my be extended by splicing in `` auxiliary '' phrases ( i.e. realizations of message items ) , for exsJnple adding an initial adjunct phrase to s clause or embedding the NP headed by `` mana41er '' inside the selector `` one of '' .</sentence>
				<definiendum id="0">auxiliary '' phrases</definiendum>
				<definiens id="0">realizations of message items ) , for exsJnple adding an initial adjunct phrase to s clause or embedding the NP headed by `` mana41er '' inside the selector `` one of ''</definiens>
			</definition>
</paper>

		<paper id="1004">
			<definition id="0">
				<sentence>The program that we have developed , COUNSELOR , integrates separately developed components for natural language generation ( MUMeLE see \ [ 7\ ] , \ [ 8\ ] , \ [ 9\ ] ) , parsing ( PLUM \ [ 5\ ] ) , and case-based legal reasoning ( Hvpo \ [ 1\ ] , \ [ 2\ ] ) .</sentence>
				<definiendum id="0">COUNSELOR</definiendum>
				<definiens id="0">integrates separately developed components for natural language generation</definiens>
			</definition>
			<definition id="1">
				<sentence>PLUM is a conceptual analyzer which has been given a well defined schematic structure so that it can be easily extended .</sentence>
				<definiendum id="0">PLUM</definiendum>
				<definiens id="0">a conceptual analyzer which has been given a well defined schematic structure so that it can be easily extended</definiens>
			</definition>
			<definition id="2">
				<sentence>Clcmto is a new component , a discourse and inference manager between the language components and the expert system .</sentence>
				<definiendum id="0">Clcmto</definiendum>
				<definiens id="0">a new component , a discourse and inference manager between the language components and the expert system</definiens>
			</definition>
</paper>

		<paper id="1001">
			<definition id="0">
				<sentence>BBN 's responsibility is to conduct research and development in natural language interface technology .</sentence>
				<definiendum id="0">BBN 's responsibility</definiendum>
				<definiens id="0">to conduct research and development in natural language interface technology</definiens>
			</definition>
			<definition id="1">
				<sentence>The FCCBMP encompasses the development of expert system capabilities at the Pacific Fleet Command Center in Hawaii , and the development of an integrated natural language interface to these new capabilities as well as to the existing data bases and graphic display facilities .</sentence>
				<definiendum id="0">FCCBMP</definiendum>
				<definiens id="0">encompasses the development of expert system capabilities at the Pacific Fleet Command Center in Hawaii</definiens>
			</definition>
			<definition id="2">
				<sentence>BBN is developing a series of increasingly sophisticated natural language understanding systems which will serve as an integrated interface to several facilities at the Pacific Fleet Command Center : the Integrated Data Base ( IDB ) , which contains information about ships , their readiness states , their capabilities , etc. ; the Operations Support Group Prototype ( OSGP ) , a graphics system which can display locations and itineraries of ships on maps ; and the Force Requirements Expert System ( FRESH ) which is being built by Texas Instruments .</sentence>
				<definiendum id="0">BBN</definiendum>
				<definiens id="0">developing a series of increasingly sophisticated natural language understanding systems which will serve as an integrated interface to several facilities at the Pacific Fleet Command Center : the Integrated Data Base ( IDB ) , which contains information about ships , their readiness states</definiens>
			</definition>
			<definition id="3">
				<sentence>o A semantic interpreter which produces a formula of the meaning representation language MRL .</sentence>
				<definiendum id="0">semantic interpreter</definiendum>
				<definiens id="0">produces a formula of the meaning representation language MRL</definiens>
			</definition>
			<definition id="4">
				<sentence>o A translation module which produces a formula of the relational data base language ERL ( `` Extended Relational Language '' ) .</sentence>
				<definiendum id="0">translation module</definiendum>
				<definiens id="0">produces a formula of the relational data base language ERL ( `` Extended Relational Language '' )</definiens>
			</definition>
			<definition id="5">
				<sentence>The NIKL domain model supports the system 's treatment of semantic anomaly , anaphora , and nominal compounds .</sentence>
				<definiendum id="0">NIKL domain model</definiendum>
				<definiens id="0">supports the system 's treatment of semantic anomaly , anaphora , and nominal compounds</definiens>
			</definition>
</paper>

		<paper id="1022">
			<definition id="0">
				<sentence>McDonald accepts statements in the first order predicate calculus , processes them with a grammar , and outputs excellent English forms .</sentence>
				<definiendum id="0">McDonald</definiendum>
			</definition>
			<definition id="1">
				<sentence>In flavor , NIKL is a frame system , with the concepts equivalent to frames and the role restrictions to slots .</sentence>
				<definiendum id="0">NIKL</definiendum>
				<definiens id="0">a frame system , with the concepts equivalent to frames</definiens>
			</definition>
			<definition id="2">
				<sentence>KL to categorize the concepts ( or terms ) of the domain in terms of Nigel 's implicit categorizations .</sentence>
				<definiendum id="0">KL</definiendum>
				<definiens id="0">to categorize the concepts ( or terms ) of the domain in terms of Nigel 's implicit categorizations</definiens>
			</definition>
			<definition id="3">
				<sentence>Message is a kind of NonConsciousThing .</sentence>
				<definiendum id="0">Message</definiendum>
				<definiens id="0">a kind of NonConsciousThing</definiens>
			</definition>
			<definition id="4">
				<sentence>( ActionOccurrence x ) ( Past p ) ( timeofoccurrence x p ) ( Transmit y ) ( records x y ) ( actor y SMITH ) ( Message z ) ( actee y z ) Figure 3-2 : Sample PENNI Assertions ~X ( Act|onOccu .</sentence>
				<definiendum id="0">actor y SMITH</definiendum>
				<definiens id="0">Past p ) ( timeofoccurrence x p ) ( Transmit y ) ( records x y )</definiens>
			</definition>
			<definition id="5">
				<sentence>TermSpecificationlD is applied to y in one of the first inquiries processed .</sentence>
				<definiendum id="0">TermSpecificationlD</definiendum>
				<definiens id="0">applied to y in one of the first inquiries processed</definiens>
			</definition>
			<definition id="6">
				<sentence>After establishing that y is a kind of event that is caused , Nigel uses CauserlD and AffectedlD .</sentence>
				<definiendum id="0">Nigel</definiendum>
				<definiens id="0">uses CauserlD and AffectedlD</definiens>
			</definition>
			<definition id="7">
				<sentence>Janus is a joint effort between USC/ISI and BBN , Inc. , to build the next generation natural language interface within the natural language technology component of the Strategic Computing Initiative \ [ Walker 85\ ] .</sentence>
				<definiendum id="0">Janus</definiendum>
			</definition>
</paper>

		<paper id="1010">
			<definition id="0">
				<sentence>A typical CASREP consists of several sentences , for example : Unable to maintain lube oil pressure to SAC \ [ Starting Air Compressor\ ] .</sentence>
				<definiendum id="0">typical CASREP</definiendum>
			</definition>
			<definition id="1">
				<sentence>This follows from the way the SAC operates : the Motor System transmits the rotary movement to the lube oil pump , which starts to work and tosupply oil via the LO System ( not shown here ) .</sentence>
				<definiendum id="0">Motor System</definiendum>
				<definiens id="0">starts to work and tosupply oil via the LO System</definiens>
			</definition>
			<definition id="2">
				<sentence>The sophisticated inheritance mechanism of the flavor system , which works on the level of instance variables ( slots ) and on the level of methods , allows us to design this hierarchy of flavors in a consise manner .</sentence>
				<definiendum id="0">sophisticated inheritance mechanism of the flavor system</definiendum>
				<definiens id="0">works on the level of instance variables ( slots ) and on the level of methods , allows us to design this hierarchy of flavors in a consise manner</definiens>
			</definition>
			<definition id="3">
				<sentence>The parser maintains a Parse Stack where all possible partial parses are kept .</sentence>
				<definiendum id="0">parser</definiendum>
				<definiens id="0">maintains a Parse Stack where all possible partial parses are kept</definiens>
			</definition>
			<definition id="4">
				<sentence>The information about each partial parse ( State Vector ) consists of three lists : ( 1 ) the Word List : the unparsed part of the nominal compound ; initially contains the whole compound ; ( 2 ) the Forest : list of partial parse trees for the part of the compound which has been analyzed so far : initially empty ; ( 3 ) the List of Referents : for each partial parse tree in the Forest , a list of the model instances which may be named by the words in that partial parse tree .</sentence>
				<definiendum id="0">State Vector )</definiendum>
				<definiens id="0">consists of three lists : ( 1 ) the Word List : the unparsed part of the nominal compound</definiens>
			</definition>
			<definition id="5">
				<sentence>DICTIONARY ( lube ( oil ( pump ( SAC ( MOD-C Slot-Filler ) ( MOD-C Instance ( ol o2 03 ) ) ( MOD-C Instance ( pl p2 p3 ) ) ( MOD-C Instance ( sl ) ) SEM-C -- &gt; SLOT-NAME TABLE ( SEM-C Function ) ) ( SEM-C Working-Substance ) ) ( SEM-C Machinery ) ) ( SEM-C Machinery ) ) ( Function ( Machinery ( Working-Substance INSTANCES : function ) : part-of : components : location ) : working-substance ) ; ; ; SAC lube oil pump ( setq p3 ( make-instance % pump ' : part-of 'los2 ' : working-substance ' ( OIL .</sentence>
				<definiendum id="0">DICTIONARY</definiendum>
				<definiendum id="1">SAC</definiendum>
				<definiendum id="2">; SAC lube oil pump</definiendum>
				<definiens id="0">SEM-C Function ) ) ( SEM-C Working-Substance ) ) ( SEM-C Machinery ) ) ( SEM-C Machinery ) ) ( Function ( Machinery ( Working-Substance INSTANCES : function ) : part-of : components : location ) : working-substance ) ; ;</definiens>
			</definition>
</paper>

		<paper id="1021">
			<definition id="0">
				<sentence>G-u , ,k~ A : an Application GUMS : General User Modeling System GUMS ( A ) : Modeling System for Application A GUMS ( A , U ) : Model lor User U in Application A Figure 1 : A General Architecture for a User Modeling Utility U3 • S1 $ 2 S3 $ 4 A A 1 $ 5 $ 6 U2 $ 7 $ 8 I U1 NULL : the Empty Stereotype St : Stereotype i UI : User I Figure 2 : A User Modeling System for an Application 225 • The user model may need to update soma previously Infered default Information about the user Another kind of service the user model must provide is answedng queries posed by the application .</sentence>
				<definiendum id="0">,k~ A :</definiendum>
				<definiens id="0">an Application GUMS : General User Modeling System GUMS ( A ) : Modeling System for Application A GUMS ( A , U ) : Model lor User U in Application A Figure 1 : A General Architecture for a User Modeling Utility</definiens>
			</definition>
			<definition id="1">
				<sentence>A slereotype consists of a set of facts and rules that are believed to applied to a class of users .</sentence>
				<definiendum id="0">slereotype</definiendum>
				<definiens id="0">consists of a set of facts and rules that are believed to applied to a class of users</definiens>
			</definition>
			<definition id="2">
				<sentence>A completed database is the database constmctad by rewdtlng the set of clauses deflnlng each predicate to an If and only If dalinltion that Is called the completion of the predicate .</sentence>
				<definiendum id="0">completed database</definiendum>
				<definiens id="0">the database constmctad by rewdtlng the set of clauses deflnlng each predicate to an If and only If dalinltion that Is called the completion of the predicate</definiens>
			</definition>
			<definition id="3">
				<sentence>Slrono answers to a query ( i.e. true and false ) are sought first , followed by weak answers ( i.e. assume ( true ) and assume ( faLse ) ) .</sentence>
				<definiendum id="0">Slrono answers</definiendum>
				<definiens id="0">to a query ( i.e. true and false ) are sought first , followed by weak answers ( i.e. assume ( true ) and assume ( faLse ) )</definiens>
			</definition>
			<definition id="4">
				<sentence>A Query is a partially or tully instantiated positive or negative literal .</sentence>
				<definiendum id="0">Query</definiendum>
				<definiens id="0">a partially or tully instantiated positive or negative literal</definiens>
			</definition>
			<definition id="5">
				<sentence>Stereotype is the logical name of the stereotype that the system should assume to hold .</sentence>
				<definiendum id="0">Stereotype</definiendum>
				<definiens id="0">the logical name of the stereotype that the system should assume to hold</definiens>
			</definition>
			<definition id="6">
				<sentence>File is the name of the file that information pertaining to the user will be stored .</sentence>
				<definiendum id="0">File</definiendum>
				<definiens id="0">the name of the file that information pertaining to the user will be stored</definiens>
			</definition>
			<definition id="7">
				<sentence>User is the name of the user .</sentence>
				<definiendum id="0">User</definiendum>
			</definition>
			<definition id="8">
				<sentence>negate ( true , false , ) .</sentence>
				<definiendum id="0">negate</definiendum>
				<definiens id="0">true , false , )</definiens>
			</definition>
			<definition id="9">
				<sentence>VP2 : The Role of User Modelling in Correcting Errors in Second language Learning .</sentence>
				<definiendum id="0">VP2</definiendum>
			</definition>
</paper>

		<paper id="1019">
			<definition id="0">
				<sentence>For example , the rhetorical proposition : ( identification GUIDED PROJECTILE ( restrictive ( TRAVEL-MEANS SELF-PROPELLED ) ) ( non-restrictive ( ROLE PROJECTED-OBJECT ) ) ) indicates that TEXT wants to identify guided missiles by saying that they are projectiles and that they have certain attributes .</sentence>
				<definiendum id="0">identification GUIDED PROJECTILE ( restrictive</definiendum>
				<definiens id="0">TRAVEL-MEANS SELF-PROPELLED ) ) ( non-restrictive ( ROLE PROJECTED-OBJECT ) ) ) indicates that TEXT wants to identify guided missiles by saying that they are projectiles and that they have certain attributes</definiens>
			</definition>
			<definition id="1">
				<sentence>Inference propositions , for example , can indicate comparisons between database values : ( inference 0CEAN-ESCORT CRUISER ( HULL_NO ( I 2 DE ) ( i 2 CA ) ) ( smaller DISPLACEMENT ) ( smaller LENGTH ) ( PROPULSION STMTURGRD STMTURGRD ) ) Here TEXT `` infers that ocean escorts have smaller length and displacement than cruisers , that the two kinds of ships have the same form of propulsion and that their hull numbers differ in their first two letters .</sentence>
				<definiendum id="0">Inference propositions</definiendum>
			</definition>
			<definition id="2">
				<sentence>201 MUMBLE is a general-purpose generation framework which has been used with several domains and message representations\ [ McDonald 83b , Kaxlin 85\ ] ?</sentence>
				<definiendum id="0">MUMBLE</definiendum>
				<definiens id="0">a general-purpose generation framework which has been used with several domains and message representations\ [ McDonald 83b</definiens>
			</definition>
			<definition id="3">
				<sentence>SA amessage '' is simply an expression that the text planner ( here TEXT 's strategic component ) sends to MUMBLE to be translated .</sentence>
				<definiendum id="0">SA amessage</definiendum>
			</definition>
			<definition id="4">
				<sentence>For example , TEXT 's strategic component responds to a request to describe the ONR database with : ( attributive db OBJECT ( name REMARKS ) ) ( constituency OBJECT ( VEHICLE DESTRUCTIVE-DEVICE ) ) ( attributive db VEHICLE ( based-dbs ( SOME-TYPE-0F TRAVELMEANS ) ( SOME-TYPE-OF SPEED_INDICES ) ) ) ( attributive db DESTRUCTIVE-DEVICE ( based-dbs ( SOME-TYPE-OF LETHAL_INDICES ) ) ) which is then translated into English by MUMBLE as : All entities in the ONR database have DB attributes REMARKS .</sentence>
				<definiendum id="0">constituency OBJECT</definiendum>
				<definiens id="0">VEHICLE DESTRUCTIVE-DEVICE ) ) ( attributive db VEHICLE ( based-dbs ( SOME-TYPE-0F TRAVELMEANS ) ( SOME-TYPE-OF SPEED_INDICES ) ) ) ( attributive db DESTRUCTIVE-DEVICE ( based-dbs ( SOME-TYPE-OF LETHAL_INDICES</definiens>
			</definition>
			<definition id="5">
				<sentence>The vehicle has DB attributes that provide information on SPEED .</sentence>
				<definiendum id="0">DB</definiendum>
				<definiens id="0">attributes that provide information on SPEED</definiens>
			</definition>
			<definition id="6">
				<sentence>The destructive device has DB attributes that provide information on LETHAL .</sentence>
				<definiendum id="0">DB</definiendum>
				<definiens id="0">attributes that provide information on LETHAL</definiens>
			</definition>
			<definition id="7">
				<sentence>The message : ( identification SHIP WATER-VEHICLE ( restrictive TRAVEL-MODE SURFACE ) ) when received by MUMBLE , is first looked up in the dictionary , which indicates that the overall structure of the sentence will be : clause \ [ subject 1 I SHIP \ [ predicate\ ] vp / \ [ verb\ ] I \ [ objl\ ] ( WATEZ-VEHICLE ( reJtrictive TRAVEL-MODE SURFACE ) ) 207 The interpreter then traverses this ( partially filled-out ) surface structure tree , soon reaching the still untranslated message element SHIP .</sentence>
				<definiendum id="0">identification SHIP WATER-VEHICLE</definiendum>
				<definiens id="0">the still untranslated message element SHIP</definiens>
			</definition>
			<definition id="8">
				<sentence>The grammatical constraints depend in part on the message being translated and the current grammatical environment ( i.e. the grammar wriables ) , none of which is preserved in the generated English sentence .</sentence>
				<definiendum id="0">grammatical constraints</definiendum>
				<definiens id="0">depend in part on the message being translated and the current grammatical environment</definiens>
			</definition>
			<definition id="9">
				<sentence>This asymetry is a direct consequence of determinism ; something has to be decided first .</sentence>
				<definiendum id="0">something</definiendum>
				<definiens id="0">a direct consequence of determinism ;</definiens>
			</definition>
</paper>

		<paper id="1017">
			<definition id="0">
				<sentence>-~ ( p=pl ) ~ ... ~ ~ ( pfpm ) &amp; holds ( p , s ) 3 , % admissible ( a ( s ) ) t hoids , a ( s ) ) In particular , we can state the preconditions and consequences of dropping CIS577 .</sentence>
				<definiendum id="0">-~</definiendum>
				<definiendum id="1">admissible</definiendum>
				<definiens id="0">a ( s ) ) t hoids</definiens>
			</definition>
			<definition id="1">
				<sentence>RB ( holds ( enrolled ( h , C , fall ) , n ) &amp; holds ( date ( n ) &lt; Novl6 , n ) admissible ( drop ( h , CX . ) ) ) RB ( admissible ( drop ( h , CX n ) ) =~ holds ( -~enrolled ( h , C , fall ) , drop ( h , CX n ) ) ) RBl- ( p=enrolled ( h , C , fall ) ) admissible ( drop ( h , C ) ( n ) ) holds ( p , . ) holds ( p , drop ( h , C ) ( n ) ) ) Of course , this only partially solves the frame problem , since there will be implications of pl ... .. pm in general. For instance , it is likely that one might have an axiom stating that one receives a grade in a course only if the individual is enrolled in the course. Q 's S-goal in dropping CIS577 is not being in the course. By a process of reasoning discussed in \ [ 10 , 11\ ] , R may conclude that Q 's likely intended goal ( l-goal ) is not failing it. That is , R may believe : RBQB ( holds ( -ffaii ( Q , C ) , drop ( Q , C~ ( Sc ) ) ) 5 RB ( want ( Q , -4aii ( Q , C ) ) ) What we claim is : ( 1 ) R must give a truthful response addressing at least Q 's S-goal ; ( 2 ) in addition , R may have to provide information in order not to mislead Q ; and ( 3 ) R may give additional information to be cooperative in other ways. In the subsections below , we enumerate the cases that R must check in effecting ( 2 ) . In each case , we give both a formal representation of the additional information to be conveyed and a possible English gloss. In that gloss , the part addressing Q 's S-goal wiil appear in normal type , while the additional information will be underlined. For each case , we give two formulae : a statement of R 's beliefs about the current situation and an axiom stating R 's beliefs about Q 's expectations. Formulae of the first type have the form RB ( P ) . Formulae of the second type relate such beliefs to performing an informing action. They involve a statement of the form ~lPl =~ likely ( i , Se ) , where i is an informing act. For example , if R believes there is a better way to achieve Q 's goal , R is likely to inform Q of that better way. Since it is assumed that Q has this belief , we have QB ( RB\ [ P\ ] = likely ( i , Sc ) ) . Sit will also be the ease that RBQB ( admlssible ( drop ( Q , C~S¢ ) ) ) if Q 's asks `` How can ! drop CIS5777 '' , but not if he asks `` Can i drop CIS577f'. in the latter era , Q must of course believe that it may be admissible , or why ask the question. ! a either ease , R 's subsequent behavior dot~a't seem contingent on hil beliefs ab'~'~ beliefs about admissibility. 183 where we can equate ºQ believes i is likely '' with `` Q expects i. '' Since R has no direct access to Q 's beliefs , this must be embedded in R 's model of Q 's belief space. Therefore , the axioms have the form ( modulo quantifier placement ) RBQB ( RB\ [ P l = , likely { i , So ) ) . An informing act is meant to serve as a command to a natural language generator which selects appropriate iexical items , phrasing , etc. for a natural language utterance. Such an act has the form inform-that ( R , Q , P ) R informs Q that P istrue. Suppose that it is past the November 15th deadline or that the official records do n't show Q enrolled in CIS577. Then the enabling conditions for dropping it are not met. That is , R believes Q 's S-goal can not be achieved from So. \ [ 1\ ] RB ( want ( Q , -ffail ( Q , C ) ) &amp; - , admissible ( drop ( Q , C~Sc ) ) ) Thus R initially plans to answer `` You ca n't drop CIS577 '' . Beyond this , there are two possibilities. If R knows another action b that would achieve Q 's goals ( cf. formula \ [ 2\ ] ) , Q would expect to be informed about it. If not so informed , Q may mistakenly conclude that there is no other way. Formula \ [ 3\ ] states this belief that R has about Q 's expectations. I21 RB ( ( 3b ) \ [ admissible ( b ( Sc ) ) &amp; holds ( - , fail ( Q , C ) , b ( Sc ) ) i ) \ [ 31 RBQB ( RBIwant ( Q , -faiI ( Q , C ) ) &amp; - , admissible ( drop ( Q ( C\ ] ( Sc ) ) i &amp; nB\ [ ( 3b ) \ [ admissible ( b ( Se ) ) ~ holds ( -- faii ( Q , C ) ,6 ( ~c ) ) l\ ] =* likely ( inform-that ( R , Q , ( fib ) \ [ admis~ibh : ( b ( Sc ) ) e ; hold~Ofail ( Q , C ) , b ( Sc ) ) can ( Q , b ) ) , Sc ) \ ] ) R 's full response is therefore `` You ca n't drop 577 ; you can b. '' For instance , b could be changing status to auditor , which may be performed until December I. If R does n't know of any action or event that could achieve Q 's goal ( cf. \ [ 4\ ] ) , Q would expect to be so informed. Formula \ [ 5\ ] states this belief about Q 's expectations. \ [ 4\ ] RB ( - , ( 3a ) Iadmissible ( a ( Sc ) ) &amp; holds ( - , fail ( q , C ) , a ( Sc ) ) l ) \ [ 5\ ] RBqB ( RB ( want ( q , -- fail ( q , c ) ) &amp; - , ( 3a ) \ [ admissibleia ( S¢ ) ) `` ~ holdsl -- ffail ( q , c ) , a ( Sc ) ) \ ] ) =~ likely ( inform-that ( R , Q , - ( 3a ) \ [ admissible ( a ( Se ) ) 8 hol~ ( '. $ ait ( Q.C ) , a ( Sc ) } \ ] ) , Se ) ) To say only that Q can not drop the course does not exhibit expert cooperative behavior , since Q would be uncertain as to whether R had considered other alternatives. Therefore , R 's full response is `` You ca n't drop 577 ; there isn ~ anything you can do to prevent failing.= Notice that R 's analysis of the situation may turn up additional information which a cooperative expert 184 could provide that does not involve avoiding misleading Q. For instance , R could indicate enabling conditions that prevent there being a solution : suppose the request to drop the course is made after the November 15th deadline. Then R would believe the following , in addition to \ [ 1\ ] RB ( holds ( enrolled ( Q , C , fall ) , Sc ) /~ hold6 ( date ( Sc ) &gt; Nov15 , Sc D More generally , we need a schema such as the following about Q 's beliefs : RBQB ( RB\ [ want ( Q , '~fail ( Q , C D &amp; ( holds ( Pl , S ) &amp; ... &amp; hoids ( Pn , S ) =~ admissible ( a ( S ) ) ) &amp; ( -~tholds ( Pi , S ) , for some Pi above ) \ ] =~ iik ely ( in f orm-t hat ( R , Q , - , hol ds ( Pi , S ) ) , S ) ) In this ease the response should be `` 'You ca n't drop 577 ; Pi isn~ true . ''</sentence>
				<definiendum id="0">RB</definiendum>
				<definiendum id="1">informing act</definiendum>
				<definiendum id="2">RBQB</definiendum>
				<definiendum id="3">RBqB</definiendum>
				<definiendum id="4">RB</definiendum>
				<definiendum id="5">RBQB</definiendum>
				<definiens id="0">a formal representation of the additional information to be conveyed and a possible English gloss. In that gloss , the part addressing Q 's S-goal wiil appear in normal type</definiens>
				<definiens id="1">a statement of R 's beliefs about the current situation and an axiom stating R 's beliefs about Q 's expectations. Formulae of the</definiens>
				<definiens id="2">a command to a natural language generator which selects appropriate iexical items , phrasing</definiens>
				<definiens id="3">possibilities. If R knows another action b that would achieve Q 's goals ( cf. formula \ [ 2\ ] ) , Q would expect to be informed about it. If not so informed</definiens>
			</definition>
			<definition id="2">
				<sentence>Warren , D.H.D. WARPLAN : A System for Generating Plans .</sentence>
				<definiendum id="0">D.H.D. WARPLAN</definiendum>
			</definition>
</paper>

	</volume>
