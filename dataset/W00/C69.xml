<?xml version="1.0" encoding="UTF-8"?>
	<volume id="C69">

		<paper id="6601">
			<definition id="0">
				<sentence>A l~guage is an ordered triple L = ( V , C , f ) where V and C are two disjoint , non-empty , finite sets and f is sn application of C into the set of all subsets of the free semigroup F ( ~ generated by ¥ .</sentence>
				<definiendum id="0">l~guage</definiendum>
			</definition>
			<definition id="1">
				<sentence>Accordingly , we define a context-free grammar as an ordered triple G = ( V , C , R~ where V and C ar~ two disjoint , non-empty , finite sets and R is s subset of the Cartesian product of C with the free semigroup P ( VU C ) generated by the union of V and C. V and C are called the vocabulary and set of cste6ories ( or terminal and auxiliary vocabulary ) , respectively ; the elements r of R , which are of the form ( c , ~ with c ~ C and ~ E F ( V ~ ~ , are called ( production ) rules .</sentence>
				<definiendum id="0">R</definiendum>
				<definiens id="0">a context-free grammar as an ordered triple G = ( V , C , R~ where V and C ar~ two disjoint , non-empty , finite sets and R is s subset of the Cartesian product of C with the free semigroup P ( VU C ) generated by the union of V and C. V and C are called the vocabulary and set of cste6ories ( or terminal and auxiliary vocabulary )</definiens>
			</definition>
			<definition id="2">
				<sentence>e. formed of words only ) ; and the language L generated by a context-free ~rammar G = ~V , C , R~ is defined as L = 4¥ , C , f~ where , for any category c ~ C , f~ ) is the set of all terminal productions of c. ( Also , any language L / = ( V , C/ , fl ) with CtC C where fl is the mapping f above restricted to C / could be regarded ssa language genersted by G as well . )</sentence>
				<definiendum id="0">R~</definiendum>
				<definiendum id="1">fl</definiendum>
				<definiens id="0">the language L generated by a context-free ~rammar G = ~V , C ,</definiens>
			</definition>
			<definition id="3">
				<sentence>A flag diagram is an ordered septuple D - ( V , C , H , fl ' f2 ' gl ' g2~ ' where V and C are disjoint , non-empty , finite sets ; H is a finite oriented graph ; fl and f2 are mappings of two disjoint , non-empty subsets P1 end P2 ' respectively , of the set P of points ( vertices ) of H onto C ; and gl and g2 are mappings of two disjoint subsets E 1 and E2 , respectively , of the set E of edges of H , of which E 1 is non-empty , onto V and into C , respectively .</sentence>
				<definiendum id="0">flag diagram</definiendum>
				<definiendum id="1">H</definiendum>
				<definiens id="0">an ordered septuple D - ( V , C , H , fl ' f2 ' gl ' g2~ ' where V and C are disjoint , non-empty , finite sets</definiens>
				<definiens id="1">a finite oriented graph ; fl and f2 are mappings of two disjoint , non-empty subsets P1 end P2 ' respectively , of the set P of points ( vertices ) of H onto C</definiens>
				<definiens id="2">mappings of two disjoint subsets E 1 and E2 , respectively , of the set E of edges of H , of which E 1 is non-empty , onto V and into C , respectively</definiens>
			</definition>
			<definition id="4">
				<sentence>The word string VlV2 ... Vn , where , for i = I , 2 , ... , n , v i = gl ( ei ) , is called the word strin~ robe read along the c-path Q. The language represented h~ a finite state flag diagram D = &lt; V , C , H , fl ' f2 ' g~ is defined as L = ~V , C , f &gt; , where , for any c ~ C , f ( c ) is the set of all word strings to be read along some c-path of E. A language is a finite state language if it is represented by some finite state flag diagram .</sentence>
				<definiendum id="0">f ( c )</definiendum>
				<definiens id="0">word string VlV2 ... Vn , where , for i = I , 2 , ... , n , v i = gl ( ei ) , is called the word strin~ robe read along the c-path Q. The language represented h~ a finite state flag diagram D = &lt; V , C , H , fl ' f2 ' g~ is defined as L = ~V , C , f &gt; , where , for any c ~ C</definiens>
			</definition>
			<definition id="5">
				<sentence>Any point or edge of H '' and H ~ which was a starting c~-point , an ending c'-point , a ~-edge or a c~-edge in H '' and H , respectively ( c ' E C , v &amp; V ) , remains so after the replacement ; in particular , P3 and P4 remein marked or unmarked as they were in H '' rather then getting marked by a flag-head , bearing the s~bol c and pointing to the left and to the right , respectively , as Pl snd P2 ' respectively , were m~rked in H. Now , we define the language represented by a fls~ diagrem D = ( V , C , H , fl ' f2 ' gl ' g2 ) as L = &lt; V , C , f &gt; where , for any c E C , f ( c ) is the set of all word strings to be read along some c-path of the oriented graph H ' of some derivative D ' = ( V , C , H ' , fl ' # f~ , g~ , g~ ) of D. As a simple example , Fig .</sentence>
				<definiendum id="0">V</definiendum>
				<definiendum id="1">f ( c )</definiendum>
				<definiens id="0">the set of all word strings to be read along some c-path of the oriented graph H ' of some derivative D ' = ( V , C , H ' , fl ' # f~ , g~ , g~ ) of D. As a simple example , Fig</definiens>
			</definition>
</paper>

		<paper id="6903">
</paper>

		<paper id="6203">
</paper>

		<paper id="2401">
			<definition id="0">
				<sentence>Coffee is a brown color .</sentence>
				<definiendum id="0">Coffee</definiendum>
				<definiens id="0">a brown color</definiens>
			</definition>
			<definition id="1">
				<sentence>In the category system , F~ALE and HELP are the two scorings which apply to the word mother and its variants .</sentence>
				<definiendum id="0">HELP</definiendum>
			</definition>
			<definition id="2">
				<sentence>Li~ the 25 F girls , they were occupied with ideas about children ; but violent aggressic~ was their most prominent concern and distinguishes them most clearly from other groups A second study by Hartsough and Laffal explores the question whether scientists who have been described as visual imagists and scientists who have been described as verbal imagists ( Roe , 1952 ) will also differ in the types of content ~mployed in their writing .</sentence>
				<definiendum id="0">Laffal</definiendum>
			</definition>
</paper>

		<paper id="0101">
			<definition id="0">
				<sentence>A regular syntactic h-grammar is an ordered triple &lt; V , ~ , \ [ 1 &gt; , where V =~ a 1 , a 2 ... .. a k \ ] is a finite set of symbols ( branch labels ) , ~ is a mapping of V into the set of positive integers ( for every a EV the integer C ( a ) being the maximum number of branches labelled a which can grow out of any single node ) ands is a finite set of ( ~ ( a 1 ) , ~ ( a 2 ) ... .. ~ ( a k ) ) -regular ETWs .</sentence>
				<definiendum id="0">regular syntactic h-grammar</definiendum>
				<definiendum id="1">V</definiendum>
				<definiendum id="2">~</definiendum>
				<definiens id="0">an ordered triple &lt; V</definiens>
				<definiens id="1">a finite set of symbols ( branch labels</definiens>
				<definiens id="2">a mapping of V into the set of positive integers</definiens>
			</definition>
</paper>

		<paper id="4901">
			<definition id="0">
				<sentence>EZ~ ( ~ , ~ &gt; ~ i~ 1 ~E~ ( k~ , ~ ) m ( M mEM = tMj -1 IMILe-~s ) • O ( ILtl ) ~ = e + O ( ILtl ) Definition B I| Lt , Lt , t &gt; s represent the lexicons of two languages which are indenendent ~ languages of the same parent language ( which are said to solit at time s ) if ' = L '' Ls s ' and if s m -- -*-k ( in beth languages ) m -- t-~t l ' in the first language t m~l '' in the second language , then ~ ( k , l ' ) and ~ ( k ) l '' ) are independent random variables .</sentence>
				<definiendum id="0">EZ~</definiendum>
				<definiens id="0">k , l ' ) and ~ ( k ) l '' ) are independent random variables</definiens>
			</definition>
			<definition id="1">
				<sentence>If S m ~ ~ for all m~M , and if for distinct m , n~M , S m ~ S n , then M is a set of meanings on L , with respect to the distribution p , and eaoh non-zero p ( m , l ) represents a word-mean in ~ relationshi p between 1 and m. p ( m , l ) should be understood as the probability that the word i will be used , and that meaning m will be intended ( when no information is given about the context ) .</sentence>
				<definiendum id="0">m. p</definiendum>
				<definiens id="0">a set of meanings on L</definiens>
			</definition>
			<definition id="2">
				<sentence>The proof consists of a construction of a particular system ( which is otherwise uninteresting ) and is presented as Appendix 3 in Sankoff ( 1969 ) .</sentence>
				<definiendum id="0">proof</definiendum>
				<definiens id="0">consists of a construction of a particular system ( which is otherwise uninteresting</definiens>
			</definition>
			<definition id="3">
				<sentence>Definition A word-meaning process is a set of word-meaning system histories indexed by 60 ~ ~ where ( ~ , ~ , P ) is a probability measure space .</sentence>
				<definiendum id="0">word-meaning process</definiendum>
				<definiens id="0">a probability measure space</definiens>
			</definition>
			<definition id="4">
				<sentence>The Yi are also 8rownlan sample paths , but are no longer completely independent in that yi ( t ) = xi ( t ) ~ ( t ) i=1 i=l i=l = no~ ( t ) no~ ( t ) Let = O. Pt ( m , l ) = po ( m , l ) * yi ( t ) , where i = l ( m , l ) is determined beforehand .</sentence>
				<definiendum id="0">Pt</definiendum>
				<definiens id="0">also 8rownlan sample paths , but are no longer completely independent in that yi ( t ) = xi ( t ) ~ ( t ) i=1 i=l i=l = no~ ( t ) no~ ( t ) Let = O.</definiens>
			</definition>
			<definition id="5">
				<sentence>Since it is the processes of lexlcal less and lexical replacement which are responsible for this decrease , 1 ~ ( 1 mln ds , t ( m , n ) ) is a likely candidate to replace Swadesh 's ~M m~Z lexicostatlstlc indicator .</sentence>
				<definiendum id="0">n ) )</definiendum>
				<definiens id="0">a likely candidate to replace Swadesh 's ~M m~Z lexicostatlstlc indicator</definiens>
			</definition>
</paper>

		<paper id="7401">
</paper>

		<paper id="6401">
			<definition id="0">
				<sentence>Kiefer , Ferenc : Bestimmung der syntaktischen Konnexlttlt yon Morphemesequenzen , KVAL PM 237 /t965/ Kiefer , Ferenc : Ein Algorithrnus for Konnexit~tsbestimmung , KVAL PM 248 /i965/ Kiefer , Ferenc : Lexical Redundancy Rules in Categorial Grammar , KVAL PM 302 /1966/ Kiefer , Ferenc : The Question of Ambiguity in Categorial Grammar , KVAL PM Z98 /1966/ Brodda , Benny : Om sekvenser av matriselement , KVAL Interim Report No 5 /i967/ Kiefer , Ferenc : The Possibility and/or Necessity of CSrules in Categorial Grammar , KVAL interim Report No 6 /1968/ Karlgren , Hans : Slant Grammar Calculus , KVAL PM 367 /1967/ Karlgren , Hans : Unique Labelling , KVAL PM 373 /1968/ Karlgren , Hans : Categorial Grammar Analysis of ContextSensitive Languages , KVAL Interim Report No il /1968/ Karlgren , Hans : LSsande av kategorialuttryck , KVAL Interim Report No IZ /1968/ Karlgren , Hans : Multi-index Syntactic Calculus , to appear in Computational Linguistics , Vol VIII Robinson , J. Jane : Dependency Structures and Transformational Rules , IBM , Thomas J. Watson Research Center , Scientific Report No 3 , Yorktown Heights /1968/</sentence>
				<definiendum id="0">Ferenc</definiendum>
				<definiens id="0">The Question of Ambiguity in Categorial Grammar</definiens>
			</definition>
</paper>

		<paper id="6101">
			<definition id="0">
				<sentence>To include non-binary branchings as well I suggest the following recursive formula g/if= ~21= 1 g/n/= 2 g/21 ~ ' , ~I + g/31 j=l ~'jl + ... 2 ... + g/n-2/ j~= g/j/ + F/n-I/ ~\ ] + I where n is the number of elements in the string .</sentence>
				<definiendum id="0">n</definiendum>
				<definiens id="0">the number of elements in the string</definiens>
			</definition>
			<definition id="1">
				<sentence>The transitive continuation matrix of the rules C_/a , n/ is a Boolean matrix whose element C/a , D/ is t if end only if the terminal symbol a is whichever but not the first element of the terminal strings of the n th rule .</sentence>
				<definiendum id="0">transitive continuation matrix of the rules C_/a , n/</definiendum>
				<definiens id="0">a Boolean matrix whose element C/a</definiens>
				<definiens id="1">the terminal symbol a is whichever but not the first element of the terminal strings of the n th rule</definiens>
			</definition>
</paper>

		<paper id="6202">
</paper>

		<paper id="5301">
			<definition id="0">
				<sentence>The feature specification consists of the -6character representation for each phonological unit fol~ded by at least 1 space followed by an ordered string of ÷ 's and 's corresponding to the feature value assignment .</sentence>
				<definiendum id="0">feature specification</definiendum>
				<definiens id="0">consists of the -6character representation for each phonological unit fol~ded by at least 1 space followed by an ordered string of ÷ 's and 's corresponding to the feature value assignment</definiens>
			</definition>
			<definition id="1">
				<sentence>The value of each M ( I , J ) may be either O or 1 , representing logical False or True ( the feature value or + ) respectviely .</sentence>
				<definiendum id="0">True</definiendum>
				<definiens id="0">the feature value or + ) respectviely</definiens>
			</definition>
			<definition id="2">
				<sentence>The input string ( the form to be tested ) is then stored as a pattern of features in the test matrix M such that each unit occupies one column of the matrix , allowing the entry of a~7 string of segments and boundaries up to length 50 .</sentence>
				<definiendum id="0">input string</definiendum>
				<definiens id="0">a pattern of features in the test matrix M such that each unit occupies one column of the matrix , allowing the entry of a~7 string of segments and boundaries up to length 50</definiens>
			</definition>
			<definition id="3">
				<sentence>LEFTTORI~ IF 7 M ( I , Sg ) then go to end 32 IF M ( I , C1 ) |7 M ( IoB~ ) then go to end 32 oeo end 32 : end ; ( PL/1 uses the synbol 7 for 'I~OT '' and 1 for 'DR '' ) The ne~ step is to determ~ the ~currence of the environment Y -llvention that any rule be interpreted as applicable in the presence of the formative boundary + , which has the featuresF~ ~gl in any case in wh~h the L rule is other ~8e app~able .</sentence>
				<definiendum id="0">ne~ step</definiendum>
				<definiens id="0">applicable in the presence of the formative boundary +</definiens>
			</definition>
			<definition id="4">
				<sentence>Nk : Output '~Kk : Free k ; Output Code IF MATCH UNIT __ ; ELSE GO TO NE~T ; `` IF MATCH UNIT __ ; ELSE GO TO PNk ; `` IF MATCH UNIT __ ; ELSE GO TO Bij ; `` ALLOCATE STK~ STK=i ; `` ALLOCATE STK ; STK_-P ; `` `` ALLOCATE STK~ STK=I ; `` `` GO TO BRi ; '' 'Bij : J=STK ; FREE STK~ P : STK ; `` '~TEM ( i , J ) : ALLOCATE ST\ ] ( ; STK=~+l ; `` `` GO TO BRi ; `` 'BiJ : FREE STK ; '~TEM ( i , j ) : FREE STK ; FREE STK ; '' IF FLAG_-O THEN GO TO PNk ; '' FREE STK ; `` GD TO NEXT ; '' ALLOCATE STK ; STK_-O ; '° FLAG=o ; `` GO TO SKk ; `` P=STK ; `` FREE STK ; `` -20i0 .</sentence>
				<definiendum id="0">'' 'Bij</definiendum>
				<definiens id="0">Output '~Kk : Free k ; Output Code IF MATCH UNIT __</definiens>
			</definition>
</paper>

		<paper id="6001">
</paper>

		<paper id="4701">
			<definition id="0">
				<sentence>A G S maps strings in the language , L ( G ) , corresponding to an MAG , G , into strings in the language , L ( G ' ) , corresponding to another MAG , G ' .</sentence>
				<definiendum id="0">G S</definiendum>
				<definiens id="0">maps strings in the language , L ( G ) , corresponding to an MAG , G , into strings in the language , L ( G ' ) , corresponding to another MAG , G '</definiens>
			</definition>
			<definition id="1">
				<sentence>-2Briefly an AG consists of a finite alphabet , a finite set of strings on this alphabet and a finite set of adJunction rules which state how certain adjunct strings are adjoined to certain host strings .</sentence>
				<definiendum id="0">AG</definiendum>
				<definiens id="0">consists of a finite alphabet , a finite set of strings on this alphabet and a finite set of adJunction rules which state how certain adjunct strings are adjoined to certain host strings</definiens>
			</definition>
			<definition id="2">
				<sentence>The corresponding language called a String Adjunct Language ( AL ) is then defined as the set of all strings derived from a certain specified subset of the given set of finite strings .</sentence>
				<definiendum id="0">String Adjunct Language ( AL</definiendum>
				<definiens id="0">the set of all strings derived from a certain specified subset of the given set of finite strings</definiens>
			</definition>
			<definition id="3">
				<sentence>A local right adjunction rule ri~k is similarly defined as a 3-tuple ~i , oJ , rk ) , ~i e ~ , ~d ¢ ~ ~ rk is the point of adjunction of rij~o and .</sentence>
				<definiendum id="0">local right adjunction rule ri~k</definiendum>
			</definition>
			<definition id="4">
				<sentence>ik is a local~left ad~unction rule then ~k = ~k and if Uijk~is a loc~l right adjunction rule then ~k = rk '' Finally , we have the f on~ng Definition 2.1.1 A local string adjunct grammar ( LAG ) , G is a 6tuple , G = ( A , ~ , ~c ' ~ ' ~a ' J ) where A is the alphabet , ~ is the set of basic strings , L~ is the set of basic center strings , ~h is the set of basic host sErings , ~ is the sat of basic adjunct strings , and J is a finite set of local adjunction rules .</sentence>
				<definiendum id="0">ik</definiendum>
				<definiendum id="1">LAG</definiendum>
				<definiendum id="2">G</definiendum>
				<definiendum id="3">L~</definiendum>
				<definiendum id="4">~h</definiendum>
				<definiendum id="5">J</definiendum>
				<definiens id="0">a 6tuple</definiens>
				<definiens id="1">the set of basic strings ,</definiens>
				<definiens id="2">the set of basic center strings</definiens>
				<definiens id="3">the sat of basic adjunct strings , and</definiens>
				<definiens id="4">a finite set of local adjunction rules</definiens>
			</definition>
			<definition id="5">
				<sentence>Node lO is the root node .</sentence>
				<definiendum id="0">Node lO</definiendum>
				<definiens id="0">the root node</definiens>
			</definition>
			<definition id="6">
				<sentence>i Every LAL is a CFL ( context free language ) .</sentence>
				<definiendum id="0">LAL</definiendum>
			</definition>
			<definition id="7">
				<sentence>~ A distributed ad~unction rule , dij k is a 3tuple , ( ai , ( aj ) , ~k ) where a i ¢ E ; aj ¢ E ; ( aj ) denotes a specified segmentation of aj ; { k is an adjunction 'vector ' , ~kl , % , ... , ~kn ; Ek i 's are the points of adjunction of ai , '' and ~k i = ~ki or rki , 1 ~ k i ~ m , k i ~ ki+l , sad if k i = ki+ 1 then ~ki = ~k i sad ~ki+ lrki+l. The meaning of ~i-'k is that from the host oi string , say , ap , by adjoining the segments of aj , ajn at the points of adjunction ~kl , ~ , ... , ~kn ly .</sentence>
				<definiendum id="0">dij k</definiendum>
				<definiens id="0">a 3tuple , ( ai , ( aj ) , ~k ) where a i ¢ E ; aj ¢ E ; ( aj ) denotes a specified segmentation of aj ; { k is an adjunction 'vector ' , ~kl , % , ... , ~kn</definiens>
				<definiens id="1">The meaning of ~i-'k is that from the host oi string , say , ap , by adjoining the segments of aj , ajn at the points of adjunction ~kl , ~ , ... , ~kn ly</definiens>
			</definition>
			<definition id="8">
				<sentence>Definition 2.6.1 An IAGN ( or DAGN ) , G , is a 7-tuple ( A , N , ~ , Zc , Dn , Ea , J ) where A is a finite alphabet , N is a finite set ( possibly empty ) of null symbols , ~ is a finite set of basic strings , Zc c Z is the set of basic center strings , ~h is the set of basic host strings and ~a is the set of basic adjunct strings , E = Z c U E h U E a and J is a finite set of adjunction rules .</sentence>
				<definiendum id="0">IAGN</definiendum>
				<definiendum id="1">N</definiendum>
				<definiendum id="2">Zc c Z</definiendum>
				<definiendum id="3">~h</definiendum>
				<definiendum id="4">~a</definiendum>
				<definiendum id="5">J</definiendum>
				<definiens id="0">a 7-tuple ( A , N , ~ , Zc , Dn , Ea , J ) where A is a finite alphabet</definiens>
				<definiens id="1">a finite set ( possibly empty ) of null symbols</definiens>
				<definiens id="2">a finite set of basic strings</definiens>
				<definiens id="3">the set of basic center strings</definiens>
				<definiens id="4">the set of basic adjunct strings , E = Z c U E h U E a and</definiens>
				<definiens id="5">a finite set of adjunction rules</definiens>
			</definition>
			<definition id="9">
				<sentence>IAGN ( or DAGN ) can be considered as gra~nars of a mixed style as we use rules of two different styles adjunction rules and 'rewrite rules ' of a special type .</sentence>
				<definiendum id="0">IAGN</definiendum>
				<definiendum id="1">DAGN</definiendum>
				<definiens id="0">gra~nars of a mixed style as we use rules of two different styles adjunction rules and 'rewrite rules ' of a special type</definiens>
			</definition>
			<definition id="10">
				<sentence>Basic adjunct strings are basic adjunct forms , e.g. , P N ( from Philadelphia ) , A ( old ) , wh N t V ( whom John saw ) , wh t V N ( who saw Jim ) , D ( ~ -- ~ , etc .</sentence>
				<definiendum id="0">Basic adjunct strings</definiendum>
				<definiens id="0">basic adjunct forms</definiens>
			</definition>
			<definition id="11">
				<sentence>Each de-~Ive'~-r~-~ in L ( G ) is thus a derived sentence form , e.g. , ( assuming suitable adjunction rules ) , N P N t V N ( a man from Philadelphia bought books ) , A N t V ( an 61d man came ) , N wh ~ t V t V D ( the man whom Bill saw ran ~ ) , N wh N wh t V ~ t V t V D ( ~he books ( which ) the man who met Jim boushtwill arrive soon ) , etc. ( ignoring articles for simplicity ) .</sentence>
				<definiendum id="0">suitable adjunction rules</definiendum>
				<definiendum id="1">t V</definiendum>
				<definiens id="0">thus a derived sentence form</definiens>
				<definiens id="1">a man from Philadelphia bought books ) , A N</definiens>
				<definiens id="2">the man whom Bill saw ran ~ ) , N wh N wh t V ~ t V t V D ( ~he books ( which ) the man who met Jim boushtwill arrive soon ) , etc. ( ignoring articles for simplicity )</definiens>
			</definition>
			<definition id="12">
				<sentence>A oi c which does not contain S will be called an elementary basic string and a ui ¢ E which contains one or more S 's will be called a basic string .</sentence>
				<definiendum id="0">oi c</definiendum>
				<definiens id="0">basic string and a ui ¢ E which contains one or more S 's will be called a basic string</definiens>
			</definition>
			<definition id="13">
				<sentence>The adjunction rules ( local or distributed ) are defined as before and we adopt the same convention as in the case of the null symbols , i.e. , in an adjunction rule if the host is a complex basic string we disregard the S symbols in it as far as points of adjunction are concerned .</sentence>
				<definiendum id="0">adjunction rules</definiendum>
				<definiens id="0">before and we adopt the same convention as in the case of the null symbols , i.e. , in an adjunction rule if the host is a complex basic string we disregard the S symbols in it as far as points of adjunction are concerned</definiens>
			</definition>
			<definition id="14">
				<sentence>Thus we have the following S Definition ~.2.1 An MAG , G , is a 9-tuple , G = ( A , S , E , E c , ~ , • Ea ' E~ ' J ' R ) where A is the alphabet ( terminal ) , S is a 'nonterminal ' s~m~ol ( S ~ A ) , Z is the set of basic strings , ~c is the set of basic center strings , E h is the set of basic host strings , E a is the set of basic adjunct strings , Z r is the set of basic replacer strings , J is a finite set of adjunction rules ( local or distributed ) , and R is a finite set of replacement rules .</sentence>
				<definiendum id="0">S</definiendum>
				<definiendum id="1">Z</definiendum>
				<definiendum id="2">E h</definiendum>
				<definiendum id="3">E a</definiendum>
				<definiendum id="4">Z r</definiendum>
				<definiendum id="5">J</definiendum>
				<definiendum id="6">R</definiendum>
				<definiens id="0">a 9-tuple , G = ( A , S , E , E c , ~ , • Ea ' E~ ' J ' R ) where A is the alphabet ( terminal )</definiens>
				<definiens id="1">the set of basic strings , ~c is the set of basic center strings</definiens>
				<definiens id="2">the set of basic host strings</definiens>
				<definiens id="3">the set of basic adjunct strings</definiens>
				<definiens id="4">the set of basic replacer strings</definiens>
				<definiens id="5">a finite set of adjunction rules ( local or distributed ) , and</definiens>
				<definiens id="6">a finite set of replacement rules</definiens>
			</definition>
			<definition id="15">
				<sentence>be z. F9 q. ~c ,5 , o_o , % b &lt; xo , bb ~Iccc~ FI &amp; . 3. 3 , I. W= ~.bloo.~bh~ % cccc ='~n MAGr G ~ E~ '' ~'~ ~.2. `` f. = aSe , l 2. o.~Sc = o- , : -17FiG `` ~. % . 2.. A in uj and aj is adjoined to o. , and u~ is contained in and Uk ° k 'depth ' 2 ) with respect to ~i and this is so both in the sense of a PSG and an MAG. Now ul is two levels down where the first level is due to an adjunction ~ud the second due to containment , but is two levels down where both levels are due to containment. Thus in an MAG the depth of embedding of string can be characterized not only by the number of levels involved but also by stating for each level whether it is due to adjunction or containment. There is also the possibility of characterizing an arbitrary depth of embedding in terms recurrent patterns of adJunction and/or containment levels. In this section we will be concerned with the construction of an MAG , G , with ~ = ~c for an MAG , G ' , ( for which ? 2 ~ ~c ' , in general ) such that G is related to G ' by means of certain operations ( see Section 2.11 last paragraph ) . Let A = Ill ' 12 ' `` ' '' ~n \ ] be a finite set of deformations ( to be defined later ) . Definition 3.4.1 A Generation Scheme , G~ is a pair ( G , A ) where G is an NAG , G = ( ~c , J , R ) , A is a f~nite set of deformations , and with each rule u e J and each rule p ¢ R , we associate unique subsets of A , say , ~u and ~ respectively. Let C be a finite set of constants. We say that a string s ' is a deformed a if every symbol of ~ ' is either a constant ( i.e. , is in C^ ) or is a symbol of a or both , That is , a ' is obtained from a Ey one or more of the operations of permuting , deleting , or repeating symbols of a or adding one or more symbols from C . 0 Definition ~.4.2 Let u = ( ~i , a~ , ~k ) c J and let d u be the • ' v assoclated subset of deformations. Then a Ji ¢ Au maps the rule u = ( ai , aj , ~k ) into a 3-tuple ( ui ' , aj ' , ~k ' ) where a i ' = ai , aj ' is a deformed aj ( the specific choice of operations of permuting , deleting , or repeating symbols Of a j or adding constants is determined by ori ) , and ~k ' is an adjunction 'vector ' of ui not necessarily 18 L the same as ~k '' We write this as Ji ( u ) = u ' where u ' = ( ai ' , uj ' , ~k ' ) .* Similarly , a li¢ Ap , P = &lt; a i , aj &gt; , maps p into a pair &lt; oi ' , oj ' &gt; where a i ' = oi and aj ' is a deformed aj ( h i determines the specific deformation as before ) .</sentence>
				<definiendum id="0">MAG. Now ul</definiendum>
				<definiendum id="1">G~</definiendum>
				<definiens id="0">two levels down where both levels are due to containment. Thus in an MAG the depth of embedding of string can be characterized not only by the number of levels involved but also by stating for each level whether it is due to adjunction or containment. There is also the possibility of characterizing an arbitrary depth of embedding in terms recurrent patterns of adJunction and/or containment levels. In this section we will be concerned with the construction of an MAG , G , with ~ = ~c for an MAG , G '</definiens>
				<definiens id="1">a pair ( G , A ) where G is an NAG , G = ( ~c , J , R ) , A is a f~nite set of deformations , and with each rule u e J and each rule p ¢ R , we associate unique subsets of A , say , ~u and ~ respectively. Let C be a finite set of constants. We say that a string s ' is a deformed a if every symbol of ~ ' is either a constant ( i.e. , is in C^ ) or is a symbol of a or both , That is , a ' is obtained from a Ey one or more of the operations of permuting , deleting , or repeating symbols of a or adding one or more symbols from C . 0 Definition ~.4.2 Let u = ( ~i , a~ , ~k ) c J and let d u be the • ' v assoclated subset of deformations. Then a Ji ¢ Au maps the rule u = ( ai , aj , ~k ) into a 3-tuple ( ui ' , aj ' , ~k ' ) where a i ' = ai , aj ' is a deformed aj ( the specific choice of operations of permuting , deleting , or repeating symbols Of a j or adding constants is determined by ori )</definiens>
				<definiens id="2">a deformed aj ( h i determines the specific deformation as before )</definiens>
			</definition>
			<definition id="16">
				<sentence>Let G = ( Ze , J , R ) be an NAG ( with Z = Z c ) where A = \ [ N , t , V , A\ ] ; Ze=Z=\ [ ~i=NtV , a 2=~tvN , o3=~tvS , o4= N t VN S , a9 = S t VN , a6 = S t VA , c 7 = S t V S } * ; J = \ [ ( al , aj , rl\ ] U ~ ( o 2 , ~j , r I ) O \ [ ( a 2 , oj , r~¢ ) } O ~ ( o 3 , oj , rl ) 3 U { ( a\ ] ¢ , oj , rl ) ~ } U { ( ab , o~i ' rl~ \ ] U \ [ ( aS , ( ~j , r3 ) } , J = I , 2 , 3 , b~ ) * A subcategorization of N 's , V 's , and A 's is implicit here and is not shown explicitly in the notation .</sentence>
				<definiendum id="0">NAG</definiendum>
				<definiendum id="1">A 's</definiendum>
				<definiens id="0">Z c ) where A = \ [ N , t</definiens>
			</definition>
			<definition id="17">
				<sentence>An MsAL has the property that the lengths of the strings in it ( assuming an ordering in terms of increasing lengths ) grow no faster than an exponential .</sentence>
				<definiendum id="0">MsAL</definiendum>
				<definiens id="0">has the property that the lengths of the strings in it ( assuming an ordering in terms of increasing lengths ) grow no faster than an exponential</definiens>
			</definition>
			<definition id="18">
				<sentence>E. L. Keenan ( 1969 ) , A Logical Base for a Transformational Grammar of English , Ph.D. dissertation , University of Pennsylvania .</sentence>
				<definiendum id="0">Logical Base</definiendum>
				<definiens id="0">for a Transformational Grammar of English , Ph.D. dissertation</definiens>
			</definition>
</paper>

		<paper id="3601">
			<definition id="0">
				<sentence>d ) Compiling the Information Compiling a dictionary entails discovering facts about a language and arranging these facts in such a way that they may be conveniently retrieved .</sentence>
				<definiendum id="0">Information Compiling</definiendum>
				<definiens id="0">a dictionary entails discovering facts about a language and arranging these facts in such a way that they may be conveniently retrieved</definiens>
			</definition>
			<definition id="1">
				<sentence>The minimum segment is one word ; the maximum segment is an entire sentence~ no segment is fermi-19nated inside a ~ord .</sentence>
				<definiendum id="0">minimum segment</definiendum>
				<definiendum id="1">maximum segment</definiendum>
				<definiens id="0">an entire sentence~ no segment is fermi-19nated inside a ~ord</definiens>
			</definition>
			<definition id="2">
				<sentence>Lexical information is the consummation and thereby also the obviation of research through grammars and articles which discuss certain questions and present a few examples of lexical items which have certain properties .</sentence>
				<definiendum id="0">Lexical information</definiendum>
			</definition>
</paper>

		<paper id="4501">
			<definition id="0">
				<sentence>Recall that a ( contextsensitive ) phrase structure grammar is an ordered quadruple ( V T , V_~ , S__ , I~ ) SUCh that ~T and~ are finite , nonempty , disjoint sets ( the tern~-inal vocabulary and nonterminal vocabulary , respectively ) , S is a member of V -- -N m finite set of rules of the type ( i ) , ( the initial symbol ) and R is a _ -I_ ~ _ -4where &gt; O , m , n &gt; O , A EVb/ , y. , CL , S EV U~ ( l &lt; i &lt; , _ ~ -j -k -T ... . 1 &lt; j &lt; m , I &lt; k &lt; n ) and ~ &gt; , /and ~ are special symbols not in VTUV_N .</sentence>
				<definiendum id="0">S</definiendum>
				<definiendum id="1">R</definiendum>
				<definiens id="0">an ordered quadruple ( V T , V_~ , S__ , I~ ) SUCh that ~T and~ are finite , nonempty , disjoint sets ( the tern~-inal vocabulary and nonterminal vocabulary , respectively ) ,</definiens>
				<definiens id="1">a member of V -- -N m finite set of rules of the type</definiens>
				<definiens id="2">the initial symbol</definiens>
			</definition>
			<definition id="1">
				<sentence>_~p. -- 3 ( ii ) ~x__j , p E ( LUR ) * , I &lt; i &lt; m , O &lt; j &lt; ~. , O &lt; k &lt; _~-i a , ~d ~_i , - '' ~_i ~ Z~ ( iii ) ~ = } \ [ . ( ~. , \ ] , ~ CL. E -~N ( O1'we11-f°rmed ) j I &lt; i &lt; m , C~ ~ ~ -~_ , i &lt; j &lt; ~and ~-j_ C-'~-J -~=IEY ~.'\ ] y. , if ~ ~ v ( ~j , ~on-formed -- T , l &lt; k &lt; n. : ~r5 ~-~ ~ 'well-formed ... .. Definition 3 : The debracketing function d is the homomorphism from ( V_T U h U R ) * onto ~T* defined by -6a_. if~v T ( i ) d ( ct ) = -and e , ifa E LUR ( ii ) d ( v $ _._ ) = D ( cp ) d ( ~ ) for any labeled bracketings ¢p and ~_. A labeled bracketing ¢p is analyzed by G if d ( cp ) E VT~ , if there is a weU-formed labeled bracketing ~ such that ~= IS ~-\ ] S and if every node of Cp satisfies some member of R. We say that a string x is parsed by G if there is a \ ] abeled bracketing ¢p such that cp is analyzed by G and d ( cp ) = x. The set of labeled bracketings analyzed'by G will be written A ( ~ and the set of strings parsed by G will be written P ( G ) . The Languages Parsed by Phrase Structure Grammars We can think of the labeled bracketings analyzed by a phrase structure grammar G as being strings over a terminal vocabulary which is the union of CJs terminal vocabulary and its set of left and right labeled brackets. We may then ask what type of language A ( G ) is. Theorem 1 provides the answer that A ( G ) is a context-free language and from this Theorem 3.8 of Peters and Ritchie ( 1969a ) follows immediately as Corollary 1. We now proceed to state these results. Theorem l : ~f G is a phrase structure grammar , then A ( G ) i -7is a context-free language. • V , S , 1~ ) be any phrase structure Proof : LetG_ - ( V T~N grammar and let L and R be the corresponding set of left and right labeled brackets. To prove the theorem , it suffices to describe a pushdown-storage automaton M which accepts A ( G ) since pushdownostorage automata ~ accept just the context-free languages ( Chomsky , 1963 , Theorem 6 ) . I will describe the automaton M informally since this will provide more insight into its operation. Formal construction of M from this description is a straightforward • and tedious exercise and is therefore omitted. I~ can receive as input any string over V U L U R. w T Its pushdown-store can contain symbols from ~T U ~N U I~UR ' , where 1~ t is a set of symbols each corresponding to the string resulting from inserting a single ITpointer '' ( I ) in the leftcontext portion c~ a rule ( e. g. ( 3 ) ) or to the string resulting from insertion of a 1 in any string which is the rightcontext Qf a rule of R ( e.g. ~ -- 1 `` ' '' I ~ ... . ~ ) m -'I -~1 ( 3 ) A~ &gt; , r ... , ~ I I~ -- I -CLI ... ...</sentence>
				<definiendum id="0">p E</definiendum>
				<definiendum id="1">CL. E -~N</definiendum>
				<definiens id="0">the homomorphism from ( V_T U h U R ) * onto ~T* defined by -6a_. if~v T ( i ) d ( ct ) = -and e , ifa E LUR ( ii ) d ( v $ _._ ) = D ( cp ) d ( ~ ) for any labeled bracketings ¢p and ~_. A labeled bracketing ¢p is analyzed by G if d ( cp ) E VT~ , if there is a weU-formed labeled bracketing ~ such that ~= IS ~-\ ] S and if every node of Cp satisfies some member of R. We say that a string x is parsed by G if there is a \ ] abeled bracketing ¢p such that cp is analyzed by G and d ( cp ) = x. The set of labeled bracketings analyzed'by G will be written A ( ~ and the set of strings parsed by G will be written P ( G ) . The Languages Parsed by Phrase Structure Grammars We can think of the labeled bracketings analyzed by a phrase structure grammar G as being strings over a terminal vocabulary which is the union of CJs terminal vocabulary and its set of left and right labeled brackets. We may then ask what type of language A ( G ) is. Theorem 1 provides the answer that A ( G ) is a context-free language and from this Theorem 3.8 of Peters and Ritchie ( 1969a ) follows immediately as Corollary 1. We now proceed to state these results. Theorem l : ~f G is a phrase structure grammar , then A ( G ) i -7is a context-free language. • V , S , 1~ ) be any phrase structure Proof : LetG_ - ( V T~N grammar and let L and R be the corresponding set of left and right labeled brackets. To prove the theorem , it suffices to describe a pushdown-storage automaton M which accepts A ( G ) since pushdownostorage automata ~ accept just the context-free languages ( Chomsky , 1963 , Theorem 6 ) . I will describe the automaton M informally since this will provide more insight into its operation. Formal construction of M from this description is a straightforward • and tedious exercise and is therefore omitted. I~ can receive as input any string over V U L U R. w T Its pushdown-store can contain symbols from ~T U ~N U I~UR ' , where 1~ t is a set of symbols each corresponding to the string resulting from inserting a single ITpointer '' ( I ) in the leftcontext portion c~ a rule ( e. g. ( 3 ) ) or to the string resulting from insertion of a 1 in any string which is the rightcontext Qf a rule of R</definiens>
			</definition>
			<definition id="2">
				<sentence>Corollary1 : For every phrase structure grammar _G , P ( G ) is a context-free language and conversely .</sentence>
				<definiendum id="0">Corollary1</definiendum>
				<definiens id="0">For every phrase structure grammar _G , P ( G ) is a context-free language and conversely</definiens>
			</definition>
			<definition id="3">
				<sentence>Remark : For any phrase structunre grammar G , a pushdown-storage automaton M ' accepting I~G ) can be obtained from the automaton M described in the proof of Theorem 1 by altering operations ( 5 ) and ( 7 ) so that they apply regardless of what input symbol is scanned and do not move the input tape .</sentence>
				<definiendum id="0">Remark</definiendum>
				<definiens id="0">For any phrase structunre grammar</definiens>
			</definition>
</paper>

		<paper id="4401">
			<definition id="0">
				<sentence>Embedded clauses appear in parentheses following the clause in which they are embedded .</sentence>
				<definiendum id="0">Embedded clauses</definiendum>
				<definiens id="0">appear in parentheses following the clause in which they are embedded</definiens>
			</definition>
			<definition id="1">
				<sentence>~_eeClauae , s-m 1 29.15 370 Clauses , Nested vs. Non-Nested 1 .1 10800 material in Parentheses 1 2.9 3720 Sentence Length in ~orde 6 63.5 354 Sentence Length in Clauses 4 6i.1 300 Paragraph Length in Clauses 2 76.35 154 Paragraph Length An Sentences 1 98.4 110 -2qBailey , Richard W. `` Statistics and Style : A Historical SuPvsy . ''</sentence>
				<definiendum id="0">Style</definiendum>
			</definition>
</paper>

		<paper id="5801">
			<definition id="0">
				<sentence>The complement , union , intersection , and converse relations are defined by xRy ~ xRy x ( R n S ) y xRy A xSy x ( R US ) y -z xRy V xSy xR-ly yRx The identity relation I is defined by xly _= x = y The product and power relations are defined by xRiSy ( , ~z ) \ [ xRz A zSy\ ] R n : RIR ~-~ n~l The inclusion and equality of relations are defined by R = S xRy -- -- - &gt; xSy I R = S R = S A S = R Under the assumption that synonymy and antonymy are ternary relations on the set of all words , the following definitions will be used : xSiY E word x is a synonym of word y with respect to the intension i ( or word x is synonymous in sense i to word y ) xAiY E word x is an antonym of word y with respect to the intension i ( or word x is antonymous in sense i to word y ) In addition to the synonymy and antonymy relations , it will be useful to introduce the following classes that are the images by these relations .</sentence>
				<definiendum id="0">xSiY E word x</definiendum>
				<definiens id="0">xRy x ( R n S ) y xRy A xSy x ( R US ) y -z xRy V xSy xR-ly yRx The identity relation I is defined by xly _= x = y The product and power relations are defined by xRiSy ( , ~z ) \ [ xRz A zSy\ ] R n : RIR ~-~ n~l The inclusion and equality of relations are defined by R = S xRy -- -- - &gt; xSy I R = S R = S A S = R Under the assumption that synonymy and antonymy are ternary relations on the set of all words</definiens>
				<definiens id="1">a synonym of word y with respect to the intension i ( or word x is synonymous in sense i to word y ) xAiY E word x is an antonym of word y with respect to the intension i ( or word x is antonymous in sense i to word y ) In addition to the synonymy and antonymy relations</definiens>
			</definition>
			<definition id="1">
				<sentence>The synonym class of a word y is defined by si ( Y ) ~ { x : xSiY } which may be extended to an arbitrary set E of words by si ( E ) ~ { x : ( ~y ) \ [ y c E A xSiY\ ] } Similarly , the antonym class of a word y is defined by ai ( Y ) ~ { x : xAiY } which may be extended to a set E of words by ai ( E ) E { x : ( ~y ) \ [ y c E A xAiY\ ] } Following Edmundson \ [ 3\ ] , it will be assumed that the synonymy and antonymy relations are defined by the following set of axioms-rather than as in Edmundson \ [ 2\ ] .</sentence>
				<definiendum id="0">synonym class of a word y</definiendum>
			</definition>
			<definition id="2">
				<sentence>Axiom i ( Reflexive ) : Axiom 2 ( Symmetric ) : Axiom 3 ( Transitive ) : Axiom 4 ( Irreflexive ) : Axiom 5 ( Symmetric ) : Axiom 6 ( Ant~transitive ) : Axiom 7 ( Right-identity ) : Axiom 8 ( Nonempty ) : ( Vx ) \ [ xSix\ ] ( Vx ) ( Vy ) \ [ xSiY = &gt; xS i ly\ ] ( Vx ) ( Vy ) ( Vz ) \ [ xSiY A YSiz -- &gt; xSiz\ ] ( VX ) \ [ xAix \ ] ( Vx ) ( Vy ) \ [ xAiY -- -- -- -- &gt; xA ?</sentence>
				<definiendum id="0">Axiom i ( Reflexive )</definiendum>
				<definiendum id="1">Symmetric</definiendum>
				<definiens id="0">Nonempty ) : ( Vx ) \ [ xSix\ ] ( Vx ) ( Vy ) \ [ xSiY = &gt; xS i ly\ ] ( Vx ) ( Vy ) ( Vz ) \ [ xSiY A YSiz -- &gt; xSiz\ ] ( VX ) \ [ xAix \ ] ( Vx ) ( Vy ) \ [ xAiY -- --</definiens>
			</definition>
			<definition id="3">
				<sentence>Thus , each input item consists of a main-entry word followed by a comma , a one-character grammar code , a one-digit sense number , a one-character relation , a comma , a list of words ( separated by commas ) that in the given sense stand in the given relation to the main entry , a comma , and a semicolon that denotes the end of an input item .</sentence>
				<definiendum id="0">input item</definiendum>
			</definition>
			<definition id="4">
				<sentence>The matrix table consists of an ineidence or connectivity matrix , which is used to store the synonymy and antonymy relations between words .</sentence>
				<definiendum id="0">matrix table</definiendum>
				<definiens id="0">consists of an ineidence or connectivity matrix , which is used to store the synonymy and antonymy relations between words</definiens>
			</definition>
			<definition id="5">
				<sentence>The input consists of pairs of words standing in the relation S. A chain exists if it is possible to linearly order the set of input words so that the relation S holds between adjacent words .</sentence>
				<definiendum id="0">input</definiendum>
				<definiens id="0">consists of pairs of words standing in the relation S. A chain exists if it is possible to linearly order the set of input words so that the relation S holds between adjacent words</definiens>
			</definition>
			<definition id="6">
				<sentence>-EQUIVALENCE MODE ( using the set of terms inputted , determine if the set teems an equivalence class ) • * ( run terminator ) .</sentence>
				<definiendum id="0">-EQUIVALENCE MODE</definiendum>
				<definiens id="0">using the set of terms inputted</definiens>
			</definition>
			<definition id="7">
				<sentence>A , LOM , ; CLOSE o S , NEAR , IiIGH , NEARBy , : CLOSE , S , CLOSE , ; CLOSE , A , REMOTE , ; SIMPLE , JIS , PU~E , ABSOLUTE , SHEER , ; SIMPLE # JIA , COMPOUND , CONPLEX , ; PURE , J S , SIMPLE , PURE # ABSOLUTE , SHEER , : ABSOLUTE , J S , SIMPLE , PURE , SUEER~ ; ShEER , J S , SIMPLE , PURE , ANSOLHTE , ; COMPLEX , J S , COMPLEX , COMPLICATED , INTRICATE , TNVOLVED , KNOTTY , ; COMPLEX , J A , SIMPLE , ; CO~PCUND , M , ; Z SI~PLE # J2S , EASY , FACILE , LIGHT , EFFORTLESS , S~OOTH , ; SI~PLE , J A , COMPLICATED , DIFF\ [ CULT , ; COMPLICATED , S , ~NTRICAT~ , INVOLVED , COMPLEX , KNOTT¥ , ; COMPLICATED , A , SIMPLE , ; COMPLEX , S , CUMPLEX , COMPL\ [ CATED , INTRICATE , INVOLVED , KNI } TTY , ; FACILE , S , EASY , SMOOTR , LIGHT , SIMPLE , EFFORTLESS , ; LIGHT , , ,EASY , SIMPLE , FACILE , EFFORTLESS , SMOOTH , ; ~FFORTLESS , S , EASY , SMOCTH , FACILE , SIMPLE , LIGHT , ; SMOOTH , S , EFFORTLESS , EASY , LIGHT , SIMPLE , FACILE , ; SIMPLE , 3S , NATURAL , INGENUOUS , NAIVE , UNSOPHISTICATED , ARTLESS , ; NATURAL , S , NATURAL , SI~PLE , INGENUOUS , NAIVE , ; JNSOPHISTICATED , ARTLESS,0NAFFECTED , ; INGENUOUS , S , NATURAL , SIMPLE , NAIVE , UNSOPHISTICATED , ARTLESS , ; NAIVE , S , UNSOPHISTICATED , ARTLESS , INGERUOUS , NATURALrS\ [ RPLE , ; I\ ] NSOPHISTICATED , S , NATU~AL , SIMPLEoINGENOOUS , NAIVE , A~TLESS~ ; ARTLESS , S , NATURAL , SIMPLE , INGENUOHS , NAIVF , UNSOPRISTICATED , URAFFECTED , ; UNAFFECTED , S , ARTLESS , NATURAL , SIMPLE , INGENUOUS , NAIVE , UNSOPNISTICATEU , ; Z SIMPLE , ,\ ] ~S , FOOLISH , SI~LE , SILLY , FATUOUS , ASfNINE , ; FOOLISH , 5 , SIMPLE , SILLY , FATUOUS , ASLNINE , ; SILLY , S , SIMPLE , POOLISH , FATHOUS , ASINIRE , ; FATUOUS , S , ASININE , SILLY , FOOLISH , SIMPLE , ; FATUOUS , A , SENSIBLE , ; ASININE , S , SIMPLE , FATUOUS , SILLY , FOOLISH , ; ASININE , A , SENSIBLE , JUDICIOUS , : SIMPLE , ~A , WISE , ; WISE , S , SENSIBLE , JUDICIOUS , ; WISE , A , SIMPLE , ; SENSISLE , A , FOOLISN , FATUOUS , AS~RINE , : 5ENSIBL~ , S , NISE , JUDICIOUS , ; JUDICIOUS , S , N\ [ SE , SENSIULE , ; 22 J~JD\ [ CIO ( \ ] ~ ; , A , ASININE , : INFE~TOH , S , UNDERLING , SUBORDI~ &amp; TE , : I~F~HIOH , 5,1NFERIOR , : I~FERIOR , A , SUPERIOR , ; UNDERLING , ~ , INFERIOR , SUBORDINATE , : UNDERLING , A , LEADER , ~ASTER , ; 5UBO~DI~ATE , NIS , INFERIOR , UNDENLING , ; SUBORDINATE , JIS , SECONDARY , DEPENDENT , SUBJECT , TRIBUTAR¥ , COLLATERAL , : SUBORDINATE , JIS , SUBORDINATE , ; SUBORDINATE , JIA , CHIEF , LEADENG , : SUBORDINATE , J2A , DOMINANT , ; SUPEPrOR , S , BETTER , PREFERABLE , ; SUPERIOR , A , INFERIOR , ; PREFERABLE , S , BETTER , SUPERIOR , ; BETTER , S , SUPERIOR , PREFE~ABLE , BETTEB , ; LEADER , S , HEAD , CBIEE , CHIEFTAIN , MASTES , ; lEADER , A , FOLLOWER , ; MAST£R , S , CHIEF , C~IEFTAIN , HEAD , LEADER , : FOLLOWER , S , ADHEBENT , DXSCIPLB , SECTAR¥ , PABTIS &amp; B , HENCHMAN , SATELLITE , ; FOLLOWER , A , LEADER , ; hOD -SELECT NODE FOR QUERY FAR , S , BEMOTE , ; STERN , ~ , SEVERE , : ~TERN , A , SOFT , ; ~ , S , STERN , ; STBBN , S , # , ; STERN , S , AUSTERE , ; FULL , A , EMPTY , ; IF FAR , A , NEAR , .</sentence>
				<definiendum id="0">PURE</definiendum>
				<definiendum id="1">COMPLICATED</definiendum>
				<definiendum id="2">JNSOPHISTICATED</definiendum>
				<definiendum id="3">FATUOUS</definiendum>
				<definiendum id="4">ASININE</definiendum>
				<definiendum id="5">WISE</definiendum>
				<definiendum id="6">SENSISLE</definiendum>
				<definiendum id="7">SUPERIOR</definiendum>
				<definiendum id="8">lEADER</definiendum>
				<definiendum id="9">FOLLOWER</definiendum>
				<definiendum id="10">FULL</definiendum>
				<definiendum id="11">IF FAR</definiendum>
				<definiens id="0">LOM , ; CLOSE o S , NEAR , IiIGH , NEARBy , : CLOSE , S , CLOSE , ; CLOSE , A , REMOTE , ; SIMPLE , JIS , PU~E , ABSOLUTE , SHEER , ; SIMPLE # JIA , COMPOUND , CONPLEX , ;</definiens>
				<definiens id="1">,EASY , SIMPLE , FACILE , EFFORTLESS , SMOOTH , ; ~FFORTLESS , S , EASY , SMOCTH , FACILE , SIMPLE , LIGHT , ; SMOOTH , S , EFFORTLESS , EASY , LIGHT , SIMPLE , FACILE , ; SIMPLE , 3S , NATURAL , INGENUOUS , NAIVE , UNSOPHISTICATED , ARTLESS , ; NATURAL , S , NATURAL , SI~PLE , INGENUOUS , NAIVE , ;</definiens>
			</definition>
</paper>

		<paper id="5201">
</paper>

		<paper id="6212">
</paper>

		<paper id="4801">
</paper>

		<paper id="6214">
			<definition id="0">
				<sentence>AN APPLICATION OP COMPUTER TECHNIQUES TO ANALYSIS OF THE VERB PHRASE IN HINDI AND ENGLISH : A Preliminary Report Dr , LoM , Khubohandanl and WoW .</sentence>
				<definiendum id="0">APPLICATION OP COMPUTER TECHNIQUES TO ANALYSIS</definiendum>
				<definiens id="0">OF THE VERB PHRASE IN HINDI AND ENGLISH : A Preliminary Report Dr , LoM , Khubohandanl and WoW</definiens>
			</definition>
			<definition id="1">
				<sentence>The Project uses two sets of data : a corpus of verbal phrases drawl1 from a modern Hindi play and a oomplet @ paradigm of Englisksentences generate6 from the kernel '' he eats i % '' .</sentence>
				<definiendum id="0">Project</definiendum>
				<definiens id="0">uses two sets of data : a corpus of verbal phrases drawl1 from a modern Hindi play</definiens>
			</definition>
</paper>

		<paper id="5601">
			<definition id="0">
				<sentence>Severa~ statistics are defined : simple probability , i.e. frequency of utilization of a feature by the system for phoneme composition ; the three possibilities , + , -- , 0 are considered separately .</sentence>
				<definiendum id="0">Severa~ statistics</definiendum>
				<definiens id="0">simple probability , i.e. frequency of utilization of a feature by the system for phoneme composition ; the three possibilities , + , -- , 0 are considered separately</definiens>
			</definition>
			<definition id="1">
				<sentence>I Va ( b ) = Pa ( b -- -- -~ ) i where n = t°tal number °f distinctiVen -1 features in the system .</sentence>
				<definiendum id="0">n</definiendum>
				<definiens id="0">t°tal number °f distinctiVen -1 features in the system</definiens>
			</definition>
			<definition id="2">
				<sentence>duced , e.g. 1 \ ] Pab ( c ) = ~m where K = number of phonemes which have in common features a , b and ~ , and m = number of phonemes with a and b in common .</sentence>
				<definiendum id="0">Pab</definiendum>
				<definiens id="0">( c ) = ~m where K = number of phonemes</definiens>
			</definition>
</paper>

		<paper id="3701">
			<definition id="0">
				<sentence>- : =~object name~ ( ~R~ t , &lt; R~ ~ ) I &lt; : object name~ : :=one or more contiguous characters ~relation name~ : -=one to three contiguous alphabetic characters. -2The metalinguistlc symbols have the following significance : 'may be rewritten as I encloses a class name •.. occurs between a &amp; b times Object names are key words or phrases. They represent objects of interest within a data base , for example , names of commands in a programming language , people on a project or pieces of equipment in a system configuration. A relation is a connection or association between one object and a fragment of text ( i .e. , a part of a sentence or one or more closely related sentences ) and zero or more other objects. The following are typlcal relation names : NT ( narrower term ) ; PT ( part ) ; FUN ( function ) ; SYN ( syntax ) ; EG ( example ) . The significance of text specifications and of object names and relation names in text specifications is develope d further in the examples that follow. The significance of objects and relations in the data base is described in section 2.2. The algorithm for generating a text~ given a data base and a text specification , is described in section 2.3. First Example Consider th e following request : Please create a text that explains the function and the syntax of the narrower terms of command. Examples of each command should be included. Each command should be discussed separately -function , first , then syntax , and last an example. -- 3This request can be stated briefly by the following text specification : COMMAND ( NT ( FUN , SYN , EG ) ) The corresponding text that would be generated would have an outline in the following form : First Command Function of First Command Syntax of First Command Example of First Command Second Cammand Function of Second Command Syntax of Second Command Example of Second Command etc. The output for one command in the outline might be : The function of the Set Command is to set a specified control parameter to a specified integer value. The format of the Set Command is : &lt; name &gt; = &lt; integer &gt; An example of the Set Command is : SL : OU = 100 In the example , the maximum number of on-line users ( SL : OU ) is set to 100 .</sentence>
				<definiendum id="0">metalinguistlc symbols</definiendum>
				<definiendum id="1">relation</definiendum>
				<definiendum id="2">COMMAND</definiendum>
				<definiens id="0">a part of a sentence or one or more closely related sentences ) and zero or more other objects. The following are typlcal relation names : NT ( narrower term )</definiens>
			</definition>
			<definition id="1">
				<sentence>Then , the appropriate text specification would be : COMMAND ( NT ( FUN ) , NT ( SYN ) , NT ( EG ) ) Data Base A data base for a particular subject consists of two parts : ( a ) a thesaurus that relates objects to each other and to frac~nents of text , and ( b ) fragments of text .</sentence>
				<definiendum id="0">NT ( SYN</definiendum>
				<definiendum id="1">NT</definiendum>
			</definition>
			<definition id="2">
				<sentence>An explanation of objects consists of the fragments for the essential relatiom of the object .</sentence>
				<definiendum id="0">explanation of objects</definiendum>
				<definiens id="0">consists of the fragments for the essential relatiom of the object</definiens>
			</definition>
			<definition id="3">
				<sentence>Higher-Level Connectives A higher-level connective is a connective that connects a sentence or a group of sentences with a sentence or a group of sentences .</sentence>
				<definiendum id="0">Higher-Level Connectives A higher-level connective</definiendum>
				<definiens id="0">a connective that connects a sentence or a group of sentences with a sentence or a group of sentences</definiens>
			</definition>
			<definition id="4">
				<sentence>Consider the following reference to a fragment : FUN : I0 , EG:20 , SIM : X ( FUN ) This reference says that the function of the subject of the entry in which it occurs is stated in fragment 10 .</sentence>
				<definiendum id="0">SIM</definiendum>
			</definition>
			<definition id="5">
				<sentence>HELP A HELP subsystem is a part of a time-sharing system that helps the user to understand the system and the various parts of the system .</sentence>
				<definiendum id="0">HELP subsystem</definiendum>
				<definiens id="0">a part of a time-sharing system that helps the user to understand the system and the various parts of the system</definiens>
			</definition>
</paper>

		<paper id="4601">
			<definition id="0">
				<sentence>The Citation Identifier is the first of a series of programs for automatic and semiautcmatlc processing of cenputerreadable legal texts .</sentence>
				<definiendum id="0">Citation Identifier</definiendum>
				<definiens id="0">the first of a series of programs for automatic and semiautcmatlc processing of cenputerreadable legal texts</definiens>
			</definition>
			<definition id="1">
				<sentence>That exception reads : `` * * * unless the failure or neglect to urge such objection G. 2 TEXT PORTIONS OF A DOCUMENT CONTAINING FULL-FORM CASE CITATIONS ( UNDERLINED ) ~CESSED BY THE CITATION IDENTIFIER -- -SEE THE RESULTS OF PROCESSING IN FIG .</sentence>
				<definiendum id="0">DOCUMENT CONTAINING FULL-FORM CASE CITATIONS</definiendum>
			</definition>
			<definition id="2">
				<sentence>Ind~xlng-Searching System for Documents Consisting of Erpository Texts '' in Schecter , G. ( Editor ) : Information Retrieval : A Critical View ; Thompson , Washington , D. C. ( 1967 ) .</sentence>
				<definiendum id="0">Retrieval</definiendum>
				<definiens id="0">A Critical View ; Thompson</definiens>
			</definition>
</paper>

		<paper id="6211">
</paper>

		<paper id="0501">
			<definition id="0">
				<sentence>A geminate consonant is defined as a long consonant , sometimes described as double , occurring across syllable boundaries .</sentence>
				<definiendum id="0">geminate consonant</definiendum>
				<definiens id="0">a long consonant , sometimes described as double , occurring across syllable boundaries</definiens>
			</definition>
</paper>

		<paper id="6501">
</paper>

		<paper id="1801">
			<definition id="0">
				<sentence>I have made some study of such a system , which I called EASIOL ( English as an Input-output Language ) , taking into account the results of the two studies I know of which approximated what I was after , namely Daniel Bobrow 's STUDINT program , reported on in `` A Question Answering System for High School Algebra Word Problems '' Proc .</sentence>
				<definiendum id="0">EASIOL ( English</definiendum>
				<definiens id="0">an Input-output Language</definiens>
			</definition>
			<definition id="1">
				<sentence>Reading an algorithm in a book , the machine will store this in its memory Just as it stores part of its own program , and it will be able to either quote the algorithm later as linguistic material as part of info retrieval , or use that algorithm as part of its own logical operations .</sentence>
				<definiendum id="0">Reading an algorithm</definiendum>
				<definiens id="0">linguistic material as part of info retrieval , or use that algorithm as part of its own logical operations</definiens>
			</definition>
</paper>

		<paper id="6206">
</paper>

		<paper id="3501">
			<definition id="0">
				<sentence>Lockemann , P.C. , Thompson , F. B. , REL : A Rapidly Extensible System , I : The REL Language Processor .</sentence>
				<definiendum id="0">REL</definiendum>
				<definiens id="0">A Rapidly Extensible System</definiens>
			</definition>
			<definition id="1">
				<sentence>Craig , J. A. , Berezner , S. C. , Carney , H. C. , Longyear , C. R. , `` DEACON : Direct English Access and Control , `` Proc .</sentence>
				<definiendum id="0">DEACON</definiendum>
				<definiens id="0">Direct English Access</definiens>
			</definition>
</paper>

		<paper id="3201">
			<definition id="0">
				<sentence>B ) =AT ( NA÷B ) =AT ( NB , B ) =OB ( NL~B ) =OB ( NK~K ) =OB V dele V oblasti V otnowenih k V otnowenii V prodoljenie V qel4x* V silu V tecenie Vblizi Vdol6 Vmesto Vnutr6 Vokrug Voprekl ( NF # B ) =AT ( NF , B ) =AT ( NA .</sentence>
				<definiendum id="0">B ) =OB ( NL~B</definiendum>
				<definiendum id="1">B ) =AT</definiendum>
				<definiens id="0">V dele V oblasti V otnowenih k V otnowenii V prodoljenie V qel4x* V silu V tecenie Vblizi Vdol6 Vmesto Vnutr6 Vokrug Voprekl ( NF # B ) =AT ( NF ,</definiens>
			</definition>
			<definition id="1">
				<sentence>~B ) =AT ( V2*B ) =OB ( VS , B ) =SP ( VX*A ) =OB ( VX+S ) =TE ( AX*E ) =SP ( AX+A ) =AT ( AX~Q ) =TE ( AX~B ) =SP ( RX4E ) =AT -16APPENDIX II Noun_____~s Any noun Concrete animate personal inanimate objects mass location linear ( river , road , valley , etc. ) geographical ( town , etc. ) • Deverbal transitive intransitive capable of taking prefix NA Adjectival Nouns designating TIME days , year , etc. events ( birth , death , dinner , etc. ) Measure preceded by a numeral Inner state , emotion Phenomena of nature ( rain , frost , etc. ) Any inanimate , abstract or concrete noun A B C D E F G H I J K L M N 0 P Q R S T U V W Y -17Appendix II ( cont . )</sentence>
				<definiendum id="0">~B ) =AT ( V2*B</definiendum>
				<definiendum id="1">B ) =SP ( VX*A ) =OB ( VX+S ) =TE ( AX*E ) =SP</definiendum>
				<definiendum id="2">AX+A ) =AT</definiendum>
				<definiens id="0">town , etc. ) • Deverbal transitive intransitive capable of taking prefix NA Adjectival Nouns designating TIME days , year , etc. events ( birth , death , dinner , etc.</definiens>
			</definition>
</paper>

		<paper id="3401">
			<definition id="0">
				<sentence>REL consists of an operating environment , a language processor , and the set of currently defined languages .</sentence>
				<definiendum id="0">REL</definiendum>
			</definition>
			<definition id="1">
				<sentence>REL , a Rapidly Extenslble Language System~ is a conversational computer system designed for these purposes \ [ 1\ ] .</sentence>
				<definiendum id="0">REL</definiendum>
			</definition>
			<definition id="2">
				<sentence>Language is the comblnatlon of the language structure and a particular data base with objects and relationships .</sentence>
				<definiendum id="0">Language</definiendum>
				<definiens id="0">the comblnatlon of the language structure and a particular data base with objects and relationships</definiens>
			</definition>
			<definition id="3">
				<sentence>A node in the phrase marker denotes either a `` phrase '' or a funetlon symbol .</sentence>
				<definiendum id="0">node in the phrase marker</definiendum>
				<definiens id="0">either a `` phrase '' or a funetlon symbol</definiens>
			</definition>
			<definition id="4">
				<sentence>A phrase consists of syntactic information ( part of speech and features ) , and a semantic interpretatlonwhich for the time being we assume to describe a particular element in the category denoted by the syntax .</sentence>
				<definiendum id="0">phrase</definiendum>
				<definiens id="0">consists of syntactic information ( part of speech and features ) , and a semantic interpretatlonwhich for the time being we assume to describe a particular element in the category denoted by the syntax</definiens>
			</definition>
			<definition id="5">
				<sentence>/ Indlvldual pair for each a i. Sentence analysls consists of repeated applications of the four steps : recognltlon of a rule ( parsing ) , feature subrule , syntax completion , and semantic transformation .</sentence>
				<definiendum id="0">i. Sentence analysls</definiendum>
				<definiens id="0">consists of repeated applications of the four steps : recognltlon of a rule ( parsing ) , feature subrule , syntax completion , and semantic transformation</definiens>
			</definition>
			<definition id="6">
				<sentence>A list of transformations associated wlth a phrase marker represents that portion of it whose semantic analysis must still be performed .</sentence>
				<definiendum id="0">list of transformations associated wlth</definiendum>
				<definiens id="0">a phrase marker represents that portion of it whose semantic analysis must still be performed</definiens>
			</definition>
</paper>

		<paper id="7501">
</paper>

		<paper id="5401">
			<definition id="0">
				<sentence>Asetl~= ( ~u~ ) x~ isbydsf~~ion a binary relatinn on V.Sinilarly , if V 2 is the set of all strings obtained by the , on , arena , ion of two words ( `` etrlnge of 2 '' ) , then ~ is a blna~ relation ~ ViU V. These relations have d~eot lAub~istlo in~e~p~e~atlonm , for ~ aa~ be ~e~Waz~d as the ~elat£on be~leen adjective and nom~ 0 whale is the relation be~een nmm ~oup and verb .</sentence>
				<definiendum id="0">Asetl~= ( ~u~ ) x~ isbydsf~~ion</definiendum>
				<definiens id="0">the relation be~een nmm ~oup and verb</definiens>
			</definition>
			<definition id="1">
				<sentence>an e~aivalen~ lC-~a~a~ ( i~ediate-constit~en~ ~am~ar ) and conve~asl~ .</sentence>
				<definiendum id="0">e~aivalen~ lC-~a~a~</definiendum>
				<definiens id="0">i~ediate-constit~en~ ~am~ar ) and conve~asl~</definiens>
			</definition>
			<definition id="2">
				<sentence>each path must be followed from the extreme left to the extreme ~tght , along the arrows ; a sentence is a sequence of words found along a path .</sentence>
				<definiendum id="0">sentence</definiendum>
				<definiens id="0">a sequence of words found along a path</definiens>
			</definition>
</paper>

		<paper id="2701">
			<definition id="0">
				<sentence>i ( n , O ) distance de n ~ 0 ~dj ( n ) ~ ( n ) R ( n , O ) R ( n , O , m ) &gt; etit cheval , maison jaune n courir , n dormir , ... n manger O n donner O ~ m ~dj ( n ) AAdj ( n ) vilain petit chien R ( Adj ( n ) ) petit chien aboyer ~dj ( R ( n ) ) chien aboyer furieusement ~dv ( R ( n ) ) chien courir vite R ( Adj ( n ) , O ) joli chien manger soupe R ( n , Adj ( O ) ) chat boire bon lair R ( Adj ( n ) , Adj ( ~ ) joli chien manger bonnesoupe etc IV C &amp; TEGORIES PROPRES AU METALANGAGE i Le m~talangage n4cessite l'introduction de foncteurs particuliers .</sentence>
				<definiendum id="0">vilain petit chien R ( Adj</definiendum>
				<definiendum id="1">O ) joli chien manger soupe R</definiendum>
				<definiens id="0">( n ) ) petit chien aboyer ~dj ( R ( n ) ) chien aboyer furieusement ~dv ( R ( n ) ) chien courir vite R ( Adj ( n ) ,</definiens>
			</definition>
			<definition id="1">
				<sentence>Les individus a ~tant caract~ris~s par leur noyau Nu ( a ) ( cf. 9.1V.6 ) , nous pouvons distinguer trois cas ( cf I.IV.4 ) : ( i ) la propri~t~ P se d~duit logiquement de Nu ( a ) dans le syst~me des propri~t~s : Nu ( a ) ~P ( a ) ; La phrase P ( ~T ( a ) ) ne fait qu'exprimer une des propri~t~s d~j~ connues des `` a '' .</sentence>
				<definiendum id="0">Nu</definiendum>
				<definiens id="0">a ) ~P ( a ) ; La phrase P ( ~T ( a ) ) ne fait qu'exprimer une des propri~t~s d~j~ connues des `` a ''</definiens>
			</definition>
			<definition id="2">
				<sentence>( 2 ) la propri~t~ Pest ind~pendante de Nu ( a ) ; la phrase P ( ~1 '' ( a ) ) apporte done une information suppl~mentaire sur les `` a '' ; elle fait passer de Nu ( a ) au nouveau noyau ; Nu ' ( a ) ~ Nu ( a ) AP ( a ) OH Nu ' ( a ) = Nu ( a ) A ( P ( a ) ~ P ' ( a ) ) ( 3 ) la propri~t~ P contredit le noyau ; on a ~ la lois P ( ~ ( a ) ) -et Nu ( a ) ~-non-P ( a ) 16 Si~est un parcours particulier , la phrase est du type P ( ~ ( al ) ) o~ les a I sont obtenus par extraction ~ partir des a. Ecrire que Nu ( al ) ~-non-P ( a I ) signifie soit que l'on est dans le domaine de l'Imaginaire I , soit que les al poss~dent une propri~t~ dont la n~gation figure dans Nu ( a ) .</sentence>
				<definiendum id="0">Nu</definiendum>
				<definiens id="0">a ) ~-non-P ( a ) 16 Si~est un parcours particulier , la phrase est du type P ( ~ ( al ) ) o~ les a I sont obtenus par extraction ~ partir des a. Ecrire que Nu ( al ) ~-non-P ( a I ) signifie soit que l'on est dans le domaine de l'Imaginaire I</definiens>
			</definition>
</paper>

		<paper id="1301">
			<definition id="0">
				<sentence>The present study is an application of the technique of sentence generation to an analysis of the paragraph ; the latter is seen as a unit of discourse composed of lower-level units ( sentences ) , and characterized by some kind of structure .</sentence>
				<definiendum id="0">present study</definiendum>
				<definiens id="0">an application of the technique of sentence generation to an analysis of the paragraph ; the latter is seen as a unit of discourse composed of lower-level units ( sentences ) , and characterized by some kind of structure</definiens>
			</definition>
			<definition id="1">
				<sentence>Word 613 is a hypernym of the word 2466 .</sentence>
				<definiendum id="0">Word 613</definiendum>
			</definition>
			<definition id="2">
				<sentence>Q is a single pattern , or a combination of patterns , and PIP2 ... P n are single restriction patterns .</sentence>
				<definiendum id="0">Q</definiendum>
				<definiens id="0">a single pattern , or a combination of patterns , and PIP2 ... P n are single restriction patterns</definiens>
			</definition>
			<definition id="3">
				<sentence>a. If the restriction pattern specifies a restriction on the selection of the sentence governor ( usually a tzars -- 19sitive verb ( VT ) or an intransitive verb ( VI ) ) , a VT or VI will be randomly chosen from the specified semantic class ( as ) or word ( s ) .</sentence>
				<definiendum id="0">VT</definiendum>
				<definiens id="0">a restriction on the selection of the sentence governor ( usually a tzars -- 19sitive verb ( VT ) or an intransitive verb ( VI ) ) , a</definiens>
			</definition>
			<definition id="4">
				<sentence>4 ( a ) specifies that a word should be selected from the word class VT which is not a member of the semantic e\ [ eeBes CI , C2 , and C3 , but is a governor of a word in C16 , a word in word class N. and a word in C19 .</sentence>
				<definiendum id="0">class VT</definiendum>
				<definiens id="0">a governor of a word in C16 , a word in word class N. and a word in C19</definiens>
			</definition>
</paper>

		<paper id="4201">
			<definition id="0">
				<sentence>Each cell is one bit in size to record the presence of the character strokes , lines or dots as the one bit , and the non-presence of them as the zero bit .</sentence>
				<definiendum id="0">cell</definiendum>
				<definiens id="0">one bit in size to record the presence of the character strokes , lines or dots as the one bit , and the non-presence of them as the zero bit</definiens>
			</definition>
			<definition id="1">
				<sentence>Siders , R. A. and others° Computer Graphics : A Revolution in Design .</sentence>
				<definiendum id="0">Computer Graphics</definiendum>
				<definiens id="0">A Revolution in Design</definiens>
			</definition>
</paper>

		<paper id="6201">
</paper>

		<paper id="2501">
			<definition id="0">
				<sentence>@ Assign -- the string CFI contained in the rule to the product .</sentence>
				<definiendum id="0">CFI</definiendum>
				<definiens id="0">the string</definiens>
			</definition>
</paper>

		<paper id="6204">
</paper>

		<paper id="0701">
			<definition id="0">
				<sentence>A statistic investigation \ [ 1\ ] revealed that roughly 80 per cent of all misspelled words contain only one error , belonging to one of the following cases : a letter missing , an extra letter , a wrong letter and finally two adjacent letters interchanged .</sentence>
				<definiendum id="0">statistic investigation</definiendum>
				<definiens id="0">a letter missing , an extra letter , a wrong letter and finally two adjacent letters interchanged</definiens>
			</definition>
			<definition id="1">
				<sentence>The elastic matching of words consists basically of coding all the characters ( letters ) as bits in a computer word , allotting to each letter a specific position .</sentence>
				<definiendum id="0">elastic matching of words</definiendum>
				<definiens id="0">consists basically of coding all the characters ( letters ) as bits in a computer word , allotting to each letter a specific position</definiens>
			</definition>
</paper>

		<paper id="5701">
</paper>

		<paper id="5901">
			<definition id="0">
				<sentence>furniture If and only if f~\ [ Oi\ ] ; , ~h~re Oi is an option~l object , f is the semantic distinctive feature 'furiiture ' and \ [ 0~ -4is the set of semantic distinctive , featuces of the object bi .</sentence>
				<definiendum id="0">Oi</definiendum>
				<definiendum id="1">f</definiendum>
				<definiens id="0">an option~l object ,</definiens>
			</definition>
</paper>

		<paper id="0401">
			<definition id="0">
				<sentence>SMART is a fully-automatic document retrieval system operating on the IBM 7094 and 360 model 65 .</sentence>
				<definiendum id="0">SMART</definiendum>
			</definition>
			<definition id="1">
				<sentence>The following facilities , incorporated into the SMART system for purposes of document analysis may be of principal interest : a ) a system for separating English words into stems and affixes ( the so-called suffix 's ' and stem thesaurus methods ) which can be used to construct document identifications consisting of the stems of words contained in the documents ; b ) a synonym dictionary , or thesaurus , which can be used to recognize synonyms by replacing each word stem by one or more `` concept '' numbers ; these concept numbers then serve as content identifiers instead of the original word stems ; c ) a hierarchical arrangement of the concepts included in the thesaurus which makes it possible , given any concept number , to find its `` parents '' in the hierarchy , its `` sons '' , its `` brothers '' , and any of a set of possible cross references ; the hierarchy can be used to obtain more general content identifiers than the ones originally given by going upin the hierarchy , more spsclflc ones by going down , and a set of related ones by picking up brothers and cross-references ; d ) statistical procedures to compate similarity coefficients based on co-occurrences of concepts within the sentences of a given collection ; the ~elated concepts , determined by statistical association , can then be added to the originally available concepts to identify the various documents ; e~ syntactic analysis methods which make it possible to compare -5the syntactically analyzed sentences of documents and search requests with a pre-coded dictionary of syntactic structures ( `` criterion trees '' ) in such a way that the same concept number is assigned to a large number of semantically equivalent , but syntactically quite different constructions ; f ) statistical ~hrgse matching methods which operate like the preceding syntactic phrase procedures , that is , by using a preeonstructed dictionary to identify phrases used as content identifiers ; however , no syntactic analysis is performed in this case , and phrases are defined as equivalent if the concept numbers of all components match , regardless of the syntactic relationshlps between components ; g ) a dictionary u~datln~ system , designed to revise the several dictionaries included in the system : i ) word stem dictionary ii ) word suffix dictionary iii ) common word dictionary ( for words to be deleted duping analysis ) iv ) thesaurus ( synonym dictionary ) v ) concept hierarchy vi ) statistical phrase dictionary vii ) syntactic ( `` criterion '' ) phmase dictionary .</sentence>
				<definiendum id="0">thesaurus</definiendum>
				<definiendum id="1">c )</definiendum>
				<definiens id="0">a ) a system for separating English words into stems and affixes ( the so-called suffix 's ' and stem thesaurus methods ) which can be used to construct document identifications consisting of the stems of words contained in the documents ; b ) a synonym dictionary , or</definiens>
				<definiens id="1">a hierarchical arrangement of the concepts included in the thesaurus which makes it possible , given any concept number , to find its `` parents '' in the hierarchy</definiens>
				<definiens id="2">statistical procedures to compate similarity coefficients based on co-occurrences of concepts within the sentences of a given collection ; the ~elated concepts , determined by statistical association , can then be added to the originally available concepts to identify the various documents ; e~ syntactic analysis methods which make it possible to compare -5the syntactically analyzed sentences of documents and search requests with a pre-coded dictionary of syntactic structures ( `` criterion trees '' ) in such a way that the same concept number is assigned to a large number of semantically equivalent , but syntactically quite different constructions ; f ) statistical ~hrgse matching methods which operate like the preceding syntactic phrase procedures , that is , by using a preeonstructed dictionary to identify phrases used as content identifiers</definiens>
				<definiens id="3">a dictionary u~datln~ system , designed to revise the several dictionaries included in the system : i ) word stem dictionary ii</definiens>
			</definition>
			<definition id="2">
				<sentence>The SMART systems organization makes it possible to evaluate the effectiveness of the various processing methods by comparing the outputs produced by a variety of different runs .</sentence>
				<definiendum id="0">SMART systems organization</definiendum>
				<definiens id="0">makes it possible to evaluate the effectiveness of the various processing methods by comparing the outputs produced by a variety of different runs</definiens>
			</definition>
			<definition id="3">
				<sentence>i : a ) the inadequacy of the syntactic analyzer used to generate syntactic phrases ; b ) the fact that phrases are often appropriate content identifiers even when the phrase components are not syntactically related in a given context ( e.g. the sentence `` people who need information , require adequate retrieval services '' is adequately identified by the phrase `` information retrieval '' , even though the components are not related in the sentence ) ; c ) the variability of the user population which makes it unwise to overspecify document content ; d ) the ambiguity inherent in natural language texts which may work to advantage when attempting to satisfy the information needs of a heterogeneous user population with diverse information needs .</sentence>
				<definiendum id="0">c )</definiendum>
				<definiens id="0">a ) the inadequacy of the syntactic analyzer used to generate syntactic phrases</definiens>
				<definiens id="1">the variability of the user population which makes it unwise to overspecify document content ; d ) the ambiguity inherent in natural language texts which may work to advantage when attempting to satisfy the information needs of a heterogeneous user population with diverse information needs</definiens>
			</definition>
</paper>

		<paper id="5501">
</paper>

		<paper id="6213">
</paper>

		<paper id="6301">
			<definition id="0">
				<sentence>A comparison is successful if the two nodes are identical , if the node in the query is a question word , or if both nodes belong to the same equlvalence class ( class membership can be defined by the analyst ) .</sentence>
				<definiendum id="0">class membership</definiendum>
				<definiens id="0">successful if the two nodes are identical , if the node in the query is a question word , or if both nodes belong to the same equlvalence class</definiens>
			</definition>
			<definition id="1">
				<sentence>Words~ phrases , and arbitrary strings can figure in the search request , but the index will be of value only for those strings whose left-most character corresponds to the beginning of a word ( e.g. , a stem without a pre~fix ) .</sentence>
				<definiendum id="0">Words~ phrases</definiendum>
				<definiens id="0">a stem without a pre~fix )</definiens>
			</definition>
</paper>

		<paper id="7601">
</paper>

		<paper id="7602">
</paper>

		<paper id="3801">
			<definition id="0">
				<sentence>If the verb phrase consists of an intransitive verb phrase , the noun that the NDE modifies , or the NNDE implies is the subject of the verb phrase .</sentence>
				<definiendum id="0">verb phrase</definiendum>
				<definiens id="0">consists of an intransitive verb phrase , the noun that the NDE modifies , or the NNDE implies is the subject of the verb phrase</definiens>
			</definition>
			<definition id="1">
				<sentence>If the verb phrase before the de consists of a subject ( or agent ) and a transitive verb , the noun that the NDE modifies and the NNDE implies is the object of the verb phrase .</sentence>
				<definiendum id="0">NNDE implies</definiendum>
				<definiens id="0">the object of the verb phrase</definiens>
			</definition>
</paper>

		<paper id="1401">
			<definition id="0">
				<sentence>The grammar consists of one or more of phrase structure , lexicon , and transformations .</sentence>
				<definiendum id="0">grammar</definiendum>
			</definition>
			<definition id="1">
				<sentence>This is of the form : % ( PREP NP , ~P ) where ~ is a variable .</sentence>
				<definiendum id="0">~</definiendum>
				<definiens id="0">a variable</definiens>
			</definition>
</paper>

		<paper id="6207">
</paper>

		<paper id="1201">
			<definition id="0">
				<sentence>It may happen that B I= B and C I = C. If BI and C I belong to the same printers ' word , then the ~ntactic boundary between B and C is a moroheme boundary .</sentence>
				<definiendum id="0">C</definiendum>
				<definiens id="0">a moroheme boundary</definiens>
			</definition>
			<definition id="1">
				<sentence>In Table I , Length refers to the text length in morphemes , and N is the number of boundaries for which the correspondence measures were computed .</sentence>
				<definiendum id="0">N</definiendum>
				<definiens id="0">the text length in morphemes</definiens>
			</definition>
</paper>

		<paper id="2901">
			<definition id="0">
				<sentence>Meaning is the functional import of the message , which calls forth a re sponse -- cognitive~ affective , and/or conative -- from the receiver in the partfcular communication situation ; it is a relation of the message to the receiver .</sentence>
				<definiendum id="0">Meaning</definiendum>
				<definiens id="0">calls forth a re sponse -- cognitive~ affective , and/or conative -- from the receiver in the partfcular communication situation ; it is a relation of the message to the receiver</definiens>
			</definition>
			<definition id="1">
				<sentence>Let us now make the simplifying assumption that this meaning is determined by the functional form of the message under some `` standard '' functional interpretation ( this is basically an oversimplification , since the rules of functional interpretation , especially on the affective response dimension , will vary from receiver to receiver and even for the same receiver over time ) ; we may then define semantics as the explication of the relationship between the surface forms of linguistic utterances ( as spatial or temporal arrangements of morphological units , which are the minimal linguistic units that have a direct functional relationship to the determination of meaning ) and the functional forms of the messages they express .</sentence>
				<definiendum id="0">functional interpretation</definiendum>
				<definiens id="0">the minimal linguistic units that have a direct functional relationship to the determination of meaning ) and the functional forms of the messages they express</definiens>
			</definition>
			<definition id="2">
				<sentence>Tarski , in his classic paper \ [ 43\ ] 3 has set down a systematic method for formalizing the semantics of a formalized language , which is any language for which the set of meaningful sentences is defined by a formal syntactic grammar , all sentences are unambiguous , and there is a set of ( syntactically defined ) axioms and rules of inference from which theorems in the language may be derived .</sentence>
				<definiendum id="0">Tarski</definiendum>
				<definiens id="0">in his classic paper \ [ 43\ ] 3 has set down a systematic method for formalizing the semantics of a formalized language , which is any language for which the set of meaningful sentences is defined by a formal syntactic grammar , all sentences are unambiguous</definiens>
				<definiens id="1">syntactically defined ) axioms and rules of inference from which theorems in the language may be derived</definiens>
			</definition>
			<definition id="3">
				<sentence>The notion of truth is defined as a special case of the notion of satisfaction for sentential functions of zero free variables l ( i.e. , sentences of L ) .</sentence>
				<definiendum id="0">notion of truth</definiendum>
			</definition>
			<definition id="4">
				<sentence>In the framework of Tarski 's formulation , the method can be stated as follows : Given a `` model '' of the language L , consisting of an individual domain D and a semantic interpretation function ~b for L over P , the extension of any well-formed expression E in L is defined as the set of values for E of all semantic interpretation functions # ' over P which differ from # at most on their assignments to the free variables of E. Now if one considers the domain of possible models for L , the intension of any well-formed expression E in L may be defined as that function over models of L which yields as its value for any model the extension of E in that model .</sentence>
				<definiendum id="0">Now</definiendum>
				<definiens id="0">Given a `` model '' of the language L , consisting of an individual domain D and a semantic interpretation function ~b for L over P , the extension of any well-formed expression E in L</definiens>
				<definiens id="1">the set of values for E of all semantic interpretation functions # ' over P which differ from # at most on their assignments to the free variables of E.</definiens>
				<definiens id="2">that function over models of L which yields as its value for any model the extension of E in that model</definiens>
			</definition>
			<definition id="5">
				<sentence>Craig , J. A. , S. C. Berezner , H. C. Carney and C. R. Longyear , DEACON : Direct English Access and CONtrol .</sentence>
				<definiendum id="0">DEACON</definiendum>
				<definiens id="0">Direct English Access and CONtrol</definiens>
			</definition>
			<definition id="6">
				<sentence>Coles , L. Stephen , An on-line question-answering system with natural language and pictorial input .</sentence>
				<definiendum id="0">L. Stephen</definiendum>
				<definiens id="0">An on-line question-answering system with natural language and pictorial input</definiens>
			</definition>
			<definition id="7">
				<sentence>Quillian , M. Ross , Word concepts : a theory and simulation of some basic semantic capabilities .</sentence>
				<definiendum id="0">Word concepts</definiendum>
				<definiens id="0">a theory and simulation of some basic semantic capabilities</definiens>
			</definition>
</paper>

		<paper id="6208">
</paper>

		<paper id="1701">
			<definition id="0">
				<sentence>I I I l I -.7 , , , % I I • Pet it garcon porter livre -8 Entre los ~nonc~s E 1 et E2 , la phrase donn~e en exemple implique la relation , EPITHETE entre les points 4 et 2 du graphe ci-dessus : EPITHETE ~Petit \ [ ACTl ( gar~on , Porter ( x , livre ) ) \ ] , ACTl ( gar~on , porter ( ~ , livre ) ) J ee qui conduit ~ la notation sur los lexis : I I~CT2 I ' I I I I I I I I III I I II I I 9_ _ ~ ... . t _ __ i petit garcon porter livre -- 9 Mettons en ~vldence la structure des lexis sur un exemple plus compllqu~ `` On volt la maison sur le toit de laquelle les oiseaux font leur nld '' Les ~nonc~s ~l~mentalres proviennent des lexis suivantes : VOIR ( @ , maison ) FAIRE ( oiseau , nld ) SUR ( faire , tolt ) ( Toit , maison ) ( nid , oiseau ) dont le graphe des relations est : 2 ~ I I 4 I , , ~/ , / ' I I EPI I -5 , , I . '</sentence>
				<definiendum id="0">Porter</definiendum>
				<definiens id="0">los ~nonc~s E 1 et E2 , la phrase donn~e en exemple implique la relation</definiens>
			</definition>
</paper>

		<paper id="5101">
			<definition id="0">
				<sentence>In cases of author indices and catalogs , membership rosters , alphabetical telephone directories , taxatiOn records , census , personnel records , student files , and any file using a person 's name as the primary source of indexing will have the convenience in using the last name plus one space character and the initials as the keyword .</sentence>
				<definiendum id="0">taxatiOn</definiendum>
				<definiens id="0">records , census , personnel records , student files</definiens>
			</definition>
			<definition id="1">
				<sentence>~ third method of computing a hash address is to cut the key up into N-bit sections , where N is the number of bits needed for the hash address , and then to form the sum of all of these sections .</sentence>
				<definiendum id="0">N</definiendum>
				<definiens id="0">the number of bits needed for the hash address , and then to form the sum of all of these sections</definiens>
			</definition>
			<definition id="2">
				<sentence>Sb MILW , 2~4-783I , EOE ( MADISON-AIR SERVICE ) 33O STOUGHTON ... ... ... ... ... ... ... ... ... ... ... .. ~33 ~ NORTH ROt 2~9-b~78 , EOE -34This is a simple algorithm for a utility function of arranging information in table form and printing out of the chaining Table and the Available Space List as those of Table 4 to Table 14 in this paper .</sentence>
				<definiendum id="0">EOE -34This</definiendum>
				<definiens id="0">a simple algorithm for a utility function of arranging information in table form</definiens>
			</definition>
			<definition id="3">
				<sentence>In practical applications , the Available Space List is a huge free storage area which can be on a secondary bulk storage device Such as a drum or disk for random access .</sentence>
				<definiendum id="0">Available Space List</definiendum>
				<definiens id="0">a huge free storage area which can be on a secondary bulk storage device Such as a drum or disk for random access</definiens>
			</definition>
</paper>

		<paper id="1101">
			<definition id="0">
				<sentence>~s : a. Feature of transformabillty ( N -- &gt; N ; N-+A ) ; b. Semantic class membership ( T , M , E , F , G as above ) For example : ACUTE STAPHYLOCOCCAL PNEUMDNIA A-TR/G/M + A-TR/E/M + N-T'R/M-~ ( NP ) M , E where A-TR/G/M ( acute ) = Adjective ( A ) , transformable ( TR ) , 'General ' ( G ) , semantic correlation with N ( M ) ; A-TR/E/M = Adjective , transformable , semantic class membership-'Etiology ' ( E ) , modifying N ( M ) ; N-TR/M = noun , non-transformable ( TR ) , belonging to semantic category 'Morphology ' ( M ) .</sentence>
				<definiendum id="0">A-TR/G/M</definiendum>
				<definiens id="0">a. Feature of transformabillty ( N -- &gt; N ; N-+A ) ; b. Semantic class membership ( T , M , E , F , G as above ) For example : ACUTE STAPHYLOCOCCAL PNEUMDNIA A-TR/G/M + A-TR/E/M + N-T'R/M-~</definiens>
			</definition>
			<definition id="1">
				<sentence>q-Ol6lT TOPOGRAPHY-NUMERICAL ( contlnuad ) SECTION 2 : RESPIRATORY TRACT 20-RESPIRATORY TRACT i 2000 Respiratory tract , NOS 201-Upper Respiratory Tract 2010 Upper respiratory tract , NOS Nose , accessory sinus and 2020 nasopharynx combined sites .2138 2139 .202 -Lower Respiratory Tract Lower respiratory tract , NOS Larynx , trachea , bronchi and lungs combined sites 2200 21 NOSE ZlO0 Nose , NOS 2101 Mucous membrane of nose 2102 Respiratory region of nose 2102 Olfactory region of nose 2104 Nasal gland 2100 Olfactory gland 2100 Cavernous plexus of nose 2107 Lamina proprla of nose 2100 Nasal meatl 211-External Nose 2110 External nose z111 Roof'of nose I 2112 Dorsum of nose 2113 Apex of nose 2114 Ala nasl 2115 Nasal septum , mobile portion 212 -Nasal Cartilage 2120 Nasal cartilage 2121 Greater alar cartilage 2122 Lateral nasal cartilage 2123 Nasal septal cartilage 2124 Lesser alar cartilage 2125 Vomeronasal cartilage 213,214 -Internal None 2130 Internal nose 2131 Nares 2132 Nasal vestibule 2133 Nasal fossae 2134 Nasal septum , NOS 2135 Cboanae 2136 Nasal turbinate , NOS 2137 Inferior nasal turblnate Middle nasal turblnate Superior nasal tnrblnate 2201 2202 2203 2210 2211 2212 2813 2214 2215 2220 2221 2222 2223 2224 2225 2230 2231 ||2| 22 ACCESSORY SINUS Accessory sinus , NOS Paranasal sinus Accessory nasal sinus Mucous membrane of accessory sinus Accessory sinus gland Lamina propria of accessory sinus 221 -Maxillary Sinus Maxillary sinus , NOS MaXillary antrum , Bight maxillary sinus Left maxillary sinus Mucous membrane of maxillary sinus Maxillary sinus gland Lamina propria of maxillary Sinus 222-Frontal Sinus Frontal sinus , NOS Bight frontal sinus Left , frontal sinus Mucous membrane of frontal sinus Frontal sinus gland Lamina proprla of frontal sinus 223-Ethmoid Sinus Ethmold sinus , NOS Ethmold antrum Right ethmoid sinus Left ethmoid sinus DOSTERT , L.E. : Machine Translation and Automatic Language Processing : Vistas in Information Handling ; Spartan Books ; Washington 1963 GARVlN , P.L. : The Georgetown IBM Experiment of 1954 : An Evaluation in Retrospect : Papers in Linguistics in Honor of Leon Dostert ; Ed .</sentence>
				<definiendum id="0">q-Ol6lT TOPOGRAPHY-NUMERICAL</definiendum>
				<definiens id="0">The Georgetown IBM Experiment of 1954 : An Evaluation in Retrospect</definiens>
			</definition>
			<definition id="2">
				<sentence>by W. M. Austin ; Mouton Co. ; The Hague , 1967 SEDELOW , S.Y. , SEDELOW , W.A. JR. : Stylistic Analysis ; Automated Language Processing ; John Wiley and Sons~ Inc. ; New York 1967 Cambridge , Mass.~ 1965 MACHINES COMPUTERS IN TRANSLATION AND LINGUISTICS : National Academy of Sciences , Washington 1966 BOBROW~ D.G. : S~n~tactic Theory in Computer Implementations ; Automated Language Processing ; John Wiley and Sons , Inc. ; New York 1967 Seminar on Computational Linguistics ; Edited by A. W. Pratt , A. H. Roberts and K. Lewis ; U.S. Department of Healthy Education and Welfare ; National Institutes of Health ; Public Health Service ; Publication No. 1716 ; U.S. Printing Office 1967 BAR-HILLEL , Y. : Language and Information ; Addison-Wesl~y , Reading~ Massachusetts 1964 PRATT , A.W. , THOMAS , L.B. : An Information Processing System for Pathology Data ; Pathology Annual-66 ; Appleton-Cen % ury-Crofts Publishers ; 1967 DUNHAM , G. : Pathology Diagnoses Language Encoder ; Division of Computer Research and Technology ; National Institutes of Health ; Internal Report .</sentence>
				<definiendum id="0">Inc.</definiendum>
				<definiendum id="1">L.B.</definiendum>
				<definiens id="0">S~n~tactic Theory in Computer Implementations ; Automated Language Processing ; John Wiley and Sons ,</definiens>
			</definition>
</paper>

		<paper id="6209">
</paper>

		<paper id="0901">
			<definition id="0">
				<sentence>Changing a rule consists at the moment of simple removal and replacement of cards .</sentence>
				<definiendum id="0">Changing a rule</definiendum>
				<definiens id="0">consists at the moment of simple removal and replacement of cards</definiens>
			</definition>
</paper>

		<paper id="4301">
			<definition id="0">
				<sentence>( 4 ) a ) combien de livres veux-tu b ) quel hombre de livres veux-tu Le syst~me de d~terminatifs de GRAMMAIRE-I Deut donc engendrer les suites suivantes : IDEF CARD IIquel CARD IllDEF IVquel VCARD Les suites Iet Ill caract~risent des syntagrues nominaux d~finis dont le novau est un nom commun non-q6n~rique : ( 5 ) a ) ces deux livres b ) ce ( un ) livre c ) ce sable Les suites If , IV et V caract~risent des syntagmes nominaux d~finis dont le noyau est un nom commun nonq~n~rique : I ( 6 ) a ) combien de livres b ) quels livres 8 quel livre ( 7 ) cinq livres RaDDelons aue nous ne traitons pas d'autres quantificateurs que les num~raux cardinaux : par consequent les noms de masse admis par GRAMMAIRE-I ne sont pas precedes de partitifs ( ils n'admettent pas de num~raux cardinaux ) : ( 8 ) beaucoup de sable ( 9 ) un peu de sable Pans une phase ult6rieure , nous introduirons l'ooposition ~ ~ Dartitif m dans le syst~me de quantificateurs .</sentence>
				<definiendum id="0">par consequent</definiendum>
				<definiens id="0">IDEF CARD IIquel CARD IllDEF IVquel VCARD Les suites Iet Ill caract~risent des syntagrues nominaux d~finis dont le novau est un nom commun non-q6n~rique : ( 5 ) a ) ces deux livres b ) ce ( un ) livre c ) ce sable Les suites If , IV et V caract~risent des syntagmes nominaux d~finis dont le noyau est un nom commun nonq~n~rique</definiens>
				<definiens id="1">ils n'admettent pas de num~raux cardinaux ) : ( 8 ) beaucoup de sable ( 9 ) un peu de sable Pans une phase ult6rieure , nous introduirons l'ooposition ~ ~ Dartitif m dans le syst~me de quantificateurs</definiens>
			</definition>
			<definition id="1">
				<sentence>Des deux tyDes de phrases relatives ( restricrives et appositives ) nous traitons seulement le premier tTpe .</sentence>
				<definiendum id="0">Des deux tyDes de phrases relatives</definiendum>
				<definiens id="0">restricrives et appositives ) nous traitons seulement le premier tTpe</definiens>
			</definition>
			<definition id="2">
				<sentence>Les diff~rents langages naturels utilisent diff~rents moyens pour marquer la fonction des syntagmes nominaux dans la phrase : leur position par rapport au verbe , des pr~positions , des post-positions , etc .</sentence>
				<definiendum id="0">la fonction</definiendum>
			</definition>
			<definition id="3">
				<sentence>Cette langue , en effet , attache syst~matiquement un sujet factice aux verbes noninfinitivis~s qui l'ont perdu par extraposition ou qui n'en ont jamais eu : ( 37 ) ( il ) pleut Cette contrainte n'existe pas dans d'autres langues comme le portugais ( cf. ( 33 ) et ( 36 ) Dour le franqais et ( 39 ) Dour le portugais ) : ( 38 ) a ) \ [ \ [ renunciar a algu~m que se ama\ ] \ ] SN P P SN duro b ) ~ duro \ [ ~ renunciar a algu~m que SN P se area \ ] \ ] P SN ( 39 ) chove Les phrases ench~ss~es du groupe II different de celles des groupes Ill , IV et V en ce qu'elles apparaissent non seulement en position `` compl~ment du syntagme verbal '' mais aussi en position `` sujet de la phrase '' ( cf. r~gles \ [ C i0\ ] et \ [ C 9\ ] ) .</sentence>
				<definiendum id="0">P SN</definiendum>
				<definiens id="0">IV et V en ce qu'elles apparaissent non seulement en position `` compl~ment du syntagme verbal '' mais aussi en position `` sujet de la phrase '' ( cf. r~gles \ [ C i0\ ] et \ [</definiens>
			</definition>
			<definition id="4">
				<sentence>Dans une phase ult~rieure de notre recherche , nous pourrons nous passer compl~tement des pr~-phrases : Ila phrase assertive sera ench~ss~e dans une archi-phrase qui lui attachera le pr~dicat est vrai ; IIla phrase n~gative se verra attacher le pr~dicat ne pas ; IIIla phrase interrogative sera ench~ss~e selon le schema de l'interrogation indirecte : # dis-moi P # ; IVia phrase imperative sera ench~ss~e dans une arohi-phrase du type # j'ordonne P # : remarquons que les interrogations indirectes sont une sous-classe des imperatives : # ~'ord0nne # ( que ) tu me dises P # # .</sentence>
				<definiendum id="0">IVia phrase imperative sera ench~ss~e dans</definiendum>
				<definiens id="0">nous pourrons nous passer compl~tement des pr~-phrases : Ila phrase assertive sera ench~ss~e dans une archi-phrase qui lui attachera le pr~dicat est vrai ; IIla phrase n~gative se verra attacher le pr~dicat ne pas ; IIIla phrase interrogative sera ench~ss~e selon le schema de l'interrogation indirecte : # dis-moi P # ;</definiens>
			</definition>
			<definition id="5">
				<sentence>Les r~gles cycliques IT 19\ ] et \ [ T 20\ ] sont aussi des transformations d'accord au sens strict ; leur domaine d'aDDlication est un syntagme nominal en relation anaphorique ( co-r~f~rence ) avec un syntagme nominal `` antecedent '' .</sentence>
				<definiendum id="0">sont aussi</definiendum>
				<definiens id="0">des transformations d'accord au sens strict ; leur domaine d'aDDlication est un syntagme nominal en relation anaphorique</definiens>
			</definition>
			<definition id="6">
				<sentence>30 Les types d'environnement illustr~s sont : I environnement r~flexif ( 66 ) ; les deux arguments de l'anaphore appartiennent ~ la m~me phrase simple ; le premier argument est n~cessairement le sujet de cette phrase ; II environnement relatif ( 65 ) ~ les deux arguments appartiennent ~ un syntagme nominal ; le second se trouve dans la phrase relative qui `` restreint '' le nom-noyau de ce syntagme ; IIIenvironnement inter-phrastique ( 64 ) ~ les deux arguments sont des constituants de deux phrases ind~pendantes , ( 64 ) a ) , ou d'une phrase-matrice et d~une phrase ench~ss~e , respectivement , ( 64 ) b ) .</sentence>
				<definiendum id="0">IIIenvironnement inter-phrastique</definiendum>
			</definition>
			<definition id="7">
				<sentence>__~ SV ( ADVINsT ) I \ [ C4\ ] PRED SA |C5\ ] ADV INST'-~par { ~I \ [ C6\ ] SV ~ V ( COMPL ) \ [ C7\ ] SA -- -~ COP ADJ ( COMPL ) \ [ C8\ ] COP -- ~ est \ [ c9\ ] SN ~ ( SN ) P } ( DET ) N \ [ CI0\ ] COMPL~ SN } ( SN ) • L P \ [ Cll\ ] DET \ [ quel\ ] ( CARD ) \ [ C12\ ] DEF __ , .</sentence>
				<definiendum id="0">__~ SV</definiendum>
				<definiens id="0">COMPL ) \ [ C7\ ] SA -- -~ COP ADJ ( COMPL ) \ [ C8\ ] COP -- ~ est</definiens>
			</definition>
			<definition id="8">
				<sentence># ( PRE ) ~ 1 2 3 -- 5 ou =ii et 4~ +-que SN V SN 3 4 5 8 4 5 ( SN ) Dar /k # 6 7 8 9 6 7 3 9 /k V SN ( SN ) par+ \ [ +pro-N\ ] N 3 4 5 6 7 4 5 6 ¢ 1 IT10 \ ] ELLIPSE-SUJ # X V 1 2 3 1 2 3 OBL OPT ( SN ) ( SN ) par+\ [ +pron-N\ ] # N 4 5 6 7~ 4 5 , @ 7 -5 -OPT # OBL 8 8 V SN ( SN ) nar+SN # 4 5 6 7 8 2 5 4 &lt; +Dassif @ 6 7 8 -43IT11\ ] ELLIPSE-COMPL # X \ [ +ellipse-compl \ ] ( \ [ -pro-N \ ] ) V N 1 2 3 4 \ [ +DrO-N \ ] X # N 5 6 7 =~ 1 2 3 4 6 7 IT12\ ] AC-CARD # X PLUR N X # 1 2 3 4 5 6 1 2 3 4 +plur 5 6 COND : 4~ +plur IT13\ ] AC-PRED # ( PRE ) \ [ ( DET ) 1 2 { v0 \ ] 7 1 2 7 \ [ ~fem \ ] ~l~p ~rs I ~2pers| ~plu= \ ] \ [ ~ fern \ ] pers | 2pers | ~piur J N ( P ) \ ] SN 3 4 5 6 X # 8 9 3 4 5 6 8 9 ( COP ) 6 OPT OBL -- 44COND '' : 7~fem \ ] ~pers | ~2mers | ~piur J IT14\ ] REFLEXIF # X N ( P ) V ( SN ) ( SN ) ( par ) ( DET ) N \ ] 2 3 4 5 6 7 8 9 I0 ( P ) X # ii 12 13 -- -- &gt; 1 2 3 4 5 6 7 8 REF+9 i0 Ii 12 13 COND : I0 = 3 OBL \ [ TI5\ ] REFLEX-PERS # X \ [ REF \ [ +Ders \ ] \ ] X # N SN 1 2 3 4 5 6 1 2 ~ 4 &lt; +ref 5 6 OBL \ [ TI6\ ] RELATIF # X f ( DET ) N IX | ( DET ) N\ ] X\ ] \ ] X # SN P SN 1 2 3 4 5 6 7 8 9 I0 1 2 3 4 5 REL+6 7 8 9 I0 COND : 7 =4 7 |TI7\ ] EXTRAPOSITION # ( PRE ) P 1 2 3 1 2 PRON IT18 \ ] ADJ-PRON # x N ( P ) 1 2 ( DET ) i0 1 2 i0 -45PRED # 4 5~ 4 3+5 V IX \ [ ( DET ) 7 3 4 5 6 ( N ) X # ii 12 13 ~ &gt; 3 4 5 6 PRON+7 ii 12 13 COND : 8=3 eu 8=11 et 8 ~ +pers f 191 AC-ANAPH x rPRo.1 CDE , f ' , e \ [ ~REF ~ L~h~j Le , EL J 1 2 3 4 5 1 2 3 ~ f em\ ] 4 5 COND : 3 .</sentence>
				<definiendum id="0">OBL OPT ( SN )</definiendum>
				<definiens id="0">] ~pers | ~2mers | ~piur J IT14\ ] REFLEXIF # X N ( P ) V ( SN ) ( SN ) ( par ) ( DET</definiens>
			</definition>
			<definition id="9">
				<sentence>TRAITS MORPHOLOGIQUES + inf trait transmis au verbe d'une I phrase infinitivis~e ( cf. |T 4\ ] , IT 5\ ] , IT 6\ ] , |T l\ ] et \ [ T 2\ ] ) ; 33 + subj + Dass + accus + nomin + pron + ref -71trait transmis au verbe d'une phrase ench~ss6e par le verbe de la phrase matrice ( cf. \ [ T 37\ ] ) ; trait qui marque la forme passive du verbe , il est introduit par la transformation de passivation IT 9\ ] ; trait marquant la fonction `` compl~ment du verbe '' et introduit par la r~qle de transformation cyclique \ [ T 21\ ] ; trait marquant la fonction `` sujet du verbe '' et introduit par les transformations cycliques IT 23\ ] et \ [ T 24\ ] ; trait introduit par la r~g\ ] e de transformation cyclique de pronominalisation \ [ T 22\ ] ; trait introduit par la r~gle de transformation cyclique \ [ T 15\ ] sous un nom personnel reflexivis6 ; 34 + def + le + auel -TZtrait introduit par la r~gle de transformation post-cyclique IT 72\ ] ; ilest inherent aux noms Dropres , noms personnels et noms g~n~riques ; trait introduit par la r~gle de transformation post-cyclique \ [ T 63\ ] trait introduit par la r~gle de transformation Dost-cyclique \ [ T 72\ ] 35 q -73IV LEXIQUE DES MORPHEMES GRAMMATICAUX he , as par quel ce , ceci , cela le Un morpheme discontinu de~gation , introduit par la r~gle \ [ C 3\ ] et plac~ d~finitivement par la r~gle IT 93\ ] ; pr~position introduite par la r~gle \ [ C 5\ ] pour marquer 1'agent ( causateur } secondaire ou l'agent principal de la forme ~ * • causative passive ; morpheme introduit par la r~gle \ [ c 11\ ] pour marquer l'interrogation localis~e ; variantes de ce introduites par les r~gles \ [ C 13\ ] et \ [ C 14\ ] ; ce est introduit , aussi , entre la pr~position ~ ou de et une phrase ench~ss~e initialis~e par que , par la r~gle \ [ T 44\ ] ; morpheme introduit par la r~gle \ [ C 13\ ] ~ morpheme singulier introduit par la ragle \ [ C 16\ ] ; 36 / L nombre de si que de est-ce que , est-ce qui -74morpheme complexe introduit par la r~gle \ [ C 17\ ] pour d~river les interrogations locales , awee combien ( quel hombre de ) ; morpheme introduit par la r~gle IT 32\ ] pour marquer les phrases interrogatives ; morpheme introduit par la r~gle IT 3\ ] pour marquer les phrases ench~ss~es ~ fonction sujet ou compl~ment , domin~es par SN ; pr~Dosition introduite par les r~gles IT 25\ ] ou IT 26\ ] pour marquer certains types de compl~ments ; pr~position introduite par les r~qles rT 27\ ] ou { T 28\ ] pour marquer eertains types de compl~ments ; variantes du morpheme complexe d'un sous-ensemble des `` interrogations directes '' , introduites par les r~gles \ [ T 46\ ] et .</sentence>
				<definiendum id="0">est introduit</definiendum>
				<definiendum id="1">trait marquant la fonction</definiendum>
				<definiens id="0">transmis au verbe d'une phrase ench~ss6e par le verbe de la phrase matrice ( cf. \ [ T 37\ ] ) ; trait qui marque la forme passive du verbe , il</definiens>
			</definition>
</paper>

		<paper id="1601">
</paper>

		<paper id="3301">
			<definition id="0">
				<sentence>after the programs ) PROGRAM I ( programming language FORTRAN II ) C COMPUTATION OF THE GENERAL MODELS FOR N GROUPS OF C SOUNDS : CALCULATE THE MEAN SETS FOR THE GROUPS° C MATERIAL CONSISTS OF MEASUREMENT VALUES AT 33 C CONSTANT MEASUREMENT POINTS ON THE FREQUENCY C AXIS OF EVERY SOUND° C UNIVERSITY OF OULUgFINLAND C INSTITUTE OF PHONETICS C DIMENSION IA~PLI ( 33 ) , N~iBER ( 33 ) , ISUM ( 53 ) DIMENSION AMEAN ( 333 WRITE ( 3,222 ) 222 FORMAT ( 'I ' , ' ' ) IGROUP=O ~O1 DO 300 I=I~33 ISUM ( I ) =O 300 NUMBER ( I ) =O 1READ ( I , lO ) ( IAMPLI ( I ) , I=1,33 ) 10 FOP .</sentence>
				<definiendum id="0">lO ) ( IAMPLI</definiendum>
				<definiens id="0">programming language FORTRAN II ) C COMPUTATION OF THE GENERAL MODELS FOR N GROUPS OF C SOUNDS : CALCULATE THE MEAN SETS FOR THE GROUPS° C MATERIAL CONSISTS OF MEASUREMENT VALUES AT 33 C CONSTANT MEASUREMENT POINTS ON THE FREQUENCY C AXIS OF EVERY SOUND° C UNIVERSITY OF OULUgFINLAND C INSTITUTE OF PHONETICS C DIMENSION IA~PLI ( 33 ) , N~iBER ( 33 ) , ISUM ( 53 ) DIMENSION AMEAN ( 333 WRITE ( 3,222 ) 222 FORMAT ( 'I '</definiens>
			</definition>
			<definition id="1">
				<sentence>O GO TO % 30 CONTINUE CONTINUE WRITE ( 3,14 ) ( NUM ( L ) , L=I,33 ) FORMAT ( '0 ' , 'ORDINAL NUNBERS'~T20~3513 ) CONTINUE END PROGRAM III C AUTOMATIC DISCRIMINATION OF N AND M C UNIVERSITY OF 0ULU FINLAND C INSTITUTE OF PHONETICS C C LOGIC OF THE PROGP , A~i : C 1 : CALCULATE THE MEANS OF THE AMPLITUDES AT THE NINE C MEASUREMENT POINTStWHICH ARE THE MOST DISCRIMINATING C POINTS ON THE FREQUENCY AXIS FOR N AND M~ .</sentence>
				<definiendum id="0">NUM</definiendum>
				<definiens id="0">CALCULATE THE MEANS OF THE AMPLITUDES AT THE NINE C MEASUREMENT POINTStWHICH ARE THE MOST DISCRIMINATING C POINTS ON THE FREQUENCY AXIS FOR N AND M~</definiens>
			</definition>
			<definition id="2">
				<sentence>C DIMENSION ASUM ( 9 ) , A~EAN ( 9 ) , BSUM ( 9 ) , BHEAN ( 9 ) , NUM ( 9 ) D~IENSION AMPLIT ( 9 ) ~ NUMBER ( 9 ) ~ INU~IBR ( 9 ) C C COMPUTATION OF THE MEANS IN THE BASIC MATERIAL C CONSISTING OF A SET OF N AND M SOUNDS WP .</sentence>
				<definiendum id="0">C DIMENSION ASUM</definiendum>
			</definition>
			<definition id="3">
				<sentence>C FORM THE ORDINAL NUMBERS : FOR EXAMPLE : THE GREATEST C AMPLITUDE WAS THE NINETH IN ORDER DO % 50 I=I~9 IORDER=O DO 2 M=I~9 IORDER=IORDER+ I IF ( AMEAN ( I ) -BMEAN ( M ) ) 7,7,2 BMEAN ( M ) =-9999999.0 GO TO 450 i0 C C % 50 CONTINUE WRITE ( 3,1~ ) ( NUM ( L ) , L=I,9 ) 1~ FOI~IAT ( 'O'I'0RDINAL NUMBERS'iT20,916 ) 30 51 51 FORM THE NUMERICAL MODEL NODEL=O MULTPL=IO0000OO0 DO 50 N=lt9 IPROD=NU~I ( M~MULTPL MODEL=MODEL+IPROD MULTPL=~IULTPL/IO CONTINUE IF ( K-1 .</sentence>
				<definiendum id="0">NUM</definiendum>
				<definiens id="0">FORM THE NUMERICAL MODEL NODEL=O MULTPL=IO0000OO0 DO 50 N=lt9 IPROD=NU~I ( M~MULTPL MODEL=MODEL+IPROD MULTPL=~IULTPL/IO CONTINUE IF ( K-1</definiens>
			</definition>
</paper>

		<paper id="3101">
			<definition id="0">
				<sentence>The system consists of two linguistically significant parts : a machine lexicon residing on a direct access device and a program package .</sentence>
				<definiendum id="0">system</definiendum>
				<definiens id="0">consists of two linguistically significant parts : a machine lexicon residing on a direct access device and a program package</definiens>
			</definition>
			<definition id="1">
				<sentence>In the second example we have to select two differe~r &lt; t verbs to render both ( 2a ) and ( 2b ) correctly into German 2~ . As a~irat a~proximation the following scheme can be proposed ~ : E U V -~ V transitiv ~+ transitiv NP ( R2 ' ) I-+traVnsitive I 1 ... t ~ -traVsitive ~Jote that ( RI ' ) and ( R2 ' ) must follow each other immediately , otherwise the environment in ( R2 ' ) must be made explicit. Note also that verbs like INCREASE need not be mentioned at all : they can be marked in the lexicon as invariably + transitive\ ] , to which the missing formal object should be inserted on the German side by an other rule : ( R3 ' ) transitiv _~ ~transitiv /~ X Conditions : X contains no NP ; X may be O. As the final step , the correct German equivalent has to be determined by the English verb and the feature \ [ + transitiv~ or \ [ transitive~ ; to secure the proper translation we have to provide appropriate lexicon entries for the rules : ( LI ) I L2 1 sTEIG N ( L3 ) I+ RETURN ~ _ transitive~U I+ ZUROCKBRINGEN\ ] transitive\ ] J ( L4 ) ~__ RETURN ~ ZUROCKKEHREN-transitive~J &gt; I-transitive~ 1 In order to be able to cope with reflexives of variable verb stems like : CHANGE -VER~NDERN ~__/ SICH 2\ [ NDERN MOVE -0BERTRAGEN ~JSICH BEWEGEN it is necessary to mark reflexives in ( R3 ' ) by an additional feature : Iv el trans it iv reflexive 71 /reX Conditions : X contains no NP ; X may be O. This basic schemehas to be made somewhat more precise .</sentence>
				<definiendum id="0">transitiv NP</definiendum>
				<definiens id="0">E U V -~ V transitiv ~+</definiens>
			</definition>
			<definition id="2">
				<sentence>s i ve\ ] \ ] -S Conditions : X~ V contains no NP V I &lt; 5 passiv~ \ ] i verD \ [ vP X may be O. ( R4 ) preceeds ( R1 ) .</sentence>
				<definiendum id="0">vP X</definiendum>
				<definiens id="0">X~ V contains no NP V I &lt; 5 passiv~ \ ] i verD \ [</definiens>
			</definition>
			<definition id="3">
				<sentence>This inversion routine consists of a set of rules ( 7 ) .</sentence>
				<definiendum id="0">inversion routine</definiendum>
			</definition>
			<definition id="4">
				<sentence>The rule for subordinate clauses operates aecording to the following basic scheme : ( R6 ) SD : IX Iv X VnlIVrestll~ erb SC : 1 2 0 4 + 3 Conditions : S is a subordinate clause ( i.e. it is dominated by an other symbol ) ; X may be an empty string ; V n is the last part of the verb .</sentence>
				<definiendum id="0">S</definiendum>
				<definiendum id="1">; V n</definiendum>
				<definiens id="0">a subordinate clause</definiens>
				<definiens id="1">an empty string</definiens>
				<definiens id="2">the last part of the verb</definiens>
			</definition>
			<definition id="5">
				<sentence>zu~stehen7 Es vzranlasst die Masahine ~bleiben~ At the first sight it appears that sentence ( Ta ' ) Es veranlasst die Maschine zu stehen blgiben .</sentence>
				<definiendum id="0">zu~stehen7 Es</definiendum>
				<definiens id="0">appears that sentence ( Ta ' ) Es veranlasst die Maschine zu stehen blgiben</definiens>
			</definition>
			<definition id="6">
				<sentence>In our notation symbols refer to code information , provided primarily by the word assignment routines , and as we have already pointed out improved by the syntactic component of the system .</sentence>
				<definiendum id="0">notation symbols</definiendum>
				<definiens id="0">code information , provided primarily by the word assignment routines</definiens>
			</definition>
</paper>

		<paper id="2001">
			<definition id="0">
				<sentence>However , the original theorems about this equivalence concerned pushdown store acceptors ( pda ) , not transducers ( pdt as defined by Ginsburg ( 5:102 ) ) ; for pdt ( as used by Sgall and his group ) t CF-preservation is known not to obtain in general ( 5:104 ) .</sentence>
				<definiendum id="0">pushdown store acceptors</definiendum>
				<definiendum id="1">pdt</definiendum>
			</definition>
</paper>

		<paper id="1001">
			<definition id="0">
				<sentence>The last stroke of the compounding unit ( nyo , tare , or kamae ) that follows the symbol R in i-representation tells where the preceding unit should be located in s-representation , The third class of compounders consisting of X , C , E , S , and P is provided for cases where a stroke is superposed onto a unit in a special manner given by definition of the particular compounder .</sentence>
				<definiendum id="0">P</definiendum>
				<definiens id="0">follows the symbol R in i-representation tells where the preceding unit should be located in s-representation</definiens>
			</definition>
</paper>

		<paper id="2101">
			<definition id="0">
				<sentence>The learning component makes it possible for a child born during the simulation to acquire the language or languages of his speech community through conversational interaction with other members of the society , and permits an adult either to modify one of his grammars in response to some contemporary linguistic innovation , or to acquire a new language with rules stored in a separate list .</sentence>
				<definiendum id="0">learning component</definiendum>
				<definiens id="0">makes it possible for a child born during the simulation to acquire the language or languages of his speech community through conversational interaction with other members of the society , and permits an adult either to modify one of his grammars in response to some contemporary linguistic innovation , or to acquire a new language with rules stored in a separate list</definiens>
			</definition>
			<definition id="1">
				<sentence>AUTOLING is an automated linguistic fieldworker capable of learning generative grammars through teletype interaction with a live human informant .</sentence>
				<definiendum id="0">AUTOLING</definiendum>
				<definiens id="0">an automated linguistic fieldworker capable of learning generative grammars through teletype interaction with a live human informant</definiens>
			</definition>
			<definition id="2">
				<sentence>Rejected sentences cause the newly posited rules to be discarded .</sentence>
				<definiendum id="0">Rejected sentences</definiendum>
				<definiens id="0">cause the newly posited rules to be discarded</definiens>
			</definition>
			<definition id="3">
				<sentence>It may be possible that A is an acquaintance of B ( B listens to A ) but B is not an acquaintance of A ( A does not listen to B ) , for instance if A is a village chief , and B is a non-destinguished village member .</sentence>
				<definiendum id="0">B</definiendum>
				<definiens id="0">a non-destinguished village member</definiens>
			</definition>
</paper>

		<paper id="2801">
			<definition id="0">
				<sentence>I. Introduction By now it has become olee~ to most linsuists that surface structures of utterances in natural laD6uage are not a sufficient basis for the semantic interpretation , an~ that an abstTact ~eep structure representation has to be assumed in a lin6uistlc desc~Iption , whlch la supposed to correlate the surface strua~xre hierarchical representation of each utterance with its msaniDg ( or meanings in case of homonimi~y ) ° Since the problem of what should be understood as the meanln6 of an utterance is not clear , the question of how deep etTuctures should be represented remains open for linguists , even for those who have been known as adherents of the transformational generative 5Tammar , where deep structures are determined in terms of generalized phrase markers ( or some other similar concepts which get modified in the course of work ) .</sentence>
				<definiendum id="0">msaniDg</definiendum>
				<definiens id="0">adherents of the transformational generative 5Tammar , where deep structures are determined in terms of generalized phrase markers ( or some other similar concepts which get modified in the course of work )</definiens>
			</definition>
			<definition id="1">
				<sentence>On the other hand , the proposition ( le ) The President of the United States has left the United State s is a conclusion based on the premiss : '' Nixon is the President Of the United States '' ~ which may belong to the speaker 's and heater 's knowledge of the wOrld , but if not included in the -6description of the lexicon , it will not be derived formally as a consequence .</sentence>
				<definiendum id="0">Nixon</definiendum>
				<definiens id="0">has left the United State s is a conclusion based on the premiss : ''</definiens>
				<definiens id="1">the President Of the United States '' ~ which may belong to the speaker 's and heater 's knowledge of the wOrld , but if not included in the -6description of the lexicon</definiens>
			</definition>
</paper>

		<paper id="6205">
</paper>

		<paper id="1901">
</paper>

		<paper id="4101">
			<definition id="0">
				<sentence>In this case , the defect consists in the testing of theories on very limited amounts of data -- often 0nly 3In this context , a large subset , is defined as the entire information store in a particular system for processlng -- say , scientific materlals-where the data base consists of over 100 , 000 documents .</sentence>
				<definiendum id="0">defect</definiendum>
				<definiens id="0">consists in the testing of theories on very limited amounts of data</definiens>
				<definiens id="1">the entire information store in a particular system for processlng -- say , scientific materlals-where the data base consists of over 100 , 000 documents</definiens>
			</definition>
</paper>

		<paper id="0201">
			<definition id="0">
				<sentence>Conceptual Dependency The Conceptual Dependency framework ( see Schank \ [ 1969\ ] ) is a stratified linguistic system that attempts to provide a computational theory of simulative performance .</sentence>
				<definiendum id="0">] )</definiendum>
				<definiens id="0">a stratified linguistic system that attempts to provide a computational theory of simulative performance</definiens>
			</definition>
			<definition id="1">
				<sentence>The conceptual dependency representation is a linked network that can be said to characterize the conceptualization inherent in a piece of wrltten language .</sentence>
				<definiendum id="0">conceptual dependency representation</definiendum>
				<definiens id="0">a linked network that can be said to characterize the conceptualization inherent in a piece of wrltten language</definiens>
			</definition>
			<definition id="2">
				<sentence>The conceptual semantics limits the possible conceptual dependencies to statements consonant with the system 's knowledge of the real world .</sentence>
				<definiendum id="0">conceptual semantics</definiendum>
				<definiens id="0">limits the possible conceptual dependencies to statements consonant with the system 's knowledge of the real world</definiens>
			</definition>
			<definition id="3">
				<sentence>fly 6 ( PP ) : a flap as on trousers .</sentence>
				<definiendum id="0">PP )</definiendum>
				<definiens id="0">a flap as on trousers</definiens>
			</definition>
			<definition id="4">
				<sentence>A realization rule consists of two parts : a recognizer and a dependency chart .</sentence>
				<definiendum id="0">realization rule</definiendum>
				<definiens id="0">consists of two parts : a recognizer and a dependency chart</definiens>
			</definition>
</paper>

		<paper id="6801">
			<definition id="0">
				<sentence>~ ~_ TcS '' \ ] where T is a set of terminal or , to avoid diametrically opposite associations target symbols , We say ~ is an R-reduction of or .</sentence>
				<definiendum id="0">T</definiendum>
				<definiens id="0">a set of terminal or , to avoid diametrically opposite associations target symbols</definiens>
				<definiens id="1">an R-reduction of or</definiens>
			</definition>
			<definition id="1">
				<sentence>Let the reduction rules mean inclusion so that , e.g. , ab c c means that the set a~b is included in the set c. A string o over I then represents a grammatical sentence of type t , if and only if , R m ( yc t sT. quately described as a classificational system with finer and broader terms where all classes can be written as cdncatenations interpreted as the set of concatenations of the cartesian products of a finite set S of categories .</sentence>
				<definiendum id="0">ab c c</definiendum>
				<definiens id="0">cdncatenations interpreted as the set of concatenations of the cartesian products of a finite set S of categories</definiens>
			</definition>
			<definition id="2">
				<sentence>The context-free multi-index rules are powerful and cover many languages of what is known as the context-sensitive type .</sentence>
				<definiendum id="0">context-free multi-index rules</definiendum>
				<definiens id="0">powerful and cover many languages of what is known as the context-sensitive type</definiens>
			</definition>
			<definition id="3">
				<sentence>l azla31 ... la i 6B } where B is a subset of S '' and A___C T. Or we may define the target set for each component in other ways .</sentence>
				<definiendum id="0">B</definiendum>
				<definiens id="0">a subset of S ''</definiens>
			</definition>
</paper>

		<paper id="3901">
			<definition id="0">
				<sentence>LsibrJiz ' static parallelism replaces Hobbes ' dynamic-calculative approach , which strives for the truth .</sentence>
				<definiendum id="0">dynamic-calculative approach</definiendum>
				<definiens id="0">strives for the truth</definiens>
			</definition>
</paper>

		<paper id="0301">
			<definition id="0">
				<sentence>Summary NEXUS is a research project which is concerned with input processing of natural language for information retrieval .</sentence>
				<definiendum id="0">Summary NEXUS</definiendum>
				<definiens id="0">a research project which is concerned with input processing of natural language for information retrieval</definiens>
			</definition>
			<definition id="1">
				<sentence>A user wants a book on computer programming , so he goes to the section of books that contains programming books .</sentence>
				<definiendum id="0">user</definiendum>
				<definiens id="0">wants a book on computer programming , so he goes to the section of books that contains programming books</definiens>
			</definition>
			<definition id="2">
				<sentence>Tile KARDIAK is a closed collection .</sentence>
				<definiendum id="0">Tile KARDIAK</definiendum>
				<definiens id="0">a closed collection</definiens>
			</definition>
			<definition id="3">
				<sentence>The clerical worker identifies a title and an abstract , and separates content words from function words .</sentence>
				<definiendum id="0">clerical worker</definiendum>
				<definiens id="0">identifies a title and an abstract , and separates content words from function words</definiens>
			</definition>
			<definition id="4">
				<sentence>The middle column is a list of the word combinations created by the NEXUS II program employing linguistic rules and sequence rules .</sentence>
				<definiendum id="0">middle column</definiendum>
				<definiens id="0">a list of the word combinations created by the NEXUS II program employing linguistic rules and sequence rules</definiens>
			</definition>
</paper>

		<paper id="7001">
			<definition id="0">
				<sentence>( Sb ) represents the non-specific interpretation .</sentence>
				<definiendum id="0">Sb )</definiendum>
				<definiens id="0">the non-specific interpretation</definiens>
			</definition>
</paper>

		<paper id="0801">
			<definition id="0">
				<sentence>A formula is a binarily bracketted string of formulae and atoms .</sentence>
				<definiendum id="0">formula</definiendum>
			</definition>
			<definition id="1">
				<sentence>A bare template is any concatenated triple of elements that can be produced by Rules I-6 below .</sentence>
				<definiendum id="0">bare template</definiendum>
			</definition>
			<definition id="2">
				<sentence>~I~TE P~0NOUN ) ) ( ( BE BE ) ( IS LS m~S THE P~OPERTY ) ) ( ( ( ( THIS THING ) ( TI &lt; UE USE ) ) SIGN ) ( WAY AS ~m~ms ) ) NIL NIL ( ( NOTOH~ , NGE KIND ) ( P~ENT AS UNCHi~GING ) ) ) ( ( THING BE SIGN ) ( ( ( ONE THING ) ( IT AS INI , NI~TE PRONOUN ) ) ( ( BE BE ) ( IS 4S H~S THE mOPm~TY ) ) ( ( ( ( WHERE IN ) ( ( WHERE POINT ) N~OI~ ) ) ( LINE SIGN ) ) ( WAY AS PATH O~ ROUTE ) ) NIL NIL ( ( NOTCH~GE KIND ) P~h~ENT AS UNCHanGING ) ) ) These two items are the expanslons ( in fr~\ ] es of sense pairs ) of the two bare templates .</sentence>
				<definiendum id="0">IS 4S</definiendum>
				<definiens id="0">H~S THE mOPm~TY ) ) ( ( ( ( WHERE IN ) ( ( WHERE POINT ) N~OI~ ) ) ( LINE SIGN ) ) ( WAY AS PATH O~ ROUTE ) ) NIL NIL ( ( NOTCH~GE KIND ) P~h~ENT AS UNCHanGING )</definiens>
			</definition>
			<definition id="3">
				<sentence>By means of a further rule ( R16 ) an attempt is made to produce not only full templates with formally appropriate internal relations , but ~lso ones with semantically close internal relations as well .</sentence>
				<definiendum id="0">R16</definiendum>
				<definiens id="0">templates with formally appropriate internal relations , but ~lso ones with semantically close internal relations as well</definiens>
			</definition>
			<definition id="4">
				<sentence>A paragraph string is any string of templates produced I by the rules 17 &amp; 18 from the part , graph symbol P. R17 .</sentence>
				<definiendum id="0">paragraph string</definiendum>
				<definiens id="0">any string of templates produced I by the rules 17 &amp; 18 from the part , graph symbol P. R17</definiens>
			</definition>
			<definition id="5">
				<sentence>P -~ Tr+T s if Tris a full template written as a string of six formulae thus , { where Frl Pr2 is a verb type , on , then 19 .</sentence>
				<definiendum id="0">Frl Pr2</definiendum>
				<definiens id="0">a verb type</definiens>
			</definition>
			<definition id="6">
				<sentence>The internal rejection functions ( matchin~ full temFlates ) Earlier I distinguished between internal and external procedures .</sentence>
				<definiendum id="0">internal rejection functions</definiendum>
				<definiens id="0">matchin~ full temFlates ) Earlier I distinguished between internal and external procedures</definiens>
			</definition>
			<definition id="7">
				<sentence>The survivors from PI0i ( UP represent a s Bage of azbiguity resolution beyond that given by TEMPO° If , for ex~mple , PICI ( UP examines a template that has been matched onto a fragment containing the wordsround box , where ~ template head had been attached to a formula for box , then , hopefully , PICI~-P keeps at least the template in which round is coded by its `` spatic~ property sense '' and bo~'is coded by its `` container '' sense .</sentence>
				<definiendum id="0">PICI ( UP</definiendum>
				<definiens id="0">examines a template that has been matched onto a fragment containing the wordsround box</definiens>
			</definition>
			<definition id="8">
				<sentence>Pi~ISP~a~J~ constructs the PICIqUP value ( full templates ) for its list of fragments , and then builds uD all possible frames of message-pairs for the peoragraph .</sentence>
				<definiendum id="0">PICIqUP value</definiendum>
				<definiens id="0">full templates ) for its list of fragments , and then builds uD all possible frames of message-pairs for the peoragraph</definiens>
			</definition>
			<definition id="9">
				<sentence>3iI 'S ) ( ( mmH ( ( : ~ : :~ : iO~ ) ( : :~on O0 ) ) C- : : , :~,0 ( HABITS AS f : EPEf .</sentence>
				<definiendum id="0">mmH</definiendum>
			</definition>
			<definition id="10">
				<sentence>Such a construction could thought of as adding a new rule F a , where P is a formula and a word name , and so expanding to a new rule system as the system adjusts to the particular text .</sentence>
				<definiendum id="0">P</definiendum>
				<definiens id="0">a formula and a word name , and so expanding to a new rule system as the system adjusts to the particular text</definiens>
			</definition>
</paper>

		<paper id="2201">
</paper>

		<paper id="6701">
</paper>

		<paper id="6904">
</paper>

		<paper id="0601">
			<definition id="0">
				<sentence>Redundancy is a well-known phenomenon of phonemes or phonological matrices within the framework of the distinctive-feature theory of JAKOBSON and HALLE Ill Q Redundancy in this theory means that the specification ( either + or - ) of certain features of a phoneme is predictable given the specifications of certain other features of the same phoneme and/or of neighbouring phonemes of a phoneme sequence .</sentence>
				<definiendum id="0">Redundancy</definiendum>
				<definiens id="0">a well-known phenomenon of phonemes or phonological matrices within the framework of the distinctive-feature theory of JAKOBSON and HALLE Ill Q Redundancy in this theory means that the specification</definiens>
			</definition>
			<definition id="1">
				<sentence>E.g. B = -~~+fl'-f2'+f3~ in set-theoretic notation is replaced by the conjunction B ( fl , fy , fs ) = flAf -- 2^f3 ( ~ is the complement of f taking the value tru_~e if f takes the value false and vice versa ) which takes the value tru__~e if and only if fl takes the value tru___~e , f2 takes the value false and f5 takes the value true .</sentence>
				<definiendum id="0">~</definiendum>
				<definiendum id="1">f2</definiendum>
			</definition>
			<definition id="2">
				<sentence>strid + nas eont voiced + + + + -tab.2 As noted in Seo.4 P-rules can be used to remove redundant specifications from phonemes : if a -- ~ ~r is a P-rule and a is a subset of a phoneme B~ then the element ~r is removed from B. Instead of removing the element ~r from B , thus removing the feature r altog~he~ a common practice in linguistics is to leave the feature r in B but to change its specification into a blank ( or zero ) .</sentence>
				<definiendum id="0">element ~r</definiendum>
				<definiens id="0">removing the element ~r from B , thus removing the feature r altog~he~ a common practice in linguistics is to leave the feature r in B but to change its specification into a blank</definiens>
			</definition>
			<definition id="3">
				<sentence>Thus , a Ub is a phonemic set and a subset of B. Let c = aX\ [ ~iri~ and let ho=C ubv~r\ ] ; since f &lt; r for all features f occurring in c or in b !</sentence>
				<definiendum id="0">Ub</definiendum>
				<definiens id="0">a phonemic set and a subset of B. Let c = aX\ [ ~iri~</definiens>
			</definition>
			<definition id="4">
				<sentence>HALLE : Fundamentals of Language .</sentence>
				<definiendum id="0">HALLE</definiendum>
			</definition>
</paper>

		<paper id="6215">
</paper>

		<paper id="6210">
</paper>

		<paper id="5001">
			<definition id="0">
				<sentence>The 'linear patterning ' is a net of the recurrences of elements that interweave the whole text .</sentence>
				<definiendum id="0">'linear patterning</definiendum>
				<definiens id="0">a net of the recurrences of elements that interweave the whole text</definiens>
			</definition>
			<definition id="1">
				<sentence>The headwords of the documentational thesaurus -combining the structural characteristics of the more important thesauri 5contains the following constituents : headword /descriptor/ SY synonyms EQ equivalent terms TR translation DEF definition S~ scope note SF semantic factors are ISF is semantic factor of FIELD field , thematic group CAT category /material , feature , process/ BT broader terms BT-LOG broader terms logical BT-WH broader terms whole BT-CON broader terms connected /terms to which the headword is connected but not as a logical broader term or a whole/ narrower terms NT NT-LOG NT-PT NT-CON COL collateral terms COL-LOG COL-PT COL-CON ASC associated terms ASCR associated reflexive ASCT associated to i ASCF associated from EC empirically connected Let us demonstrate these constituents by the thesaurus-entry of two concrete words : -8 /bird/ DEF ST ISF FIELD BT-LOG -WH NT-LOG -PT -CON COL-LOG EC ASCR ASCT ASCF tenger /sea/ DEF ST ISF FIELD BT-LOG -WH NT-LOG -PT -CON COL-LOG -PT ASCR ASCT ASCF /We shall deal with -separately later .</sentence>
				<definiendum id="0">ISF</definiendum>
				<definiens id="0">semantic factor</definiens>
			</definition>
			<definition id="2">
				<sentence>The list below contains the following conventions : 27f X/Y X is a constituent ordered ~mmediately under X /if Y is the dominant sentence itself , we never write it out/ , X/Z/ Z is an information that defines the character of the constituent X more precisely -if it is e number it stands for the communication unit that contains X as its constituent , /after a semicolon we have the concrete lexicsl unit that keeps the communication units in question together/ , X : : Y Y is the definition of X , X = r X is the repetition of the constituent Y , X : Y the missing constituent X is identical to X , X - : Y the constituent X refers to Y /stands for Y/ , The underlined constituent on the left of the signs - , : , or - : represent the proper paraphrase standing on the right .</sentence>
				<definiendum id="0">Y</definiendum>
				<definiens id="0">a constituent ordered ~mmediately under X /if Y is the dominant sentence itself</definiens>
				<definiens id="1">an information that defines the character of the constituent X</definiens>
				<definiens id="2">e number it stands for the communication unit that contains X</definiens>
			</definition>
			<definition id="3">
				<sentence>/In fact~ LISR is a deep structure that demonstrates the semantic character of the constituents , too .</sentence>
				<definiendum id="0">/In fact~ LISR</definiendum>
				<definiens id="0">a deep structure that demonstrates the semantic character of the constituents</definiens>
			</definition>
			<definition id="4">
				<sentence>_5 It is only a solution of the above sketched problems happening on 8 theoretical basis forming one coherent system that makes possible the solution of such questions as the automatic realization of the transitions from the surface structure to the incomplete deep structure , from the incomplete to the complete deep structure , from the deep structure ~D the logical repre sentat ion~ the automatic discovery of the thematic connections built on the TDEF-s , the automatic establishment of ~he -- in the given connection-irrelevant elements of the deep structure , the automatic realization of the reduction building on the irrelevant elements , 42 flna~Av the automatic dispatching of the generating of G ' character necessary during the process .</sentence>
				<definiendum id="0">flna~Av</definiendum>
				<definiens id="0">the automatic dispatching of the generating of G ' character necessary during the process</definiens>
			</definition>
</paper>

		<paper id="3001">
			<definition id="0">
				<sentence>The word definition , which is often used for data processing purposes , stating that a word is `` the sequence of graphemes between two blanks '' , rests solely upon graphematic properties 2 ) This means , that phonological aspects are a priori excluded and the spelling conventions of contemporary German as laid down in dictionaries are accepted as part of the investigated phenomenon , although these'conventlons certainly deserve some critical attention and revision .</sentence>
				<definiendum id="0">word definition</definiendum>
				<definiens id="0">a priori excluded and the spelling conventions of contemporary German as laid down in dictionaries are accepted as part of the investigated phenomenon , although these'conventlons certainly deserve some critical attention and revision</definiens>
			</definition>
			<definition id="1">
				<sentence>5 a. kernel morphemes ( K ) : are wordahle , have a wordclass status , and a semantic meaning b. affixes ( A ) : are not wordable , have a word-class status , and a semantic meaning c. inflexional morphemes ( FI ) : are not wordahle , have a word-class status and no semantic meaning Words ( language units ) can be described as a sequence of morphemes ( linguistic units ) .</sentence>
				<definiendum id="0">wordahle</definiendum>
			</definition>
</paper>

		<paper id="2301">
			<definition id="0">
				<sentence>The semantic system is a system of predicate logic with the following descriptive extension : a set of variables over time intervals t , a primitive ordering relation `` before '' , together with some axioms defining the properties of `` before '' .</sentence>
				<definiendum id="0">semantic system</definiendum>
				<definiens id="0">a system of predicate logic with the following descriptive extension : a set of variables over time intervals t , a primitive ordering relation `` before '' , together with some axioms defining the properties of `` before ''</definiens>
			</definition>
</paper>

		<paper id="6902">
</paper>

		<paper id="7101">
</paper>

		<paper id="2601">
			<definition id="0">
				<sentence>Forward contrastive concordance ~ ( English to Serbo-Cro~t ) ~jJ3 ND THE DO0~ LOCCEOt AND HIqSELF StIUr ~UT IN THE STqEET , AND EVER SINCE THEN ~ , ~3~ ASZA~ ZAKLJUCYANA VRATA I OS|AU NA ULICI , IE O\ [ ADA ZLIVl NA ULICI fEEL NNOG ~312 E |3~3JL OF THE C~KE FLAqE FLICKERED OUT FR~H UN # ER 1HE PAINTED IRON STOVE/ 3312 srl J~L\ [ CYAC KOKSOVO~ PLAMENA PU~ ST &amp; LkOH NASLIKANE ~VOZDENE PArENT-PECZIt2 3~3 RIAN\ [ S STATJE AND rHEY HEdER GOT HIM OUT , AN~KH~ NA|ER AOOVE HIM HAS STAJN ~3 JRZJANA IDA GA VISZE NIKADA NISU JZVUKLJt NEGO SE JE SAND VODA LAKRfAR\ [ LA ~J4~ u dHEN HiS D~N flO|HER HA~ \ [ URNeD HiM OU| |N|O THE S|~EE| IN MORAL |NDIGNA|\ [ ~J~ JUTRAt KADA ~A JE ~ODZENA MAJKA IZBAC\ ] LA NA ULICU S MURALNiM ZGRALZANJEM~ ~b~ ~E D\ [ S|ANCEt EVERYTHING HAS SHELLING 3U\ [ iN THE SILENT iNSrRUMEN|AT|ON OF T J~B~ J GALJ|NAMAt SVE JE RASLG KAO T\ ] HA INSTRUHENIAEIJA MOORDG JUrARNJEG 6UDZENJ 31~3 W||H ITS ROLLS 3F ~LAD , -ALL GAVE OUT THE ACRID AND PUNGENTLY ACRID SMEL 3L~ EMLJANAt KAO KDPRENA/I/ \ [ Z SVESA STRUJ\ ] OSLT~R \ ] OSJE|LJiVO VLALLAN VONJ DU ~L~ &amp; ARL\ ] ERm |HE STUFFING HAD BEEN ~OM|NG OUT~ A MASS OF ~ANDSt CURLY FEA|HERS A ~L~b ~I $ ~O\ [ NA , PROVIRiVALA UrRO~A , |SPUNJENA GU~TAMAt PERAST|H KOLUTiMA | CYUPE 3ZIJ FIRE ~LAZES OUT OF IHE \ [ R~N T~ROATS AND THERE IS A J~13 sUKLJA ~A~J \ [ Z ZLELJ~ZNId ZZORIJ~LA I MiRISLE BARUTIII JE ~g¢~ A ~AX CANDLE WAS ~URN\ [ N ; OUT ON A MARgLh S~UAR~ OF THE CHJRCH F 3Z~3 ~ $ 3~\ ] JBTALA JE ~A M~AMO~NOJ CYEfVORIN\ [ CRKVcNOG PODA JEDNA VOS 3ZIL RY HJMAN EYE+ LiKE AN ANIMAL PEEPING OUT OF A CAGE/B/ HUMAN GESTURES ARE LI 321t JDSKOM OKU |MA Iu~E , KAKVOM DOSADZ &amp; JE PRQMATRAJU ZZIVOI|NJE |Z KAVEZA/2/ KR Control Corpus , in Serbo-Croat ) .</sentence>
				<definiendum id="0">CURLY FEA|HERS A ~L~b ~I</definiendum>
				<definiendum id="1">FIRE ~LAZES OUT OF IHE \</definiendum>
				<definiens id="0">A J~13 sUKLJA ~A~J \ [ Z ZLELJ~ZNId ZZORIJ~LA I MiRISLE BARUTIII JE ~g¢~ A ~AX CANDLE WAS ~URN\ [ N</definiens>
			</definition>
</paper>

		<paper id="1501">
</paper>

		<paper id="6901">
</paper>

		<paper id="4001">
</paper>

		<paper id="7604">
</paper>

	</volume>
