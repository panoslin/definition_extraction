<?xml version="1.0" encoding="UTF-8"?>
	<volume id="A88">

		<paper id="1017">
			<definition id="0">
				<sentence>The top level nodes of the hierarchies provide general classes into which a group of propositions of an expert system might fall .</sentence>
				<definiendum id="0">top level</definiendum>
				<definiens id="0">nodes of the hierarchies provide general classes into which a group of propositions of an expert system might fall</definiens>
			</definition>
			<definition id="1">
				<sentence>Prospector is one of the fast expert systems to communicate with its users in natural language .</sentence>
				<definiendum id="0">Prospector</definiendum>
				<definiens id="0">one of the fast expert systems to communicate with its users in natural language</definiens>
			</definition>
			<definition id="2">
				<sentence>INCOME ) ) back to syntax ... ( ( S ( SLrBJ ( NP ( DET NIL ) ( DESCRIBERS NIL ) ( HEAD ( ( PRON I ) ) ) ( NUMBER SING ) ( CONJ NIL ) ( gEM ( HUMAN ) NIL ) ) ( QUAI.2FIERS NIL ) ( Q~ON NO ) ( CASE OIMECTIVE ) ) ) ( AUXS ( CAN ) ) ( TENSE PRES ) ( MAINVERB CLAIM ) ( SEM-~ ( ( CLASSIFY รท DEPENDENCY ) ) ) ( ADVERB NIL ) ( IND-OBJ NIL ) ( SUBCONJ NIL ) ( D-ore ( NP ( Dirt MY ) ( D~ERS NIL ) ( HEAD ( ( NOUN SON ) ) ) ( NUMBER Sn~G ) ( CONJ Nn . )</sentence>
				<definiendum id="0">INCOME ) )</definiendum>
				<definiens id="0">back to syntax ... ( ( S ( SLrBJ ( NP ( DET NIL ) ( DESCRIBERS NIL ) ( HEAD ( ( PRON I ) ) ) ( NUMBER SING ) ( CONJ NIL ) ( gEM ( HUMAN ) NIL</definiens>
			</definition>
			<definition id="3">
				<sentence>( SEM ( ( HUMAN MALE RELA'nVE 127 CHILD ) NIL ) ) ( QUALIHF , RS ( ( S ( SUBJ ( NP ( DET MY ) ( DESCRIBERS NIL ) ( HEAD ( ( NOUN SON ) ) ) ( SEM ( ( HUMAN MALE RELATIVE CIiXLD ) NIL ) ) ( QUESTION NO ) ) XAUXS NIL ) ( TENSE PRES ) ( MAINVERB EARN ) ( SEM-MVERB ( ( TRANS_OF_POS + ) ) ) ( ADVERB NIL ) ( BrD-OBJ NIL ) ( SUBCONJ Nn . )</sentence>
				<definiendum id="0">RS ( ( S ( SUBJ</definiendum>
				<definiens id="0">DET MY ) ( DESCRIBERS NIL ) ( HEAD ( ( NOUN SON ) ) ) ( SEM ( ( HUMAN MALE RELATIVE CIiXLD ) NIL ) ) ( QUESTION NO ) ) XAUXS NIL ) ( TENSE PRES ) ( MAINVERB EARN ) ( SEM-MVERB ( ( TRANS_OF_POS + ) ) ) ( ADVERB NIL ) ( BrD-OBJ NIL ) ( SUBCONJ Nn</definiens>
			</definition>
			<definition id="4">
				<sentence>Cooperative Responses From a Portable Natural Language Data Base Query System .</sentence>
				<definiendum id="0">Cooperative Responses</definiendum>
				<definiens id="0">From a Portable Natural Language Data Base Query System</definiens>
			</definition>
</paper>

		<paper id="1034">
			<definition id="0">
				<sentence>The Lucy Lucy is a natural language interface prototype that has been built by the Lingo group at MCC ( Rich et al. 1987 ) .</sentence>
				<definiendum id="0">Lucy Lucy</definiendum>
				<definiens id="0">a natural language interface prototype that has been built by the Lingo group at MCC ( Rich et al. 1987 )</definiens>
			</definition>
			<definition id="1">
				<sentence>The Lucy system uses canonical structures to deal with the following types of ambiguity : semantic sense ambiguity , idiom recognition , noun-noun bracketing , prepositional phrase attachment , and quantifier scope assignment .</sentence>
				<definiendum id="0">Lucy system</definiendum>
				<definiens id="0">uses canonical structures to deal with the following types of ambiguity : semantic sense ambiguity , idiom recognition , noun-noun bracketing , prepositional phrase attachment , and quantifier scope assignment</definiens>
			</definition>
			<definition id="2">
				<sentence>Lucy assigns the same syntactic analysis to the literal and idiomatic readings of a sentence .</sentence>
				<definiendum id="0">Lucy</definiendum>
				<definiens id="0">assigns the same syntactic analysis to the literal and idiomatic readings of a sentence</definiens>
			</definition>
			<definition id="3">
				<sentence>For each of the phenomena discussed in the previous see6At present , Lucy uses no knowledge except that contained in the class hierarchy .</sentence>
				<definiendum id="0">Lucy</definiendum>
				<definiens id="0">uses no knowledge except that contained in the class hierarchy</definiens>
			</definition>
			<definition id="4">
				<sentence>Syntax : \ [ mod : \ [ prep : with pobJ : a telescope\ ] dom : \ [ mod : \ [ prep : on pobJ : a hill\ ] dom : \ [ subJ : I pred : \ [ verb : saw obJ : the man\ ] \ ] 33 Stage I semantics : ( I xl ) ( man x2 ) ( see el xl x2 ) ( hill x3 ) ( telescope x4 ) ( Attach ( el x2 ) ( on argl x3 ) ( wlth argl x4 ) ) Note that the structure of the attachment assertion bears no simple relation to the structure of the syntactic analysis .</sentence>
				<definiendum id="0">obJ</definiendum>
				<definiens id="0">a hill\ ] dom : \ [</definiens>
				<definiens id="1">wlth argl x4 ) ) Note that the structure of the attachment assertion bears no simple relation to the structure of the syntactic analysis</definiens>
			</definition>
</paper>

		<paper id="1018">
			<definition id="0">
				<sentence>INTRODUCTION The System for Conceptual Information Summarization , Organization and Retrieval ( SCISOR ) is an implemented system designed to extract information from naturally occurring texts in constrained domains .</sentence>
				<definiendum id="0">SCISOR )</definiendum>
				<definiens id="0">an implemented system designed to extract information from naturally occurring texts in constrained domains</definiens>
			</definition>
			<definition id="1">
				<sentence>A good `` top-down '' analyzer might determine from `` ACE made ACME an offer '' that ACME is the target of a takover ( which is not obvious from the language , since the offer could be for something that ACME owns ) , and relate the offer to other events ( previous rumors or competing offers ) .</sentence>
				<definiendum id="0">ACME</definiendum>
				<definiens id="0">the target of a takover ( which is not obvious from the language , since the offer could be for something that ACME owns ) , and relate the offer to other events ( previous rumors or competing offers</definiens>
			</definition>
			<definition id="2">
				<sentence>Thus , if SCISOR determines that ACE is a takeover target , it will assume by default that ACHE is the suitor if the two companies appear in the same story and there is no additional information to aid in the disambiguation .</sentence>
				<definiendum id="0">ACE</definiendum>
				<definiens id="0">additional information to aid in the disambiguation</definiens>
			</definition>
			<definition id="3">
				<sentence>TRUMP is a flexible language analyzer consisting of a syntactic processor and semantic interpreter \ [ Jacobs , 1986 , Jacobs , 1987a\ ] .</sentence>
				<definiendum id="0">TRUMP</definiendum>
				<definiens id="0">a flexible language analyzer consisting of a syntactic processor and semantic interpreter \ [</definiens>
			</definition>
			<definition id="4">
				<sentence>Partial parser output : ( Sub j-verb-relation ( Subj ( NP ( Name-NP ( Name ( C-Name W.Acquisition ) ) ) ) ( verb ( v received ) ) ) ) ( iv offeO ( NP ( Postmodified-NP ( NP ( S-NP SS~ ) ) ( MOD ( Ratio-modifier ( R-~oo~d ( det a ) ) ( Noun-part ( N share ) ) ) ) ) ) TRUMP interpretation : ( offer ) ( transfer-event ( recipient Warnaco ) ) ( dollars ( quantity 36 ) ( denominator share ) ) Final interpretation : ( corp-takeover-offer ( target Warnaco ) ( dps ( quantity 36 ) ) ) In the first example above , TRUMP succeeds in producing a complete syntactic parse , along with the corresponding semantic interpretation .</sentence>
				<definiendum id="0">Subj</definiendum>
				<definiendum id="1">MOD</definiendum>
				<definiendum id="2">TRUMP</definiendum>
				<definiens id="0">succeeds in producing a complete syntactic parse , along with the corresponding semantic interpretation</definiens>
			</definition>
			<definition id="5">
				<sentence>IMPLEMENTATION SCISOR consists of a variety of programs and tools , operating in conjunction with a declarative knowledge base of domain-independent linguistic , grammatical and world knowledge and domain-dependent lexicon and domain knowledge .</sentence>
				<definiendum id="0">IMPLEMENTATION SCISOR</definiendum>
				<definiens id="0">consists of a variety of programs and tools , operating in conjunction with a declarative knowledge base of domain-independent linguistic , grammatical and world knowledge and domain-dependent lexicon and domain knowledge</definiens>
			</definition>
			<definition id="6">
				<sentence>FLUSH : a flexible lexicon design .</sentence>
				<definiendum id="0">FLUSH</definiendum>
				<definiens id="0">a flexible lexicon design</definiens>
			</definition>
			<definition id="7">
				<sentence>Ace : associating language with meaning .</sentence>
				<definiendum id="0">Ace</definiendum>
			</definition>
			<definition id="8">
				<sentence>SCISOR : a system for effective information retrieval from text .</sentence>
				<definiendum id="0">SCISOR</definiendum>
				<definiens id="0">a system for effective information retrieval from text</definiens>
			</definition>
</paper>

		<paper id="1030">
			<definition id="0">
				<sentence>Altenberg , Bengt , 1987 , Prosodic patterns in spoken English .</sentence>
				<definiendum id="0">Prosodic</definiendum>
				<definiens id="0">patterns in spoken English</definiens>
			</definition>
</paper>

		<paper id="1033">
			<definition id="0">
				<sentence>Alternative c23 represents the unlikely combinations .</sentence>
				<definiendum id="0">Alternative c23</definiendum>
			</definition>
			<definition id="1">
				<sentence>G ( n ) represents the value of the path up to and including n. I I ( n ) represents an estimated upper bound for the value of the path below n ( i.e. , for the additional value which can be obtained ) ~ .</sentence>
				<definiendum id="0">G ( n )</definiendum>
				<definiens id="0">represents the value of the path up to and including n. I I ( n ) represents an estimated upper bound for the value of the path below n ( i.e. , for the additional value which can be obtained</definiens>
			</definition>
			<definition id="2">
				<sentence>The potential Fc = An + Hc + Hc for that child , ~ere An is the accumulated weight on the path up to and including n , Nc is the Neight of the child , and Hc is the upper bound on the cumulative potential fop paths below the child .</sentence>
				<definiendum id="0">Nc</definiendum>
				<definiendum id="1">Hc</definiendum>
			</definition>
			<definition id="3">
				<sentence>AAAI-86 584-588 `` Viewing Parsing as Word Sense Discrimination : A Connectlonist Approach ' , in B.G. Bara and G. Guida ( eds ) , Computation Models of Natural Language Processing , Elsevier Science Publishers B.V. `` Using Commonsense Knowledge to Disambiguate Prepositional Phrase Modifiers '' , Proc .</sentence>
				<definiendum id="0">Sense Discrimination</definiendum>
				<definiens id="0">A Connectlonist Approach ' , in B.G. Bara and G. Guida ( eds ) , Computation Models of Natural Language Processing</definiens>
			</definition>
</paper>

		<paper id="1022">
</paper>

		<paper id="1008">
			<definition id="0">
				<sentence>Universal quantifiers have a surpringly marked tendency to scope inside a negation ( 24-26 ) given their usual tendency , with the exception of both , to take wide scope : ( 24 ) All people are n't happy ( 25 ) John did n't win every race ( 26 ) John did n't win both races .6 .2 .1 Non-universal quantifiers in the subject position of a negated sentence seldom scope inside the negation .</sentence>
				<definiendum id="0">Universal quantifiers</definiendum>
				<definiens id="0">quantifiers in the subject position of a negated sentence seldom scope inside the negation</definiens>
			</definition>
			<definition id="1">
				<sentence>APPENDIX : OL~I'PL~I `` FROM SCOPING PROGRAM Sentence 1 ( i ( q alll man2 ) ( f PRES ( p want3 ( TAU2 ( f INrF ( p marry4 ( c or6 Peggy5 Sue '' / ) ) ) ) ) ) ) l. The average weight is 0.7 based on t comparison ( q alll y5 ( i y5 man2 ) ( i y5 ( f PRES ( p want3 ( TAU2 ( I yl0 ( i ( i yI0 ( f EN'F ( p marry4 Peggy5 ) ) ) or6 ( i yl0 ( f L\'F ( p marry4 Sue7 ) ) ) ) ) ) ) ) ) ) ( q allt y5 ( i y5 man2 ) ( i ( i y5 ( f PRES ( p want3 ( TAU2 ( f 1ANF ( p marry4 Peggy5 ) ) ) ) ) ) or6 ( i y5 ( f PRES ( p want3 ( TAU2 ( f EN'F ( p marry4 Sue7 ) ) ) ) ) ) ) ) ( i ( q alll y5 ( i y5 man2 ) ( i y5 ( f PRES ( p want3 ( TAU2 ( f IN'F ( p marry4 Peggy5 ) ) ) ) ) ) ) or6 ( q alll y5 ( i y5 man2 ) ( i y5 ( f PRES ( p want3 ( TAU2 ( f L-NF ( p marry4 Sue*'/ ) ) ) ) ) ) ) ) time used = 308 msecs .</sentence>
				<definiendum id="0">APPENDIX</definiendum>
				<definiendum id="1">f EN'F</definiendum>
				<definiendum id="2">f L\'F</definiendum>
				<definiendum id="3">f 1ANF</definiendum>
				<definiendum id="4">f PRES ( p want3</definiendum>
				<definiendum id="5">TAU2 ( f IN'F</definiendum>
			</definition>
			<definition id="2">
				<sentence>McCord , M.C. ( 1981 ) , `` Focalizers , the Scoping Problem and Semantic Interpretation Rules in Logic Grammars '' , Proceedings of the International Workshop on Logic Programming for Expert Systems , Logicon , ( Woodland Hills ) .</sentence>
				<definiendum id="0">Scoping Problem</definiendum>
				<definiens id="0">Semantic Interpretation Rules in Logic Grammars '' , Proceedings of the International Workshop on Logic Programming for Expert Systems</definiens>
			</definition>
</paper>

		<paper id="1023">
			<definition id="0">
				<sentence>In fact , OPT is a means to collapse frames whose obligatory slots are identical and whose optional slots are not mutually exclusive .</sentence>
				<definiendum id="0">OPT</definiendum>
				<definiens id="0">a means to collapse frames whose obligatory slots are identical and whose optional slots are not mutually exclusive</definiens>
			</definition>
			<definition id="1">
				<sentence>Frame tests consist of morpho-syntactic and , possibly , semantic conditions which constituents must satisfy in order to become potential slot fillers .</sentence>
				<definiendum id="0">Frame tests</definiendum>
				<definiens id="0">consist of morpho-syntactic and , possibly , semantic conditions which constituents must satisfy in order to become potential slot fillers</definiens>
			</definition>
			<definition id="2">
				<sentence>Frame constructors consist of instructions according to which the system should generate the appropriate surface form required for fillers of the slots from which those constructors are called .</sentence>
				<definiendum id="0">Frame constructors</definiendum>
				<definiens id="0">consist of instructions according to which the system should generate the appropriate surface form required for fillers of the slots from which those constructors are called</definiens>
			</definition>
			<definition id="3">
				<sentence>3 : valency procedure ( FRA , FRX , FRG are the drive functions called from within grammar rules during analysis , transfer , and synthesis , respectively ) procedure is invoked from within grammar rules for building clausal structures of the following format : &lt; clausal category &gt; ARGI PRED ARG2 . '</sentence>
				<definiendum id="0">FRG</definiendum>
			</definition>
			<definition id="4">
				<sentence>'Lexical-functional transfer : a transfer framework in a machine translation system based on LFG . '</sentence>
				<definiendum id="0">'Lexical-functional transfer</definiendum>
			</definition>
</paper>

		<paper id="1019">
			<definition id="0">
				<sentence>A sample is shown below for the five parts of speech : AT ( article ) , NN ( singular noun ) , NNS ( non-singular noun ) , VB ( uninflected verb ) , IN ( preposition ) .</sentence>
				<definiendum id="0">NNS</definiendum>
				<definiendum id="1">IN ( preposition</definiendum>
				<definiens id="0">non-singular noun ) , VB ( uninflected verb</definiens>
			</definition>
</paper>

		<paper id="1014">
			<definition id="0">
				<sentence>The Linguistic String Project has created a Word Dictionary of over 10,000 words ( White 1983 ) , but this can not be used to parse even one W7 definition text without some additions .</sentence>
				<definiendum id="0">Linguistic String Project</definiendum>
				<definiens id="0">has created a Word Dictionary of over 10,000 words</definiens>
			</definition>
			<definition id="1">
				<sentence>The LSP definition grammar requires no information about the word or phrase in the entry-word position except its part of speech ( and it needs this only to avoid creating numerous `` junk '' parses ) .</sentence>
				<definiendum id="0">LSP definition grammar</definiendum>
				<definiens id="0">requires no information about the word or phrase in the entry-word position except its part of speech</definiens>
			</definition>
			<definition id="2">
				<sentence>A definition text consists of a phrase ( sometimes a very long one ) consisting of one or more head words plus zero or more modifying phrases .</sentence>
				<definiendum id="0">definition text</definiendum>
				<definiens id="0">consists of a phrase ( sometimes a very long one ) consisting of one or more head words plus zero or more modifying phrases</definiens>
			</definition>
			<definition id="3">
				<sentence>The SNePS semantic network system ( Shapiro 1979b ) is one of relatively few knowledge representation schemes that permit a unified representation of associative information and predicate-logic-style inference ( for details on the logic , see Shapiro 1979a and Hull 1986 ) enhanced with default reasoning capability ( Nutter 1983 ) .</sentence>
				<definiendum id="0">SNePS semantic network system</definiendum>
				<definiens id="0">one of relatively few knowledge representation schemes that permit a unified representation of associative information</definiens>
			</definition>
			<definition id="4">
				<sentence>`` Distributed Expert-Based Information Systems : An Interdisciplinary Approach . ''</sentence>
				<definiendum id="0">Distributed Expert-Based Information Systems</definiendum>
			</definition>
			<definition id="5">
				<sentence>Lexical-Semantic Relations : A Comparative Survey .</sentence>
				<definiendum id="0">Lexical-Semantic Relations</definiendum>
			</definition>
</paper>

		<paper id="1024">
</paper>

		<paper id="1002">
			<definition id="0">
				<sentence>A pattern is an expression in a pattern-matching language that corresponds to one or more words and phrases that might appear in a story .</sentence>
				<definiendum id="0">pattern</definiendum>
				<definiens id="0">an expression in a pattern-matching language that corresponds to one or more words and phrases that might appear in a story</definiens>
			</definition>
</paper>

		<paper id="1001">
			<definition id="0">
				<sentence>Multimedia answers include videodisc images and heuristically-produced complete sentences in text or text-to-speech form .</sentence>
				<definiendum id="0">Multimedia answers</definiendum>
				<definiens id="0">include videodisc images and heuristically-produced complete sentences in text or text-to-speech form</definiens>
			</definition>
			<definition id="1">
				<sentence>Our multimedia articulator consists of principled solutions which have been implemented in a domain independent manner and which produce answers that are reasonably relevant , informative , and conversational in style .</sentence>
				<definiendum id="0">multimedia articulator</definiendum>
				<definiens id="0">consists of principled solutions which have been implemented in a domain independent manner and which produce answers that are reasonably relevant , informative , and conversational in style</definiens>
			</definition>
			<definition id="2">
				<sentence>Articulation achieves the dual purposes of satisfying the user 's request for information while preserving a conversational style of interaction ( figure 1 ) .</sentence>
				<definiendum id="0">Articulation</definiendum>
			</definition>
</paper>

		<paper id="1025">
			<definition id="0">
				<sentence>PFL consists of the items referred to in the current sentence .</sentence>
				<definiendum id="0">PFL</definiendum>
				<definiens id="0">consists of the items referred to in the current sentence</definiens>
			</definition>
			<definition id="1">
				<sentence>The focus rules used are as follows ( in order ) : shift focus to a member of previous PFL , i.e. CF ( new sentence ) E PFL ( last sentence ) , maintain the same focus , i.e. , CF ( new sentence ) -- CF ( last sentence ) , and return to a previous focus , i.e. , CF ( new sentence ) E FS .</sentence>
				<definiendum id="0">CF</definiendum>
				<definiens id="0">new sentence ) E PFL ( last sentence ) , maintain the same focus</definiens>
			</definition>
			<definition id="2">
				<sentence>Given the input r-spec , MUMBLE assigns ( or , attaches ) it to an appropriate position in an incipient surface structure tree .</sentence>
				<definiendum id="0">MUMBLE</definiendum>
				<definiens id="0">assigns ( or , attaches ) it to an appropriate position in an incipient surface structure tree</definiens>
			</definition>
</paper>

		<paper id="1011">
			<definition id="0">
				<sentence>Triphone analysis is a new correction strategy which combines phonemic transcription with trigram analysis .</sentence>
				<definiendum id="0">Triphone analysis</definiendum>
				<definiens id="0">a new correction strategy which combines phonemic transcription with trigram analysis</definiens>
			</definition>
			<definition id="1">
				<sentence>SPEEDCOP ( Pollock &amp; Zamora , 1984 ) uses a special technique for searching and comparing strings .</sentence>
				<definiendum id="0">SPEEDCOP</definiendum>
				<definiens id="0">uses a special technique for searching and comparing strings</definiens>
			</definition>
			<definition id="2">
				<sentence>SPEEDCOP exploits the statistical properties of typographical errors well , so it deals better with frequent kinds of typographical errors than with infrequent ones .</sentence>
				<definiendum id="0">SPEEDCOP</definiendum>
				<definiens id="0">exploits the statistical properties of typographical errors well , so it deals better with frequent kinds of typographical errors than with infrequent ones</definiens>
			</definition>
			<definition id="3">
				<sentence>It consists of a DMA controller for handling input from a data base ( the dictionary ) , a proximity computer for computing the proximity ( similarity ) of two strings , and a ranker for ranking the 16 best solutions according to their proximity values .</sentence>
				<definiendum id="0">base</definiendum>
				<definiens id="0">a proximity computer for computing the proximity ( similarity ) of two strings , and a ranker for ranking the 16 best solutions according to their proximity values</definiens>
			</definition>
			<definition id="4">
				<sentence>The parameter compensation determines the importance of an occurrence of a certain character within the word .</sentence>
				<definiendum id="0">parameter compensation</definiendum>
				<definiens id="0">determines the importance of an occurrence of a certain character within the word</definiens>
			</definition>
			<definition id="5">
				<sentence>An example for Dutch is the cluster reduction rule which deletes a/t/in certain consonant clusters : ( ( ( obstruent-p ) /t/ ( obstruent-p ) ) /t/ // ) Such rules account for much of the power of SPELL THERAPIST because many homophonous orthographic errors seem to be related to rules such as assimilation ( e.g. inplementation ) or cluster reduction and degemination ( e.g. Dutch kunstof instead of kunststo\ ] ) .</sentence>
				<definiendum id="0">Dutch</definiendum>
				<definiens id="0">the cluster reduction rule which deletes a/t/in certain consonant clusters : ( ( ( obstruent-p ) /t/ ( obstruent-p ) ) /t/ // ) Such rules account for much of the power of SPELL THERAPIST because many homophonous orthographic errors seem to be related to rules such as assimilation ( e.g. inplementation ) or cluster reduction and degemination ( e.g. Dutch kunstof instead of kunststo\ ] )</definiens>
			</definition>
			<definition id="6">
				<sentence>With an eye to commercial applications , TNO-ITI is extending the basic method with data compression techniques and an improved formalism for graphemeto-phoneme conversion .</sentence>
				<definiendum id="0">TNO-ITI</definiendum>
				<definiens id="0">extending the basic method with data compression techniques</definiens>
			</definition>
</paper>

		<paper id="1006">
			<definition id="0">
				<sentence>INTRODUCTION Work in artificial intelligence has two goals : on the one hand to do concrete work that can be used in actual systems today , on the other to establish strong theoretical foundations that will allow us to build more sophisticated systems tomorrow .</sentence>
				<definiendum id="0">INTRODUCTION Work</definiendum>
				<definiens id="0">on the one hand to do concrete work that can be used in actual systems today , on the other to establish strong theoretical foundations that will allow us to build more sophisticated systems tomorrow</definiens>
			</definition>
			<definition id="1">
				<sentence>An object in the underlying program may be mapped to a template through a default specification , as illustrated in Figure 1 and repeated below along with the template ARMED-FORCES=UNIT-NAME : ( define-default-specification '53rd-mechanized-division : template-name armed-forces-unit-name : arguments ( `` 53rd '' `` Mechanized '' `` Division '' ) ) ( define-specification-template armed-forces-unit-name ( number type size ) ( let ( ( K ( make-a-kernel 'np-common-noun size ) ) ( B ( make-a-bundle 'general-np ) ) ) ( set-bundle-head B K ) ( neuter- &amp; -third-person B ) ( singular B ) ( no-determiner B ) ( add-specializing-description ( property-realized-as-an-adjective number ) S ) ( add-specializing-description ( property-realized-as-an-adjective type ) B ) B ) ) FIGURE 3 As a formal entity , this template is essentially a procedure for assembling the data structures that make up a specification .</sentence>
				<definiendum id="0">arguments</definiendum>
				<definiens id="0">make-a-kernel 'np-common-noun size ) ) ( B ( make-a-bundle 'general-np ) ) ) ( set-bundle-head B K ) ( neuter- &amp; -third-person B ) ( singular B ) ( no-determiner B ) ( add-specializing-description ( property-realized-as-an-adjective number ) S ) ( add-specializing-description ( property-realized-as-an-adjective type ) B ) B ) ) FIGURE 3 As a formal entity</definiens>
			</definition>
			<definition id="2">
				<sentence>value self 'K : :intent ) ) ) ) ) ) ( funcall-template 'current-event-with-modifiers k loc intent ) ) ) FIGURE 5 The top level function for generating the mission paragraph builds a discourse unit bundle with the first task-object as the head of the bundle and the rest as an ordered list of further-specifications .</sentence>
				<definiendum id="0">mission paragraph</definiendum>
				<definiens id="0">builds a discourse unit bundle with the first task-object as the head of the bundle and the rest as an ordered list of further-specifications</definiens>
			</definition>
			<definition id="3">
				<sentence>This template is a specialist which picks out the information from the task object to be included in the mission paragraph .</sentence>
				<definiendum id="0">template</definiendum>
				<definiens id="0">a specialist which picks out the information from the task object to be included in the mission paragraph</definiens>
			</definition>
			<definition id="4">
				<sentence>( define-template current-event-with-modifiers ( event &amp; rest modifiers ) ( let ( ( b ( make-a-bundle 'general-clause ) ) ( set-bundle-head b event ) ( present-tense b ) ( unmarked b ) ( dolist ( m modifers ) ( add-already-built-further-specification m b ) b ) ) FIGURE 6 In the examples described above , our use of templates is a shorthand for building realization specifications .</sentence>
				<definiendum id="0">define-template current-event-with-modifiers</definiendum>
				<definiens id="0">a shorthand for building realization specifications</definiens>
			</definition>
			<definition id="5">
				<sentence>KRS ( `` Chris '' ) is a rule based system for mission planning .</sentence>
				<definiendum id="0">KRS</definiendum>
				<definiens id="0">a rule based system for mission planning</definiens>
			</definition>
</paper>

		<paper id="1012">
			<definition id="0">
				<sentence>Major signposts are the homograph numbers , the sense numbers , and the consistent alternation of fonts : also useful are punctuation , position of swung dashes ( indicating repetition of the head word in a collocation or example ) , and membership of an item in a closed set ( part of speech , for example ) .</sentence>
				<definiendum id="0">Major signposts</definiendum>
				<definiens id="0">indicating repetition of the head word in a collocation or example ) , and membership of an item in a closed set ( part of speech , for example )</definiens>
			</definition>
			<definition id="1">
				<sentence>u1 &lt; quack &gt; u123 &lt; I &gt; u155 &lt; &gt; u71 &lt; kw &gt; u~3 &lt; k &gt; u72 &lt; &gt; u2 &lt; I &gt; u6 &lt; n &gt; u5 &lt; qua qua &gt; u6 &lt; m inv. &gt; u2 &lt; 2 &gt; u6 &lt; vi &gt; uS &lt; fare qua qua. &gt; u1 &lt; quack &gt; u123 &lt; 2 &gt; u 155 &lt; &gt; u71 &lt; kw &gt; ua 3 &lt; k &gt; u72 &lt; &gt; u6 &lt; n &gt; u6 &lt; ( pej ) &gt; u5 &lt; ciarlatano/a ; &gt; u6 &lt; ( fam : doctor ) &gt; u5 &lt; dottore/essa. quack I \ [ kwaek\ ] 1 n qua qua m inv. 2 vi fare qua qua. quack 2 \ [ kwaek\ ] n ( pej ) ciarlatano/a ; ( faro : doctor ) dottore/essa. To parse the dictionary entries , we constructed a general parsing engine and a specific grammar for each one of se86 veral MRD's. Because dictionary entries may only iterate. the level of sophistication required of an entry parser is not as high as that required for a sentence parser. Nevertheless , two technologies for sentence parsers were readily available to us : a bottom-up , all-paths strategy offered by PLNLP ( Langendoen and Barnett ( 1986 ) ) , and a top-down depth-first approach offered by logic grammars in Prolog ( McCord ( 1986 ) ) . Using either would significantly reduce the effort required to parse our more than a dozen dictionaries , because each new dictionary would only require a new grammar. Preliminary versions in PLNLP and Prolog were both adequate and contribute nothing to the theoretical issues surrounding parsing strategies. The choice of Prolog for continued development was largely due to the somewhat deterministic nature of parsing dictionary entries vis-a-vis the extravagance of the bottom-up , all-paths strategy. Nevertheless , we are studying the possibility of implementing a partial bottom-up strategy analogous to parse-fitting ( cf. Jensen , et a1. ( 1983 ) ) when it becomes necessary to process input with missing or corrupt font codes , there being few recovery strategies available to a top-down parser. Grammars for entries and grammars for sentences differ in three important ways : ( 1 ) entries can be huge : some are longer than 5000 bytes ; ( 2 ) tokens , the smallest unit handled by the grammar are larger and defined differently ; and ( 3 ) a dictionary grammar does not have to produce recursive structures , so can be to a large extent deterministic. A consequence of ( 1 ) is that it takes a large amount of storage to parse an entry. To process extremely long entries , we use an 8-megabyte virtual machine under VM/CMS. The motivation for ( 2 ) comes from the fact that the entries consist of text interspersed with font codes , which are not required to be delimited with blanks. The token string for an entry is therefore usually an alternating string of font codes and characters , with some semicolons or periods also defined as tokens. The grammar is a formal description of the structure of entries for a particular dictionary ; its formalism is a modification and extension of McCord 's ( 1986 ) modular logic grammar ( MLG ) , which is in turn derived from the definite clause grammar ( DCG ) of Pereira and Warren ( 1980 ) . We illustrate with some sample rules from the grammar of the Collins English-German dictionary. ( I ) body == &gt; opt ( prehom ) : opt ( homlist ( * ) ) .</sentence>
				<definiendum id="0">; its formalism</definiendum>
				<definiens id="0">u1 &lt; quack &gt; u123 &lt; I &gt; u155 &lt; &gt; u71 &lt; kw &gt; u~3 &lt; k &gt; u72 &lt; &gt; u2 &lt; I &gt; u6 &lt; n &gt; u5 &lt; qua qua &gt; u6 &lt; m inv. &gt; u2 &lt; 2 &gt; u6 &lt; vi &gt; uS &lt; fare qua qua. &gt; u1 &lt; quack &gt; u123 &lt; 2 &gt; u 155 &lt; &gt; u71 &lt; kw &gt; ua 3 &lt; k &gt; u72 &lt; &gt; u6 &lt; n &gt; u6 &lt; ( pej ) &gt; u5 &lt; ciarlatano/a ; &gt; u6 &lt; ( fam : doctor ) &gt; u5 &lt; dottore/essa. quack I \ [ kwaek\ ] 1 n qua qua m inv. 2 vi fare qua qua. quack 2 \ [ kwaek\ ] n ( pej ) ciarlatano/a ; ( faro : doctor ) dottore/essa. To parse the dictionary entries , we constructed a general parsing engine and a specific grammar for each one of se86 veral MRD's. Because dictionary entries may only iterate. the level of sophistication required of an entry parser is not as high as that required for a sentence parser. Nevertheless , two technologies for sentence parsers were readily available to us : a bottom-up , all-paths strategy offered by PLNLP ( Langendoen and Barnett ( 1986 ) ) , and a top-down depth-first approach offered by logic grammars in Prolog ( McCord ( 1986 ) ) . Using either would significantly reduce the effort required to parse our more than a dozen dictionaries , because each new dictionary would only require a new grammar. Preliminary versions in PLNLP and Prolog were both adequate and contribute nothing to the theoretical issues surrounding parsing strategies. The choice of Prolog for continued development was largely due to the somewhat deterministic nature of parsing dictionary entries vis-a-vis the extravagance of the bottom-up , all-paths strategy. Nevertheless , we are studying the possibility of implementing a partial bottom-up strategy analogous to parse-fitting ( cf. Jensen , et a1. ( 1983 ) ) when it becomes necessary to process input with missing or corrupt font codes , there being few recovery strategies available to a top-down parser. Grammars for entries and grammars for sentences differ in three important ways : ( 1 ) entries can be huge : some are longer than 5000 bytes ; ( 2 ) tokens , the smallest unit handled by the grammar are larger and defined differently ; and ( 3 ) a dictionary grammar does not have to produce recursive structures , so can be to a large extent deterministic. A consequence of ( 1 ) is that it takes a large amount of storage to parse an entry. To process extremely long entries , we use an 8-megabyte virtual machine under VM/CMS. The motivation for ( 2 ) comes from the fact that the entries consist of text interspersed with font codes , which are not required to be delimited with blanks. The token string for an entry is therefore usually an alternating string of font codes and characters , with some semicolons or periods also defined as tokens. The grammar is a formal description of the structure of entries for a particular dictionary</definiens>
				<definiens id="1">a modification and extension of McCord 's ( 1986 ) modular logic grammar ( MLG ) , which is in turn derived from the definite clause grammar ( DCG ) of Pereira and Warren ( 1980 ) . We illustrate with some sample rules from the grammar of the Collins English-German dictionary. ( I ) body == &gt; opt ( prehom ) : opt ( homlist ( * ) )</definiens>
			</definition>
			<definition id="2">
				<sentence>The Lexical Query Language allows the user to specify conditions on the attributes of LDB entries .</sentence>
				<definiendum id="0">Lexical Query Language</definiendum>
			</definition>
			<definition id="3">
				<sentence>Alternately , a p. ( for `` print '' ) operator can be used in the terminal or nonterminal nodes of the query tree to specify which data should be given in a hierarchically formatted display of the query answers .</sentence>
				<definiendum id="0">p.</definiendum>
				<definiens id="0">the terminal or nonterminal nodes of the query tree to specify which data should be given in a hierarchically formatted display of the query answers</definiens>
			</definition>
			<definition id="4">
				<sentence>LQL offers this flexibility by providing the operators i. ( for `` insert '' ) , d. ( for `` delete ) , and u. ( for `` update '' ) .</sentence>
				<definiendum id="0">LQL</definiendum>
				<definiens id="0">offers this flexibility by providing the operators i. ( for `` insert ''</definiens>
			</definition>
			<definition id="5">
				<sentence>Current work is aimed at implementing the full language ( including joins , updates , and aggregate operations ) and improving performance in order to make LQL attractive for use in a wide variety of applications .</sentence>
				<definiendum id="0">full language</definiendum>
			</definition>
</paper>

		<paper id="1020">
			<definition id="0">
				<sentence>According to this view , synonymy is a relationship of sameness of meaning between words , which is defined as the identity of their semantic representations .</sentence>
				<definiendum id="0">synonymy</definiendum>
				<definiens id="0">a relationship of sameness of meaning between words</definiens>
				<definiens id="1">the identity of their semantic representations</definiens>
			</definition>
			<definition id="1">
				<sentence>FEEBLE : enervated , enfeebled , etiolated , exhausted , failing , faint , frail , infu 'm , languid , powerless , puny , shilpit ( *Scottish ) , sickly , weak , weakened indecisive , ineffective , ineffectual , inefficient , insignificant , insufficient , lame , paltry , poor , slight , tame , thin , unconvincing , weak POOR : hard up ( *Informal ) , impecunious , impoverished , indigent , in need , in want , necessitous , needy , on one 's beam-ends , on one 's uppers , on the rocks , penniless , penurious , poverty-stricken , skint 148 ( *BritishSlang ) , stony-broke ( *BritishSlang ) incomplete , insufficient , lacking , meagre , miserable , niggardly , pitiable , reduced , scanty , skimpy , slight , sparse , straitened low-grade , mediocre , rotten ( *Informal ) , rubbishy , second-rate , shabby , shoddy , sorry , substandard , unsatisfactory , valueless , weak , worthless fruitless , impoverished , infertile , sterile , unfruitful , unproductive pathetic , pitiable , unfortunate , unhappy , unlucky , wretched modest , paltry , plain , trivial The symmetry method linked feeble2 with poor3 , whereas the intersection method linked feeble2 with poor2 .</sentence>
				<definiendum id="0">stony-broke</definiendum>
				<definiens id="0">pitiable , reduced , scanty , skimpy , slight , sparse , straitened low-grade , mediocre , rotten ( *Informal ) , rubbishy , second-rate , shabby , shoddy , sorry , substandard , unsatisfactory , valueless , weak , worthless fruitless , impoverished , infertile , sterile , unfruitful , unproductive pathetic , pitiable , unfortunate , unhappy , unlucky , wretched modest , paltry , plain</definiens>
			</definition>
</paper>

		<paper id="1026">
			<definition id="0">
				<sentence>Luke is a knowledge editor designed to support two tasks ; the first is editing the classes and relations in a knowledge base .</sentence>
				<definiendum id="0">Luke</definiendum>
				<definiens id="0">a knowledge editor designed to support two tasks</definiens>
			</definition>
			<definition id="1">
				<sentence>base , Luke makes natural language available in its own interface .</sentence>
				<definiendum id="0">Luke</definiendum>
				<definiens id="0">makes natural language available in its own interface</definiens>
			</definition>
			<definition id="2">
				<sentence>Compoundings are rules that specify how two nouns can be compounded .</sentence>
				<definiendum id="0">Compoundings</definiendum>
				<definiens id="0">rules that specify how two nouns can be compounded</definiens>
			</definition>
			<definition id="3">
				<sentence>A semantic mapping is a rule for translating one initial logical form into zero or more final logical forms .</sentence>
				<definiendum id="0">semantic mapping</definiendum>
				<definiens id="0">a rule for translating one initial logical form into zero or more final logical forms</definiens>
			</definition>
			<definition id="4">
				<sentence>The base editor is a complete system : it can be run independently of any of the extensions described hereafter .</sentence>
				<definiendum id="0">base editor</definiendum>
				<definiens id="0">a complete system : it can be run independently of any of the extensions described hereafter</definiens>
			</definition>
			<definition id="5">
				<sentence>The base editor knows nothing of the Lucy natural language understanding system .</sentence>
				<definiendum id="0">base editor</definiendum>
			</definition>
			<definition id="6">
				<sentence>The Tbox holds the terminological information of the knowledge base , information that defines what symbols are valid class identifiers , and what the names , arities , domains and ranges of those relations are .</sentence>
				<definiendum id="0">Tbox</definiendum>
				<definiens id="0">holds the terminological information of the knowledge base , information that defines what symbols are valid class identifiers</definiens>
			</definition>
			<definition id="7">
				<sentence>Luke , then , is a `` base editor '' extended to account for the semantic mapping side effects of knowledge editing operations .</sentence>
				<definiendum id="0">Luke</definiendum>
				<definiens id="0">is a `` base editor '' extended to account for the semantic mapping side effects of knowledge editing operations</definiens>
			</definition>
			<definition id="8">
				<sentence>Luke provides tools for the acquisition of semantic mappings and the maintenance of those mappings once collected .</sentence>
				<definiendum id="0">Luke</definiendum>
			</definition>
			<definition id="9">
				<sentence>Luke provides a number of tools to help manage the semantic lexicon .</sentence>
				<definiendum id="0">Luke</definiendum>
				<definiens id="0">provides a number of tools to help manage the semantic lexicon</definiens>
			</definition>
			<definition id="10">
				<sentence>Future Plans At present , Luke is a useful , competent knowledge editor and provides a substrate of tools for concurrently managing the development of an application knowledge base and the NLI that will ultimately operate with it .</sentence>
				<definiendum id="0">Luke</definiendum>
				<definiens id="0">a useful , competent knowledge editor and provides a substrate of tools for concurrently managing the development of an application knowledge base</definiens>
			</definition>
			<definition id="11">
				<sentence>Luke is an attempt to help design in the natural language interface from the start .</sentence>
				<definiendum id="0">Luke</definiendum>
				<definiens id="0">an attempt to help design in the natural language interface from the start</definiens>
			</definition>
			<definition id="12">
				<sentence>Krypton : A Functional Approach to Knowledge Representation .</sentence>
				<definiendum id="0">Krypton</definiendum>
				<definiens id="0">A Functional Approach to Knowledge Representation</definiens>
			</definition>
			<definition id="13">
				<sentence>TEAM : An Experiment in the Design of Transportable English Interfaces .</sentence>
				<definiendum id="0">TEAM</definiendum>
			</definition>
</paper>

		<paper id="1004">
			<definition id="0">
				<sentence>When the generator kernel realizes this case frame as a clause in active voice this results in the following functional grammatical structure : ( : CLAUSE ( : VERB 'generier ' ) ( : FEATURES ( : VOICE ACTIVE ) ) ( : SUBJ ( : NG ( : HEAD ( : *NC ( : *PN 'SENSYN I ) '- ' 'Projekt ' ) ( : FEATURES ( : NUM SG ) ( : DET DEF ) ( : CAS NOM ) ) ) ) ( : DIROBJ ( : NG ( : HEAD 'Sprache ' ) ( : FEATURES ( : HUM SG ) ( : DET ZERO ) ) ( : CLASSIFIER 'deutsch ' ) ) ) ) This yields the following German sentence~ : `` Das SEMSYN-Projekt generiert deutsche Sprache . ''</sentence>
				<definiendum id="0">NUM SG</definiendum>
				<definiendum id="1">FEATURES ( : HUM SG )</definiendum>
				<definiens id="0">a clause in active voice this results in the following functional grammatical structure : ( : CLAUSE ( : VERB 'generier ' ) ( : FEATURES ( : VOICE ACTIVE</definiens>
				<definiens id="1">DET ZERO ) ) ( : CLASSIFIER 'deutsch ' ) )</definiens>
			</definition>
			<definition id="1">
				<sentence>To achieve this result SEMTEX ' contexthandling mechanisms have been enriched : Elision is no longer restricted to adjuncts .</sentence>
				<definiendum id="0">Elision</definiendum>
			</definition>
			<definition id="2">
				<sentence>SEMNET-EDIT is a tool for experimenting the generator by interactively editing semantic nets \ [ Kehl 85\ ] : โข modification of given semantic nets โข creation of semantic nets from scratch โข generation of German from created or modified semantic nets and/or their subnets .</sentence>
				<definiendum id="0">SEMNET-EDIT</definiendum>
				<definiens id="0">a tool for experimenting the generator by interactively editing semantic nets \ [ Kehl 85\ ] : โข modification of given semantic nets โข creation of semantic nets from scratch โข generation of German from created or modified semantic nets and/or their subnets</definiens>
			</definition>
			<definition id="3">
				<sentence>Multilingual generation enforces the separation of generator knowledge into language dependent data and language independent machinery .</sentence>
				<definiendum id="0">Multilingual generation</definiendum>
				<definiens id="0">enforces the separation of generator knowledge into language dependent data and language independent machinery</definiens>
			</definition>
			<definition id="4">
				<sentence>The SEMSYN system is the joint effort of a variety of people .</sentence>
				<definiendum id="0">SEMSYN system</definiendum>
				<definiens id="0">the joint effort of a variety of people</definiens>
			</definition>
</paper>

		<paper id="1009">
			<definition id="0">
				<sentence>We define a distance measure between a clause and a pattern by assigning a score to each type of mismatch ( clause and pattern have the same syntactic case with different semantic classes ; clause and pattern include the same semantic class but in different cases ; clause has case not present in pattern ; etc. ) and adding the scores .</sentence>
				<definiendum id="0">clause</definiendum>
				<definiens id="0">the same syntactic case with different semantic classes ; clause and pattern include the same semantic class but in different cases</definiens>
			</definition>
			<definition id="1">
				<sentence>( where Vll is the name of a course ) , the system will respond Sorry , I do n't understand the pattern ( students offer courses ) and will offer the `` suggestions '' Did any students take Vll ?</sentence>
				<definiendum id="0">Vll</definiendum>
				<definiens id="0">the name of a course ) , the system will respond Sorry , I do n't understand the pattern ( students offer courses</definiens>
			</definition>
			<definition id="2">
				<sentence>That would be an unreasonable expectation for our simple system , which does not maintain any user or discourse model .</sentence>
				<definiendum id="0">simple system</definiendum>
				<definiens id="0">does not maintain any user or discourse model</definiens>
			</definition>
</paper>

		<paper id="1007">
			<definition id="0">
				<sentence>SPQR operates by interactively and incrementally collecting information about the semantic acceptability of certain lexical co-occurrence patterns ( e.g. , subject-verbobject ) found in partially constructed parses .</sentence>
				<definiendum id="0">SPQR</definiendum>
				<definiens id="0">operates by interactively and incrementally collecting information about the semantic acceptability of certain lexical co-occurrence patterns ( e.g. , subject-verbobject ) found in partially constructed parses</definiens>
			</definition>
			<definition id="1">
				<sentence>SPQR has been used in analysing texts in three domains : casualty reports ( CASREPs ) dealing with mechanical failures of starting air eompreuorJ ( SACs are a component of a ship 's engine ) , queries to a Navy ships database , and Navy sighting messages ( RAINFORMs ) .</sentence>
				<definiendum id="0">SPQR</definiendum>
				<definiendum id="1">SACs</definiendum>
				<definiendum id="2">Navy sighting messages</definiendum>
				<definiens id="0">a component of a ship 's engine ) , queries to a Navy ships database</definiens>
			</definition>
			<definition id="2">
				<sentence>At the top level , the ISR consists of the main verb ( preceded by its tense operators ) , followed by its subject and object .</sentence>
				<definiendum id="0">ISR</definiendum>
				<definiens id="0">consists of the main verb ( preceded by its tense operators ) , followed by its subject and object</definiens>
			</definition>
			<definition id="3">
				<sentence>The selectional mechanism as described so far deals only with lexical patterns ( i.e. , patterns involving specific lexical items appearing in the lexicon ) .</sentence>
				<definiendum id="0">lexical patterns</definiendum>
				<definiens id="0">patterns involving specific lexical items appearing in the lexicon</definiens>
			</definition>
			<definition id="4">
				<sentence>54 One of the statistics presented in Table 2 is the SEARCH FOCUS , which is a measure of the efficiency of the parser in either reaching the correct parse of a sentence , or generating all possible parses .</sentence>
				<definiendum id="0">SEARCH FOCUS</definiendum>
				<definiens id="0">a measure of the efficiency of the parser in either reaching the correct parse of a sentence , or generating all possible parses</definiens>
			</definition>
			<definition id="5">
				<sentence>Barbara J. Gross , TEAM : A Transportable Natural-Language Interface System .</sentence>
				<definiendum id="0">TEAM</definiendum>
				<definiens id="0">A Transportable Natural-Language Interface System</definiens>
			</definition>
</paper>

		<paper id="1005">
			<definition id="0">
				<sentence>Clearly the high frequency words ( the set that comprise half of word use ) are mildly sensitive to `` context '' even when `` context '' is so broadly defined as sentence position .</sentence>
				<definiendum id="0">high frequency words</definiendum>
				<definiens id="0">the set that comprise half of word use</definiens>
			</definition>
</paper>

		<paper id="1031">
			<definition id="0">
				<sentence>INTRODUCTION Nabu is a multilingual Natural Language Processing system under development in the Human Interface Laboratory at MCC , for shareholder companies .</sentence>
				<definiendum id="0">INTRODUCTION Nabu</definiendum>
				<definiens id="0">a multilingual Natural Language Processing system under development in the Human Interface Laboratory at MCC</definiens>
			</definition>
			<definition id="1">
				<sentence>Rule execution is a matter of matching according to one side of the equation and ( if that is successful ) transforming according to the other side .</sentence>
				<definiendum id="0">Rule execution</definiendum>
				<definiens id="0">a matter of matching according to one side of the equation and ( if that is successful ) transforming according to the other side</definiens>
			</definition>
			<definition id="2">
				<sentence>A control graph is a collection of nodes connected by directed arcs .</sentence>
				<definiendum id="0">control graph</definiendum>
				<definiens id="0">a collection of nodes connected by directed arcs</definiens>
			</definition>
			<definition id="3">
				<sentence>The glosseme feature li~t , in addition to indicating the main-entry ( `` derive '' ) and lexical category ( VERB ) to look for in the dictionary , contains sufficient information to allow transformation of the stored entry for derive into a representation of its surface-form realization ( derivations ) , in terms of syntactic category ( NOUN ) , subcategorization features ( PL ) , and semantics ( the meaning of derive , transformed by +ION ) .</sentence>
				<definiendum id="0">NOUN</definiendum>
				<definiendum id="1">semantics</definiendum>
				<definiens id="0">contains sufficient information to allow transformation of the stored entry for derive into a representation of its surface-form realization ( derivations</definiens>
			</definition>
			<definition id="4">
				<sentence>PROCESSORS IMPLEMENTED In addition to the rule and graph interpreters per se , delivered to MCC shareholders in mid-1985 , Nabu includes a variety of tools supporting the development , testing , maintenance , and multilingual documentation of morphological rule hierarchies and grammars .</sentence>
				<definiendum id="0">Nabu</definiendum>
				<definiens id="0">includes a variety of tools supporting the development , testing , maintenance , and multilingual documentation of morphological rule hierarchies and grammars</definiens>
			</definition>
</paper>

		<paper id="1003">
			<definition id="0">
				<sentence>The major components of Lucy are a syntax-based parser ( Wittenburg , 1986 ) , a semant=c translation system , a pronominal anaphora resolution system ( which will be described in this paper ) and a pragmatic processor .</sentence>
				<definiendum id="0">syntax-based parser</definiendum>
				<definiens id="0">a pronominal anaphora resolution system ( which will be described in this paper</definiens>
			</definition>
			<definition id="1">
				<sentence>The anaphora resolution handler takes two inputs : an ordered list of available CS 's and the anaphoric referent that needs to be resolved .</sentence>
				<definiendum id="0">anaphora resolution handler</definiendum>
				<definiens id="0">takes two inputs : an ordered list of available CS 's and the anaphoric referent that needs to be resolved</definiens>
			</definition>
			<definition id="2">
				<sentence>Recency , for example , uses the following scoring : Sentence ( score , confidence ) contribution of this CS n ( current ) ( 1 , 0.5 ) = 2 n-1 ( 2 , 0.5 ) = 1 n-2 ( 0 , 0.5 ) = 0 These CS 's never evaluate .</sentence>
				<definiendum id="0">Recency</definiendum>
				<definiens id="0">0 These CS 's never evaluate</definiens>
			</definition>
			<definition id="3">
				<sentence>Animaoy , which knows that neuter pronouns refer to inanimate things , while masculine and 4When the confidence rating is 0 , the score is arbitrary given the equation for running score values .</sentence>
				<definiendum id="0">Animaoy</definiendum>
				<definiens id="0">arbitrary given the equation for running score values</definiens>
			</definition>
			<definition id="4">
				<sentence>TEAM : An Experiment in the Design of Transportable Natural-Language Interfaces .</sentence>
				<definiendum id="0">TEAM</definiendum>
				<definiens id="0">An Experiment in the Design of Transportable Natural-Language Interfaces</definiens>
			</definition>
</paper>

		<paper id="1016">
			<definition id="0">
				<sentence>MULTIVOC is shipped as a complete software system which aims to provide a sophisticated driver enabling applications to directly send French spoken text .</sentence>
				<definiendum id="0">MULTIVOC</definiendum>
				<definiens id="0">a complete software system which aims to provide a sophisticated driver enabling applications to directly send French spoken text</definiens>
			</definition>
			<definition id="1">
				<sentence>The software package consists of the kernel of the driver itself and a set of dictionaries used by it .</sentence>
				<definiendum id="0">software package</definiendum>
				<definiens id="0">consists of the kernel of the driver itself and a set of dictionaries used by it</definiens>
			</definition>
			<definition id="2">
				<sentence>For this purpose , MULTIVOC provides 6 differents diphone dictionaries .</sentence>
				<definiendum id="0">MULTIVOC</definiendum>
				<definiens id="0">provides 6 differents diphone dictionaries</definiens>
			</definition>
			<definition id="3">
				<sentence>At the higher level , one can distinguish the following functions : The pre-processing ( or lexical processing ) is a text-to-text transformation aiming to expande some non-worded terms like numbers ( 1987 -- &gt; `` Mille Neuf Cent Quatre-Vingt-Sept '' ) , administrative numbers ( A4/B5 -- &gt; `` A Quatre B Cinq '' ) or acronyms ( CSINN .</sentence>
				<definiendum id="0">pre-processing</definiendum>
				<definiens id="0">a text-to-text transformation aiming to expande some non-worded terms</definiens>
			</definition>
			<definition id="4">
				<sentence>The phonetization process transforms the pre-processed text into phonemes according to predefined rules stored in a user-modifiable base .</sentence>
				<definiendum id="0">phonetization process</definiendum>
				<definiens id="0">transforms the pre-processed text into phonemes according to predefined rules stored in a user-modifiable base</definiens>
			</definition>
			<definition id="5">
				<sentence>The prosody marking process scans the phonetized text and generates appropriate marks to reflect the prosody of the text using built-in rules based on the different punctuation signs and the grammatical type of words .</sentence>
				<definiendum id="0">prosody marking process</definiendum>
				<definiens id="0">scans the phonetized text and generates appropriate marks to reflect the prosody of the text using built-in rules based on the different punctuation signs and the grammatical type of words</definiens>
			</definition>
			<definition id="6">
				<sentence>the character ' ' ( underscore ) denotes a blank character the character T denotes the logical operator OR the character ' &amp; ' denotes the logical operator AND One of the set of rules is dedicated to the determination of the correct liaisons between words .</sentence>
				<definiendum id="0">T</definiendum>
				<definiens id="0">a blank character the character</definiens>
				<definiens id="1">the logical operator OR the character ' &amp; ' denotes the logical operator AND One of the set of rules is dedicated to the determination of the correct liaisons between words</definiens>
			</definition>
			<definition id="7">
				<sentence>where &lt; MS &gt; is the Matching Sequence of characters in the input text โข PROSODY MARKING The synthetic speech produced by mere concatenation of diphones is comprehensible but not very natural .</sentence>
				<definiendum id="0">MS &gt;</definiendum>
			</definition>
			<definition id="8">
				<sentence>Three basic functions are used to express the pitch variation : โข constant : the pitch remains unchanged โข linear interpolation โข exponential variation , namely F ( t ) = F ( to ) * e -p ( t -tO ) where F ( t ) denotes the value of the pitch at the time 't ' , tO is the initial time and p is a constant ( p = 0.68 ) Every macro-melody schema begins at Fdeb , the fundamental frequency of the speaker .</sentence>
				<definiendum id="0">p</definiendum>
				<definiens id="0">the pitch remains unchanged โข linear interpolation โข exponential variation</definiens>
			</definition>
			<definition id="9">
				<sentence>Example : IF a vowel is not in the last syllable of a word AND followed by an unvoiced consonant THEN the pitch of the last LPC frames of the vowel is adjusted in the following manner : let C = \ [ F ( LF 3 ) 7/12 * Fde b \ ] * 100 in F ( LF 2 ) = F ( LF3 ) 10 * C F ( LF1 ) = F ( LF3 ) 15 * C F ( LF ) = F ( LF -3 ) 20 * C At these step in the process , all needed information has been computed ( pitch , duration ) and MULTIVOC generates an LPC structure after having accessed a dictionary of diphones to get the coefficient of the lattice filter for each phoneme .</sentence>
				<definiendum id="0">MULTIVOC</definiendum>
				<definiens id="0">F ( LF3 ) 10 * C F ( LF1 ) = F ( LF3 ) 15 * C F ( LF ) = F ( LF -3 ) 20 * C At these step in the process</definiens>
			</definition>
</paper>

		<paper id="1013">
			<definition id="0">
				<sentence>Truncation-type fixes are classified as either plausible or implausible , based on the extension string , i.e. the string which is chopped off to abbreviate a word .</sentence>
				<definiendum id="0">Truncation-type fixes</definiendum>
				<definiens id="0">either plausible or implausible , based on the extension string</definiens>
			</definition>
			<definition id="1">
				<sentence>Spelling errors which are not handled include extra blank ( incorrect segmentation which splits one word into two ) , more than one letter in error ( e.g. droan for drone } , and misspellings which coincide with a lexical word ( this would be a rare occurrence for an ad hoc abbreviation ) .</sentence>
				<definiendum id="0">incorrect segmentation</definiendum>
				<definiens id="0">splits one word into two ) , more than one letter in error ( e.g. droan for drone } , and misspellings which coincide with a lexical word ( this would be a rare occurrence for an ad hoc abbreviation )</definiens>
			</definition>
			<definition id="2">
				<sentence>TEAM : An Experiment in the Design of Transportable Natural-Language Interfaces .</sentence>
				<definiendum id="0">TEAM</definiendum>
				<definiens id="0">An Experiment in the Design of Transportable Natural-Language Interfaces</definiens>
			</definition>
			<definition id="3">
				<sentence>The NOMAD System : Expectation-Based Detection and Correction of Syntactically and Semantically Ill-Formed Text .</sentence>
				<definiendum id="0">NOMAD System</definiendum>
			</definition>
			<definition id="4">
				<sentence>FOUL-UP : A Program that Figures Out Meanings of Words from Context .</sentence>
				<definiendum id="0">FOUL-UP</definiendum>
				<definiens id="0">A Program that Figures Out Meanings of Words from Context</definiens>
			</definition>
</paper>

		<paper id="1028">
			<definition id="0">
				<sentence>In large databases with diverse sources of names , other name conventions may also need to be handled , such as the use of both matronymic and patronymic in Spanish ( e.g. , Maria Hernandez Garcia ) or the inverted order of Chinese names ( e.g. , Li-Fang-Kuei , where Li is the surname ) .</sentence>
				<definiendum id="0">Li</definiendum>
			</definition>
			<definition id="1">
				<sentence>The general form of the rules is lhs -- &gt; rhs / leftContext rightContext where the left-hand-side ( lhs ) is a character string and the right-hand-side is a string with a possible 207 Table 6 .</sentence>
				<definiendum id="0">right-hand-side</definiendum>
				<definiens id="0">a character string and the</definiens>
			</definition>
</paper>

		<paper id="1029">
			<definition id="0">
				<sentence>But even when the Event Recogniser passes a description of a traffic incident to the Tactical Inferencer , this will not necessarily result in a broadcast .</sentence>
				<definiendum id="0">Event Recogniser</definiendum>
				<definiendum id="1">Inferencer</definiendum>
				<definiens id="0">passes a description of a traffic incident to the Tactical</definiens>
			</definition>
			<definition id="1">
				<sentence>This form of expectation-driven parsing differs from that used in earlier script-based systems such as MARGIE \ [ Schank 1975\ ] , ELI \ [ Riesbeck 1978\ ] and FRUMP in four ways : First , the interesting-corner parser uses an active chart to consider bottom-up all interesting interpretations that might be given to an input message , rather than proceeding left to right and filtering out later ( right ) candidate interpretations on the basis of earlier ( left ) context .</sentence>
				<definiendum id="0">interesting-corner parser</definiendum>
			</definition>
			<definition id="2">
				<sentence>The interesting-corner parser implements an indexed-corner chart parser , with the addition of an agenda control mechanism and an indexing principle for grammar rules .</sentence>
				<definiendum id="0">interesting-corner parser</definiendum>
				<definiens id="0">implements an indexed-corner chart parser , with the addition of an agenda control mechanism and an indexing principle for grammar rules</definiens>
			</definition>
			<definition id="3">
				<sentence>Extension unification allows one of the structures to be unified ( the target ) to be an extension of the other ( the pattern ) , but not vice-versa .</sentence>
				<definiendum id="0">Extension unification</definiendum>
				<definiens id="0">the pattern ) , but not vice-versa</definiens>
			</definition>
</paper>

		<paper id="1021">
			<definition id="0">
				<sentence>`` Augmented phrase structure grammars '' in Nash-Webber and Schank , eds. , Theoretical Issues in Natural Language Processing .</sentence>
				<definiendum id="0">Augmented phrase structure grammars</definiendum>
			</definition>
			<definition id="1">
				<sentence>`` PEG : A broadcoverage computational syntax of Engiish . ''</sentence>
				<definiendum id="0">PEG</definiendum>
			</definition>
</paper>

		<paper id="1015">
			<definition id="0">
				<sentence>LINGUISTIC INTERFACE COMPONENT The LIC consists of several subcomponents that apply various grammars and lexicons to yield a domainand application-specific interpretation of the input .</sentence>
				<definiendum id="0">LINGUISTIC INTERFACE COMPONENT The LIC</definiendum>
				<definiens id="0">consists of several subcomponents that apply various grammars and lexicons to yield a domainand application-specific interpretation of the input</definiens>
			</definition>
			<definition id="1">
				<sentence>LEXICAL TRANSLATION ISSUES Lexical translation is the process of substituting one or more predicates of a domain model for one or more English lexical items .</sentence>
				<definiendum id="0">LEXICAL TRANSLATION ISSUES Lexical translation</definiendum>
				<definiens id="0">the process of substituting one or more predicates of a domain model for one or more English lexical items</definiens>
			</definition>
			<definition id="2">
				<sentence>The system-specific semantics ( i.e. , the problem of matching inputs to the appropriate set of relevant hypotheses ) has an effect on the structure of the domain model and the problem of lexical translation .</sentence>
				<definiendum id="0">system-specific semantics</definiendum>
				<definiens id="0">the problem of matching inputs to the appropriate set of relevant hypotheses</definiens>
			</definition>
			<definition id="3">
				<sentence>The system semantics determine the degree to which synonymous or only nearly synonymous terms should be distinguished .</sentence>
				<definiendum id="0">system semantics</definiendum>
				<definiens id="0">determine the degree to which synonymous or only nearly synonymous terms should be distinguished</definiens>
			</definition>
			<definition id="4">
				<sentence>HYPOTHESIS MATCHING ISSUES The problem of matching hypotheses to the output of the semantic interpretation component introduces its own set of problems .</sentence>
				<definiendum id="0">HYPOTHESIS MATCHING</definiendum>
				<definiens id="0">ISSUES The problem of matching hypotheses to the output of the semantic interpretation component introduces its own set of problems</definiens>
			</definition>
</paper>

		<paper id="1010">
			<definition id="0">
				<sentence>BBN uses a unification grammar in place of the procedural restrictions of our system .</sentence>
				<definiendum id="0">BBN</definiendum>
			</definition>
			<definition id="1">
				<sentence>ZLISP supports several independent processes , and provides both global variables ( shared by all processes ) and variables which are local to each process .</sentence>
				<definiendum id="0">ZLISP</definiendum>
				<definiens id="0">supports several independent processes , and provides both global variables ( shared by all processes ) and variables which are local to each process</definiens>
			</definition>
			<definition id="2">
				<sentence>PROTEUS uses augmented context-free grammars context-free grammars augmented by procedural restrictions which enforce syntactic and semantic constraints .</sentence>
				<definiendum id="0">PROTEUS</definiendum>
				<definiens id="0">uses augmented context-free grammars context-free grammars augmented by procedural restrictions which enforce syntactic and semantic constraints</definiens>
			</definition>
			<definition id="3">
				<sentence>If A W X Y Z is a production , an active edge from node nl to n2 labeled by A -+ W X .</sentence>
				<definiendum id="0">W X Y Z</definiendum>
				<definiens id="0">a production , an active edge from node nl to n2 labeled by A -+ W X</definiens>
			</definition>
</paper>

		<paper id="1027">
			<definition id="0">
				<sentence>Introduction CRITIQUE is a large-scale natural language text processing system that identifies grammar and style errors in English text .</sentence>
				<definiendum id="0">CRITIQUE</definiendum>
			</definition>
			<definition id="1">
				<sentence>CRITIQUE is an extension of the EPISTLE project which began in 1980 ( Heidom , et al , 1982 ) .</sentence>
				<definiendum id="0">CRITIQUE</definiendum>
			</definition>
			<definition id="2">
				<sentence>PEG ( the PLNLP English Grammar ) has been written by Karen Jensen , and the style rules were written by Yael Ravin .</sentence>
				<definiendum id="0">PEG</definiendum>
				<definiens id="0">the PLNLP English Grammar</definiens>
			</definition>
			<definition id="3">
				<sentence>Today , CRITIQUE is being tested in a variety of applications ranging from office correspondence and technical documentation to student essays .</sentence>
				<definiendum id="0">CRITIQUE</definiendum>
				<definiens id="0">being tested in a variety of applications ranging from office correspondence and technical documentation to student essays</definiens>
			</definition>
			<definition id="4">
				<sentence>CRITIQUE also generates statistical information about documents based on the lexical and syntactic analyses .</sentence>
				<definiendum id="0">CRITIQUE</definiendum>
				<definiens id="0">generates statistical information about documents based on the lexical and syntactic analyses</definiens>
			</definition>
			<definition id="5">
				<sentence>CRITIQUE has an interactive processing mode that is fully integrated with a text editor , allowing users to update the text as needed .</sentence>
				<definiendum id="0">CRITIQUE</definiendum>
			</definition>
			<definition id="6">
				<sentence>There is a wide range of ill-formed text to deal with , originating from classes in composition , business writing , technical writing , and ESI , ( English as a Second language ) .</sentence>
				<definiendum id="0">ESI</definiendum>
				<definiens id="0">a wide range of ill-formed text to deal with , originating from classes in composition , business writing , technical writing , and</definiens>
				<definiens id="1">a Second language )</definiens>
			</definition>
			<definition id="7">
				<sentence>PLNLP supports the writing of procedures as well as rules .</sentence>
				<definiendum id="0">PLNLP</definiendum>
				<definiens id="0">supports the writing of procedures as well as rules</definiens>
			</definition>
			<definition id="8">
				<sentence>CRITIQUE uses the PL.8 version , which can analyze a sentence of about 15-20 words in one CPU second on an IBM 3081 computer .</sentence>
				<definiendum id="0">CRITIQUE</definiendum>
				<definiens id="0">uses the PL.8 version , which can analyze a sentence of about 15-20 words in one CPU second on an IBM 3081 computer</definiens>
			</definition>
			<definition id="9">
				<sentence>In cases where CRITIQUE suggests a corrected form of a word , that form is now used as the error indicator .</sentence>
				<definiendum id="0">CRITIQUE</definiendum>
				<definiens id="0">suggests a corrected form of a word</definiens>
			</definition>
			<definition id="10">
				<sentence>CRITIQUE exemplifies a framework for the development of broad-coverage , large-scale natural language text processing systems .</sentence>
				<definiendum id="0">CRITIQUE</definiendum>
				<definiens id="0">exemplifies a framework for the development of broad-coverage , large-scale natural language text processing systems</definiens>
			</definition>
</paper>

		<paper id="1032">
			<definition id="0">
				<sentence>Ambiguity is a problem in any natural language processing system .</sentence>
				<definiendum id="0">Ambiguity</definiendum>
			</definition>
			<definition id="1">
				<sentence>Suppose we take yesterday to be a predicate that applies to events and specifies something about their times of occurrence , and suppose el is the leaving event and e2 the saying event .</sentence>
				<definiendum id="0">suppose el</definiendum>
				<definiens id="0">a predicate that applies to events and specifies something about their times of occurrence</definiens>
			</definition>
			<definition id="2">
				<sentence>In the other cases , however , such as ( nonpreposed ) PPs , adverbials , and relative clauses , DIALOGIC produces an exhaustive ( and sometimes exhausting ) list of the different possible structures .</sentence>
				<definiendum id="0">DIALOGIC</definiendum>
				<definiens id="0">produces an exhaustive ( and sometimes exhausting ) list of the different possible structures</definiens>
			</definition>
			<definition id="3">
				<sentence>The logical forms ( LFs ) that are produced from each of the parse trees are given to an attachment-finding program which adds , or makes explicit , information about possible attachment sites .</sentence>
				<definiendum id="0">LFs</definiendum>
				<definiens id="0">given to an attachment-finding program which adds , or makes explicit , information about possible attachment sites</definiens>
			</definition>
			<definition id="4">
				<sentence>One of sentence ( 4 ) 's LFs before attachment-finding is \ [ xl I John ( xl ) l , in ( x~ , \ [ x31 pa~k ( x3 ) ^ with ( xs , The same LF after attachment-finding is pa~t ( \ [ e , I ~ee ' ( ~l , \ [ x~ I John ( x~ ) \ ] , \ [ ~ I man ( ~ ) ^ \ [ ~ I p-~k ( ~ ) ^ with ( \ [ y2 1 92=x3 V y2=x2 V ~2 : el\ ] , \ [ ~ , I t~t~cop~ ( x , ) \ ] ) \ ] ) \ ] ) \ ] ) A paraphrase of the latter LF in English would be something like this : There is an event el that happened in the past ; it is a seeing event by xl who is John , of x2 who is the man ; something yl is in the park , and that something is either the man or the seeing event ; something Y2 is with a telescope , and that something is the park , the man , or the seeing event .</sentence>
				<definiendum id="0">something yl</definiendum>
				<definiens id="0">V y2=x2 V ~2 : el\ ] , \ [ ~ , I t~t~cop~ ( x , ) \ ] ) \ ] ) \ ] ) \ ] ) A paraphrase of the latter LF in English</definiens>
			</definition>
			<definition id="5">
				<sentence>The neutral logical form would include ... A andn ( sl , s2 , sa ) A typelt ( xl , sl ) A typelt ( x2 , s2 ) A man ( x2 ) A typelt ( xa , s3 ) A woman ( za ) A intelligent ( y ) A \ [ y = xl Y y = x2\ ] That is , there is a set sl , with typical element zl , which is the union of sets s2 and sa , where the typical element x2 of s2 is a man and the typical element xa of sa is a woman , and something y is intelligent , where y is either the typical element xl of s~ ( the typical person ) or the typical element x= of s2 ( the typical man ) .</sentence>
				<definiendum id="0">A man</definiendum>
				<definiendum id="1">sa</definiendum>
				<definiendum id="2">something y</definiendum>
				<definiendum id="3">y</definiendum>
				<definiens id="0">a man and the typical element xa of</definiens>
				<definiens id="1">the typical person ) or the typical element x= of s2 ( the typical man )</definiens>
			</definition>
			<definition id="6">
				<sentence>The representation for oil pump and filter would include ... A andn ( s , p , f ) A typelt ( z , s ) A pump ( p ) ^filter ( f ) n oil ( o ) A nn ( o , y ) ^\ [ y=p v y=xl That is , there is a set s , with typical element x , composed of the elements p and f , where p is a pump and f is a filter , and there is some implicit relation nn between some oil o and y , where y is either the pump p or the typical element x or s. ( In the latter case , the axiom in the TACITUS system 's knowledge base , 5The reader may with some justification feel that the term `` typical element '' is ill-chosen .</sentence>
				<definiendum id="0">p</definiendum>
				<definiendum id="1">f</definiendum>
				<definiendum id="2">y</definiendum>
				<definiens id="0">s , p , f ) A typelt ( z , s ) A pump ( p ) ^filter ( f</definiens>
				<definiens id="1">a set s , with typical element x , composed of the elements p and f</definiens>
				<definiens id="2">the latter case , the axiom in the TACITUS system 's knowledge base</definiens>
			</definition>
			<definition id="7">
				<sentence>~ For example , for the prepositional phrase attachment problem , an informal study of several hundred examples suggests that a very good heuristic is obtained by using the following three principles : ( 1 ) favor right association ; ( 2 ) override right association if ( a ) the PP is temporal and the second nearest attachment site is a verb or event nominalization , or ( b ) if the preposition typically signals an argument of the second nearest attachment site ( verb or relational noun ) and not of the nearest attachment site ; ( 3 ) override right association if a comma ( or comma intonation ) separates the PP from the nearest attachment site .</sentence>
				<definiendum id="0">PP</definiendum>
				<definiens id="0">temporal and the second nearest attachment site is a verb or event nominalization</definiens>
				<definiens id="1">the nearest attachment site ; ( 3 ) override right association if a comma ( or comma intonation ) separates the PP from the nearest attachment site</definiens>
			</definition>
			<definition id="8">
				<sentence>Logical Form before Attachment-Finding : ( ( PAST ( SELF Ell ) ( SUBJECT ( E3 ( SEE ( SELF EJ ) ( SUBJECT ( XI ( JOHN ( SELF E2 ) ( SUBJECT XI ) ) ) ) ( OBJECT ( X4 ( MAN ( SELF EL ) ( SUBJECT X4 ) ) ( WITH ( SELF E6 ) ( PP-SUBJECT X4 ) ; &lt; -\ [ with\ ] modifies \ [ man\ ] ( OBJECT ( X7 ( TELESCOPE ( SELF E8 ) ( SUBJECT X7 ) ) ( THE ( SELF E9 ) ( SUBJECT X7 ) ) ( NOT= ( NP XT ) ( ANTES ( X4 ) ) ) ) ) ) ( THE ( SELF ElO ) ( SUBJECT X4 ) ) ( NOT= ( NP X4 ) ( ANTES ( XI ) ) ) ) ) ) ) ) ) ) Logical Form after Attachment-Finding : ( ( PAST ( SELF Ell ) ( SUBJECT ( E3 ( SEE ( SELF EJ ) ( SUBJECT ( Xl ( JOHN ( SELF E2 ) ( SUBJECT Xl ) ) ) ) ( OBJECT ( X4 ( MAN ( SELF E5 ) ( SUBJECT X4 ) ) ( WITH ( SELF E6 ) ( SUBJECT ( YI4 ( ?</sentence>
				<definiendum id="0">SUBJECT ( XI</definiendum>
				<definiendum id="1">OBJECT</definiendum>
				<definiens id="0">SELF E8 ) ( SUBJECT X7 ) ) ( THE ( SELF E9 ) ( SUBJECT X7 ) ) ( NOT= ( NP XT ) ( ANTES ( X4 ) ) ) ) ) ) ( THE ( SELF ElO ) ( SUBJECT X4 ) ) ( NOT= ( NP X4 ) ( ANTES ( XI ) ) ) ) ) ) ) ) ) ) Logical Form after Attachment-Finding</definiens>
			</definition>
			<definition id="9">
				<sentence>Grosz , Barbara , Norman Haas , Gary Hendrix , Jerry Hobbs , Paul Martin , Robert Moore , Jane Robinson , Stanley Rosenschein ( 1982 ) `` DIALOGIC : A Core Natural-Language Processing System '' , Technical Note 270 , Artificial Intelligence Center , SRI International .</sentence>
				<definiendum id="0">DIALOGIC</definiendum>
				<definiens id="0">A Core Natural-Language Processing System ''</definiens>
			</definition>
</paper>

	</volume>
