<?xml version="1.0" encoding="UTF-8"?>
	<volume id="N03">

		<paper id="4001">
</paper>

		<paper id="1025">
			<definition id="0">
				<sentence>Text categorization concerns the problem of automatically assigning given text passages ( paragraphs or documents ) into predefined categories .</sentence>
				<definiendum id="0">Text categorization</definiendum>
				<definiens id="0">concerns the problem of automatically assigning given text passages ( paragraphs or documents</definiens>
			</definition>
			<definition id="1">
				<sentence>Although one could attempt to use simple n-gram models to capture long range dependencies in language , attempting to do so directly immediately creates sparse data problems : Using grams of length up to n entails estimating the probability of Wn events , where W is the size of the word vocabulary .</sentence>
				<definiendum id="0">W</definiendum>
				<definiens id="0">range dependencies in language , attempting to do so directly immediately creates sparse data problems : Using grams of length up to n entails estimating the probability of Wn events</definiens>
				<definiens id="1">the size of the word vocabulary</definiens>
			</definition>
			<definition id="2">
				<sentence>The only difference is that the character vocabulary is always much smaller than the word vocabulary , which means that one can normally use a much higher order , n , in a character-level n-gram model ( although the text spanned by a character model is still usually less than that spanned by a word model ) .</sentence>
				<definiendum id="0">n</definiendum>
				<definiens id="0">although the text spanned by a character model is still usually less than that spanned by a word model</definiens>
			</definition>
			<definition id="3">
				<sentence>Here , Pr ( Djc ) is the likelihood of D under category c , which can be computed by Eq .</sentence>
				<definiendum id="0">Pr ( Djc )</definiendum>
			</definition>
			<definition id="4">
				<sentence>The order n is a key factor in n-gram language models .</sentence>
				<definiendum id="0">order n</definiendum>
			</definition>
			<definition id="5">
				<sentence>The PPM model is a weighted linear interpolation n-gram models and has been set as a benchmark in text compression for decades .</sentence>
				<definiendum id="0">PPM model</definiendum>
				<definiens id="0">a weighted linear interpolation n-gram models and has been set as a benchmark in text compression for decades</definiens>
			</definition>
</paper>

		<paper id="4016">
</paper>

		<paper id="2009">
</paper>

		<paper id="2019">
			<definition id="0">
				<sentence>Link Recall is the percentage of human generated links tuples ( 723 in all ) that are correctly identified by machine learned rules .</sentence>
				<definiendum id="0">Link Recall</definiendum>
				<definiens id="0">the percentage of human generated links tuples ( 723 in all ) that are correctly identified by machine learned rules</definiens>
			</definition>
</paper>

		<paper id="5008">
</paper>

		<paper id="1002">
			<definition id="0">
				<sentence>Isozaki ( Isozaki and Kazawa , 2002 ) controls the parameters of a statistical morphological analyzer so as to produce more fine-grained output .</sentence>
				<definiendum id="0">Isozaki</definiendum>
				<definiens id="0">controls the parameters of a statistical morphological analyzer so as to produce more fine-grained output</definiens>
			</definition>
			<definition id="1">
				<sentence>Each character receives annotations with character type and multiple POS information of the words found by a morphological analyzer .</sentence>
				<definiendum id="0">character</definiendum>
			</definition>
			<definition id="2">
				<sentence>Morphological/POS analysis can be defined as the determination of POS tag sequence a0 once a segmentation into a word sequence a1 is given .</sentence>
				<definiendum id="0">Morphological/POS analysis</definiendum>
				<definiens id="0">the determination of POS tag sequence a0 once a segmentation into a word sequence a1 is given</definiens>
			</definition>
			<definition id="3">
				<sentence>From the output of redundant analysis , each character receives a number of features .</sentence>
				<definiendum id="0">character</definiendum>
				<definiens id="0">receives a number of features</definiens>
			</definition>
			<definition id="4">
				<sentence>Suppose we have a set of training data for a binary class problem : a17a29a28a31a30a33a32a35a34a22a30 a20 a32 a5a7a5a6a5 a32a7a17a29a28a37a36a38a32a39a34a5a36 a20 , where a28a37a40a38a41a43a42a45a44 is a feature vector of the i-th sample in the training data and a34a46a40a31a41a48a47a25a49a19a50a5a32a52a51a53a50a13a54 is the label of the sample .</sentence>
				<definiendum id="0">a28a37a40a38a41a43a42a45a44</definiendum>
				<definiendum id="1">a34a46a40a31a41a48a47a25a49a19a50a5a32a52a51a53a50a13a54</definiendum>
				<definiens id="0">a feature vector of the i-th sample in the training data</definiens>
				<definiens id="1">the label of the sample</definiens>
			</definition>
			<definition id="5">
				<sentence>An support vector machine classifier gives the decision function a55 a17a29a28 a20a56a2a58a57a23a59a60a6a62a61 a17 a6 a17a29a28 a20a39a20 for an input vector a28 where a6 a17a63a28 a20a64a2 a65 a66a68a67a70a69a5a71a73a72a75a74 a40 a34 a40a63a76 a17a29a28a77a32a79a78 a40 a20 a49a81a80 a5 a55 a17a29a28 a20a64a2 a49a19a50 means that a28 is a positive member , a55 a17a29a28 a20a82a2 a51a53a50 means that a28 is a negative member .</sentence>
				<definiendum id="0">support vector machine classifier</definiendum>
				<definiens id="0">gives the decision function a55 a17a29a28 a20a56a2a58a57a23a59a60a6a62a61 a17 a6 a17a29a28 a20a39a20 for an input vector a28 where a6 a17a63a28 a20a64a2 a65 a66a68a67a70a69a5a71a73a72a75a74 a40 a34 a40a63a76 a17a29a28a77a32a79a78 a40 a20 a49a81a80 a5 a55 a17a29a28 a20a64a2 a49a19a50 means that a28 is a positive member</definiens>
				<definiens id="1">a negative member</definiens>
			</definition>
</paper>

		<paper id="3006">
			<definition id="0">
				<sentence>In its simplest definition , a projective DG is a binary version ( except for valency , see 2.2 ) of a constituent grammar which only knows lexical items , which entails that • for every mother node , the mother node and exactly one of its daughters , the so-called head , are isomorphic • projection is deterministic , endocentric and can thus not fail , which gives DG a robustness advantage • equivalent constituency CFG trees can be derived • it is in Chomsky Normal Form ( CNF ) , the efficient CYK parsing algorithm can thus be used Any DG has an equivalent constituency counterpart ( Covington , 1994 ) .</sentence>
				<definiendum id="0">projective DG</definiendum>
				<definiens id="0">a binary version ( except for valency , see 2.2 ) of a constituent grammar which only knows lexical items , which entails that • for every mother node , the mother node and exactly one of its daughters</definiens>
			</definition>
			<definition id="1">
				<sentence>Traditional constituency analyses such as those in the Treebank contain many discontinuous constituents , also known as long-distance dependencies , expressed by the use of structure-copying methods .</sentence>
				<definiendum id="0">Traditional constituency</definiendum>
				<definiens id="0">analyses such as those in the Treebank contain many discontinuous constituents , also known as long-distance dependencies , expressed by the use of structure-copying methods</definiens>
			</definition>
			<definition id="2">
				<sentence>p ( modpart|a , b ) = ( 4 ) # ( modpart , right , a , b ) + # ( psubj , left , a , b ) # ( modpart , right , a , b ) + # ( psubj , left , a , b ) + # ( asubj , left , a , b ) if &gt; 0 , else # ( modpart , right , ˚a , ˚b ) + # ( psubj , left , ˚a , ˚b ) # ( modpart , right , ˚a , ˚b ) + # ( psubj , left , ˚a , ˚b ) + # ( asubj , left , ˚a , ˚b ) if &gt; 0 , else # ( modpart , right , b ) + # ( psubj , left , b ) # ( modpart , right , b ) + # ( psubj , left , b ) + # ( asubj , left , b ) if &gt; 0 , else # ( modpart , right , a ) + # ( psubj , left , a ) # ( modpart , right , a ) + # ( psubj , left , a ) + # ( asubj , left , a ) As the last backoff , a low non-zero probability is assigned .</sentence>
				<definiendum id="0">p</definiendum>
				<definiens id="0">a ) + # ( psubj , left , a ) + # ( asubj , left</definiens>
			</definition>
			<definition id="3">
				<sentence>The parser uses the CYK algorithm , which has parsing complexity of O ( n3 ) , where n is the number of words in a word-based , but only chunks in a headof-chunk-based model .</sentence>
				<definiendum id="0">n</definiendum>
				<definiens id="0">the number of words in a word-based , but only chunks in a headof-chunk-based model</definiens>
			</definition>
			<definition id="4">
				<sentence>For example , since no PP-interaction model such as PCFG rules for NP-attached PPs exists yet , the current grammar does not allow a NP to take several PPs , which affects the analysis of relational nouns .</sentence>
				<definiendum id="0">PPs</definiendum>
			</definition>
</paper>

		<paper id="2005">
</paper>

		<paper id="3008">
			<definition id="0">
				<sentence>The rank-score of a term a137 occurring a98 times is a138 a117 a104a81a137a12a107a53a2 a100 a133 a139 a111a128a8 a48 a140a22a141a63a142 a104a35a137 a139 a107 a10 ( 3 ) where a137 a139 is the ranking of the a0 th instance of term a137 .</sentence>
				<definiendum id="0">a137 a139</definiendum>
				<definiens id="0">the ranking of the a0 th instance of term a137</definiens>
			</definition>
</paper>

		<paper id="2016">
			<definition id="0">
				<sentence>In the context of machine translation , the term cognates denotes words in different languages that are similar in their orthographic or phonetic form and are possible translations of each other .</sentence>
				<definiendum id="0">term cognates</definiendum>
			</definition>
			<definition id="1">
				<sentence>Practically all bitexts ( bilingual parallel corpora ) contain some kind of cognates .</sentence>
				<definiendum id="0">Practically all bitexts</definiendum>
				<definiens id="0">bilingual parallel corpora ) contain some kind of cognates</definiens>
			</definition>
			<definition id="2">
				<sentence>Dice’s coefficient is defined as the ratio of the number of shared character bigrams to the total number of bigrams in both words .</sentence>
				<definiendum id="0">Dice’s coefficient</definiendum>
				<definiens id="0">the ratio of the number of shared character bigrams to the total number of bigrams in both words</definiens>
			</definition>
			<definition id="3">
				<sentence>The Longest Common Subsequence Ratio ( LCSR ) of two words is computed by dividing the length of their longest common subsequence by the length of the longer word .</sentence>
				<definiendum id="0">Longest Common Subsequence Ratio ( LCSR</definiendum>
				<definiens id="0">computed by dividing the length of their longest common subsequence by the length of the longer word</definiens>
			</definition>
			<definition id="4">
				<sentence>For the evaluation of translation quality , we used the BLEU metric ( Papineni et al. , 2002 ) , which measures the n-gram overlap between the translated output and one or more reference translations .</sentence>
				<definiendum id="0">BLEU metric</definiendum>
				<definiens id="0">measures the n-gram overlap between the translated output and one or more reference translations</definiens>
			</definition>
			<definition id="5">
				<sentence>Europarl is a tokenized and sentence-aligned multilingual corpus extracted from the Proceedings of the European 0 1 2 3 4 5 6 BLEU score Duplication factor `` Simard '' `` DICE '' `` LCSR '' Figure 1 : BLEU scores as a function of the duplication factor for five methods of cognates identification averaged over nine language pairs .</sentence>
				<definiendum id="0">Europarl</definiendum>
			</definition>
</paper>

		<paper id="5009">
</paper>

		<paper id="1018">
			<definition id="0">
				<sentence>Assuming independence of the individual steps , the complete model estimates joint probability a2a4a3 a0 a5 a37 a5 a7 a5 a0 a5 a1 a7 a10 a2a4a3 a0 a5 a37 a9 a7 a5 a0 a5a17a1 a7 a2a4a3 a7 a9 a0 a5 a1 a7 a2a4a3 a0a4a9a1 a7 a2a4a3 a1 a7 a2a4a3 a0 a5a17a1 a7 can be computed by summing over all possible a37 a5 a7 a5 a0 that can transform a1 to a0 : a2a4a3 a0 a5 a1 a7 a10a1a0 a41a3a2a23 a2a4 a2a4a3 a0 a5 a37 a5 a7 a5 a0 a5a17a1 a7 a14 We have implemented the generative model using a weighted finite state model ( FSM ) framework , which provides a strong theoretical foundation , ease of integration for different components , and reduced implementation time thanks to available toolkits such as the AT &amp; T FSM Toolkit ( Mohri et al. , 1998 ) .</sentence>
				<definiendum id="0">framework</definiendum>
			</definition>
			<definition id="1">
				<sentence>The language model ( LM ) is either ( word ) unigram or trigram .</sentence>
				<definiendum id="0">LM )</definiendum>
				<definiens id="0">either ( word ) unigram or trigram</definiens>
			</definition>
			<definition id="2">
				<sentence>For each of those groups , there are a25 a3a2a1a3 possible correct word sequences where a40 is the number of tokens in that group , a4 is the maximum number of words that can merge together , and a25 is the vocabulary size .</sentence>
				<definiendum id="0">a40</definiendum>
				<definiendum id="1">a4</definiendum>
				<definiendum id="2">a25</definiendum>
				<definiens id="0">the number of tokens in that group ,</definiens>
				<definiens id="1">the maximum number of words that can merge together , and</definiens>
				<definiens id="2">the vocabulary size</definiens>
			</definition>
</paper>

		<paper id="3003">
			<definition id="0">
				<sentence>The models consist of constraint satisfaction problem graphs that have been derived from the results of a corpus analysis .</sentence>
				<definiendum id="0">models</definiendum>
				<definiens id="0">consist of constraint satisfaction problem graphs that have been derived from the results of a corpus analysis</definiens>
			</definition>
			<definition id="1">
				<sentence>Generator for Individual Reading Levels ( GIRL ) is a Natural Language Generation ( NLG ) system that generates feedback reports for adults during a web-based literacy assessment .</sentence>
				<definiendum id="0">Individual Reading Levels ( GIRL</definiendum>
				<definiens id="0">a Natural Language Generation ( NLG ) system that generates feedback reports for adults during a web-based literacy assessment</definiens>
			</definition>
			<definition id="2">
				<sentence>R2 is a condition relation with two text span daughters : S3 filling the ‘condition’ slot and S2 the ‘consequent’ slot .</sentence>
				<definiendum id="0">R2</definiendum>
				<definiens id="0">a condition relation with two text span daughters : S3 filling the ‘condition’ slot</definiens>
			</definition>
			<definition id="3">
				<sentence>The task of GIRL’s microplanner is to decide on the ordering of the daughters , how they should be packed into sentences ( aggregation ) , whether there should be punctuation between the daughters , whether discourse cue phrases should be present and , if so , which ones and where they should be placed .</sentence>
				<definiendum id="0">GIRL’s microplanner</definiendum>
				<definiens id="0">ones and where they should be placed</definiens>
			</definition>
			<definition id="4">
				<sentence>Here , L1 is ten words ( this includes the whole of the condition daughter ) , L2 is five words , O is concession-statement , Ps is after the statement , P is a full stop and C is “though” .</sentence>
				<definiendum id="0">L2</definiendum>
				<definiendum id="1">O</definiendum>
				<definiendum id="2">Ps</definiendum>
				<definiendum id="3">P</definiendum>
				<definiendum id="4">C</definiendum>
				<definiens id="0">a full stop and</definiens>
			</definition>
			<definition id="5">
				<sentence>The CSP Solver ( Torrens 2002 ) then uses simple backtracking search to find all solutions for the relation .</sentence>
				<definiendum id="0">CSP Solver</definiendum>
				<definiens id="0">uses simple backtracking search to find all solutions for the relation</definiens>
			</definition>
			<definition id="6">
				<sentence>Ellipsis is one way that conciseness can be achieved during aggregation .</sentence>
				<definiendum id="0">Ellipsis</definiendum>
				<definiens id="0">one way that conciseness can be achieved during aggregation</definiens>
			</definition>
</paper>

		<paper id="2034">
			<definition id="0">
				<sentence>We have coupled the parser LCFLEX with a lexicon and ontology derived from two lexical resources , VerbNet for verbs and CoreLex for nouns .</sentence>
				<definiendum id="0">VerbNet</definiendum>
			</definition>
			<definition id="1">
				<sentence>More ( : morphology position : syntax ( *or* ( ( cat n ) ( root position ) ( agr 3s ) ( semtag ( *or* lap1 lap2 ) ) ) ( ( cat vlex ) ( root position ) ( vform bare ) ( subcat ( *or* np np-advp np-pp ) ) ( semtag put ) ) ) : semantics ( put ( # 3Cput-9.1 # 3E ( subj agent ) ( obj patient ) ( modifier destination ) ( pred destination ) ) ) ( lap1 ( # 3Clap1 # 3E ) ) ( lap2 ( # 3Clap2 # 3E ) ) ) Figure 1 : The entry for position in the LCFLEX lexicon CLASS : put-9.1 PARENT : MEMBERS : arrange immerse lodge mount place position put set situate sling THEMATIC ROLES : Agt Pat Dest SELECTIONAL RESTRICTIONS : Agt [ +animate ] Pat [ +concrete ] Dest [ +location -region ] FRAMES : Transitive with Locative PP Agt V Pat Prep [ +loc ] Dest cause ( Agt , E0 ) ^ motion ( during ( E0 ) , Pat ) ^ : Located-in ( start ( E0 ) , Pat , Dest ) ^ Located-in ( end ( E0 ) , Pat , Dest ) Transitive with Locative Adverb Agt V Pat Dest [ +adv-loc ] cause ( Agt , E0 ) ^ motion ( during ( E0 ) , Pat ) ^ : Located-in ( start ( E0 ) , Pat , Dest ) ^ Located-in ( end ( E0 ) , Pat , Dest ) Figure 2 : The class put-9.1 from VerbNet over , we also show that two lexical resources that focus on verbs and nouns can be successfully integrated .</sentence>
				<definiendum id="0">Agt , E0 ) ^ motion</definiendum>
				<definiens id="0">Located-in ( start ( E0 ) , Pat , Dest ) ^ Located-in ( end ( E0 ) , Pat , Dest ) Transitive with Locative Adverb Agt V Pat Dest [ +adv-loc ] cause ( Agt , E0 ) ^ motion ( during ( E0 ) , Pat ) ^ : Located-in ( start ( E0 ) , Pat , Dest ) ^ Located-in ( end</definiens>
			</definition>
</paper>

		<paper id="2021">
</paper>

		<paper id="1001">
			<definition id="0">
				<sentence>Following Schapire and Singer ( 2000 ) , the confidence level , for rejection purposes , assigned to a prediction is taken to be the difference between the scores assigned by BoosTexter to the highest ranked action ( the predicted action ) and the next highest ranked action .</sentence>
				<definiendum id="0">confidence level</definiendum>
				<definiens id="0">the predicted action</definiens>
			</definition>
</paper>

		<paper id="2022">
			<definition id="0">
				<sentence>SE involves finding predicate-argument structures in open domains and is a crucial semantic parsing step in a text understanding task .</sentence>
				<definiendum id="0">SE</definiendum>
				<definiens id="0">involves finding predicate-argument structures in open domains and is a crucial semantic parsing step in a text understanding task</definiens>
			</definition>
			<definition id="1">
				<sentence>For example the message between nodes 1 and 0 in the Figure 1 can be computed as : ∑ ∏ ∈ ∝ 1 0\ ) 1 ( 1101000,1 ) ( ) | ( ) ( ) ( N Nk k NmNNPNPNm We should note that based on the WordNet’s hypernym relation , the conditional relevance probability of each parent node ( given any child node ) is equal to 1 .</sentence>
				<definiendum id="0">1101000,1 ) ( ) | ( ) ( )</definiendum>
				<definiens id="0">the conditional relevance probability of each parent node ( given any child node</definiens>
			</definition>
			<definition id="2">
				<sentence>gen rel O ONl = ) ( Re Using this relevance metric , we evaluated all of the WordNet nodes for the training data ( found in the previous step ) and re-ranked and picked the top ‘m’ relevant nodes ( m=5 for our reported experiment ) and added them to the previous set of WordNet nodes .</sentence>
				<definiendum id="0">WordNet</definiendum>
				<definiens id="0">nodes for the training data ( found in the previous step</definiens>
			</definition>
			<definition id="3">
				<sentence>For our initial experiments , we assume that each frame is an independent model and frame assignment is the task of selecting the Maximum A Posteriori ( MAP ) frame given the input and the priors of the frame .</sentence>
				<definiendum id="0">frame assignment</definiendum>
				<definiens id="0">the task of selecting the Maximum A Posteriori ( MAP ) frame given the input and the priors of the frame</definiens>
			</definition>
			<definition id="4">
				<sentence>Cunningham H. , Maynard D. , Bontcheva K. , Tablan V. 2002 , GATE : A Framework and Graphical Development Environment for Robust NLP Tools and Applications .</sentence>
				<definiendum id="0">GATE</definiendum>
				<definiens id="0">A Framework and Graphical Development Environment for Robust NLP Tools and Applications</definiens>
			</definition>
			<definition id="5">
				<sentence>Fellbaum C. , WordNet : an Electionic Lexical Database , Cambridge , MA , The MIT Press .</sentence>
				<definiendum id="0">WordNet</definiendum>
			</definition>
</paper>

		<paper id="4008">
			<definition id="0">
				<sentence>The article extraction component has been trained and tested on English , Japanese , and Russian data , but is also being successfully applied to French , Spanish , German , and Italian data .</sentence>
				<definiendum id="0">Russian</definiendum>
				<definiens id="0">data , but is also being successfully applied to French , Spanish , German , and Italian data</definiens>
			</definition>
</paper>

		<paper id="2033">
			<definition id="0">
				<sentence>Research Approach The term “Quality” is defined by International Organization of Standards ( 1986 ) as “the totality of characteristics of an entity that bear on its ability to satisfy stated and implied need” ( Standard 8402 , 3.1 ) .</sentence>
				<definiendum id="0">term “Quality”</definiendum>
				<definiens id="0">“the totality of characteristics of an entity that bear on its ability to satisfy stated and implied need”</definiens>
			</definition>
</paper>

		<paper id="2020">
			<definition id="0">
				<sentence>The region algebra ( Clarke et al. , 1995 ) is a set of operators , which represent the relation between the extents ( i.e. regions in texts ) .</sentence>
				<definiendum id="0">region algebra</definiendum>
				<definiens id="0">a set of operators , which represent the relation between the extents</definiens>
			</definition>
			<definition id="1">
				<sentence>Definition 2 ( Relevance of the whole query ) Let q be a given query , d be a document and q1 ; : : : ; qm subqueries of q. The relevance vector Σ ( q ; d ) of d is defined as follows : Σ ( q ; d ) = h ( q1 ; d ) ; ( q2 ; d ) ; : : : ; ( qm ; d ) i A relevance of a subquery should be defined similarly to that of keyword-based queries in the traditional ranked retrieval .</sentence>
				<definiendum id="0">Definition 2 ( Relevance</definiendum>
				<definiens id="0">a document and q1 ; : : : ; qm subqueries of q. The relevance vector Σ</definiens>
			</definition>
			<definition id="2">
				<sentence>In this paper , we first map a vector into a scalar value , and then sort the documents 1In this query , ‘ [ x ] ’ is a syntax sugar of ‘hxi3h/xi’ .</sentence>
				<definiendum id="0">] ’</definiendum>
			</definition>
			<definition id="3">
				<sentence>Definition 4 ( Structure Coefficient ) When the operator op is 4 , 5 or 3 , the structure coefficient of the query A op B is : scAopB = C ( A ) +C ( B ) ¡C ( A op B ) C ( A ) +C ( B ) and when the operator op is ⁄ or ¢ , the structure coefficient of the query A op B is : scAopB = C ( A ) ¡C ( A op B ) C ( A ) where A and B are the queries and C ( A ) is the number of extents that match A in the document collection .</sentence>
				<definiendum id="0">) ¡C</definiendum>
				<definiens id="0">A ) +C ( B ) ¡C ( A op B ) C ( A ) +C ( B ) and when the operator op is ⁄ or ¢ , the structure coefficient of the query A op B is : scAopB = C ( A</definiens>
			</definition>
			<definition id="4">
				<sentence>The scalar measure ‰sc ( qi ; d ) is then defined as ‰sc ( q ; d ) = mX i=1 scqi ¢ ( qi ; d ) The third is a combination of the measure of the query itself and the measure of the subqueries .</sentence>
				<definiendum id="0">scalar measure ‰sc</definiendum>
			</definition>
			<definition id="5">
				<sentence>Definition 5 ( Interpolated Coefficient ) The interpolated coefficient of the query qi is recursively defined as follows : ‰ic ( qi ; d ) = ‚¢ ( qi ; d ) + ( 1¡‚ ) P ci ‰ic ( qci ; d ) l where ci is the child of node ni , l is the number of children of node ni , and 0 • ‚ • 1 .</sentence>
				<definiendum id="0">Definition 5 ( Interpolated Coefficient ) The interpolated coefficient</definiendum>
				<definiendum id="1">ci</definiendum>
				<definiendum id="2">l</definiendum>
				<definiens id="0">‰ic ( qi ; d ) = ‚¢ ( qi ; d ) + ( 1¡‚ ) P ci ‰ic ( qci ; d ) l where</definiens>
				<definiens id="1">the child of node ni</definiens>
				<definiens id="2">the number of children of node ni , and 0 • ‚ • 1</definiens>
			</definition>
</paper>

		<paper id="1017">
			<definition id="0">
				<sentence>Och et al. [ 1999 ] ’s alignment template model can be reframed as a phrase translation system ; Yamada and Knight [ 2001 ] use phrase translation in a syntaxbased translation system ; Marcu and Wong [ 2002 ] introduced a joint-probability model for phrase translation ; and the CMU and IBM word-based statistical machine translation systems1 are augmented with phrase translation capability .</sentence>
				<definiendum id="0">alignment template model</definiendum>
				<definiens id="0">a phrase translation system</definiens>
				<definiens id="1">phrase translation ; and the CMU and IBM word-based statistical machine translation systems1 are augmented with phrase translation capability</definiens>
			</definition>
			<definition id="1">
				<sentence>Reordering of the English output phrases is modeled by a relative distortion probability distribution a10 a5a12a11 a6a14a13 a15a16a6a18a17 a5 a10 , where a11 a6 denotes the start position of the foreign phrase that was translated into the a19 th English phrase , and a15a16a6a18a17 a5 denotes the end position of the foreign phrase translated into the a5a18a19 a13a21a20 a10 th English phrase .</sentence>
				<definiendum id="0">a11 a6</definiendum>
				<definiendum id="1">a15a16a6a18a17 a5</definiendum>
				<definiens id="0">the end position of the foreign phrase translated into the a5a18a19 a13a21a20 a10 th English phrase</definiens>
			</definition>
</paper>

		<paper id="4011">
			<definition id="0">
				<sentence>For example , Lin’s approach outputs the following similar words for wine and suit : wine : beer , white wine , red wine , Chardonnay , champagne , fruit , food , coffee , juice , Cabernet , cognac , vinegar , Pinot noir , milk , vodka , … suit : lawsuit , jacket , shirt , pant , dress , case , sweater , coat , trouser , claim , business suit , blouse , skirt , litigation , … The similar words of wine represent the meaning of wine .</sentence>
				<definiendum id="0">blouse</definiendum>
				<definiens id="0">lawsuit , jacket , shirt , pant , dress , case , sweater , coat , trouser , claim , business suit ,</definiens>
			</definition>
			<definition id="1">
				<sentence>21-22 Proceedings of HLT-NAACL 2003 ( ) ( ) ( ) N jF N wF N wF cw j c i i c mi ∑ × ∑ = , where N is the total frequency counts of all words and their contexts .</sentence>
				<definiendum id="0">N</definiendum>
			</definition>
			<definition id="2">
				<sentence>CBC consists of three phases .</sentence>
				<definiendum id="0">CBC</definiendum>
			</definition>
</paper>

		<paper id="1013">
			<definition id="0">
				<sentence>WordNet has been used by many researchers for different purposes ranging from the construction or extension of knowledge bases such as SENSUS ( Knight and Luk , 1994 ) or the Lexical Conceptual Structure Verb Database ( LVD ) ( Green et al. , 2001 ) to the faking of meaning ambiguity as part of system evaluation ( Bangalore and Rambow , 2000 ) .</sentence>
				<definiendum id="0">WordNet</definiendum>
				<definiens id="0">Knight and Luk , 1994 ) or the Lexical Conceptual Structure Verb Database ( LVD ) ( Green et al. , 2001 ) to the faking of meaning ambiguity as part of system evaluation</definiens>
			</definition>
			<definition id="1">
				<sentence>For example , there is a LF that returns a light verb associated with the LF’s key : Light-Verb ( attention ) = pay .</sentence>
				<definiendum id="0">LF</definiendum>
				<definiens id="0">returns a light verb associated with the LF’s key : Light-Verb ( attention ) = pay</definiens>
			</definition>
			<definition id="2">
				<sentence>ample is the expansionist Nitrogen morphological generator , where the morphological feature a15a16a8a17a1a4a3 a10 a8a17a18a20a19 a10a22a21a24a23a26a25 a27 a23a14a28a30a29 applied to a31 a23 a27 a23 a19a32a1a34a33 returns eleven variations including a35a30a31 a23 a27 a23 a19a36a1a34a33a37a18a24a38 a23 , a35a39a31 a23 a27 a23 a19a32a1a34a33 a10 a0a40a18 a13a22a10 a1a4a8 and a35a39a31 a23 a27 a23 a19a32a1a34a33a37a41 .</sentence>
				<definiendum id="0">ample</definiendum>
				<definiens id="0">the expansionist Nitrogen morphological generator , where the morphological feature a15a16a8a17a1a4a3 a10 a8a17a18a20a19 a10a22a21a24a23a26a25 a27 a23a14a28a30a29 applied to a31 a23 a27 a23 a19a32a1a34a33 returns eleven variations including a35a30a31 a23 a27 a23 a19a36a1a34a33a37a18a24a38 a23</definiens>
			</definition>
			<definition id="3">
				<sentence>4For example , in a headline generation system ( HeadGen ) , higher Bleu scores were obtained when using the portions of the CatVar database that are most relevant to nominalized events ( e.g. , NOMLEX ) .</sentence>
				<definiendum id="0">HeadGen</definiendum>
				<definiens id="0">scores were obtained when using the portions of the CatVar database that are most relevant to nominalized events</definiens>
			</definition>
			<definition id="4">
				<sentence>CatVar linkability is the linkability of two words appearing in the same CatVar cluster .</sentence>
				<definiendum id="0">CatVar linkability</definiendum>
				<definiens id="0">the linkability of two words appearing in the same CatVar cluster</definiens>
			</definition>
</paper>

		<paper id="2028">
</paper>

		<paper id="2011">
			<definition id="0">
				<sentence>A parse forest is basically an attributed And-Or-graph with the properties of subtree sharing and containment of ambiguities .</sentence>
				<definiendum id="0">parse forest</definiendum>
				<definiens id="0">an attributed And-Or-graph with the properties of subtree sharing and containment of ambiguities</definiens>
			</definition>
</paper>

		<paper id="5004">
</paper>

		<paper id="5005">
</paper>

		<paper id="2012">
</paper>

		<paper id="2031">
			<definition id="0">
				<sentence>The First stream vector consists of the classical MFCCs and their first derivatives , whereas the second stream vector consists of acoustic cues derived from hearing phenomena studies .</sentence>
				<definiendum id="0">First stream vector</definiendum>
				<definiens id="0">consists of the classical MFCCs and their first derivatives , whereas the second stream vector consists of acoustic cues derived from hearing phenomena studies</definiens>
			</definition>
</paper>

		<paper id="1035">
			<definition id="0">
				<sentence>HUM HS TT Total Total number of terms 673 7980 1788 9992 Percentage of total number of terms Table 2 : Number of terms in index by method of identification Wacholder et al. ( 2000 ) showed that when experimental subjects were asked to assess the usefulness of terms for an information access task without actually using the terms for information access showed that the terms identified by the technical term algorithm , which are considerably fewer than the terms identified by head sorting , were overall of higher quality than the terms identified by the head sorting method .</sentence>
				<definiendum id="0">HUM HS TT Total Total number</definiendum>
				<definiens id="0">information access showed that the terms identified by the technical term algorithm</definiens>
			</definition>
</paper>

		<paper id="1011">
			<definition id="0">
				<sentence>Based on linguistic and cognitive considerations about the way parts contribute to the structure of the wholes , Winston , Chaffin and Hermann ( Winston et al. , 1987 ) determined in 1987 six types of part-whole relations : Component-Integral object ( wheel car ) , MemberCollection ( soldier army ) , Portion-Mass ( meter kilometer ) , Stuff-Object ( alcohol wine ) , Feature-Activity ( paying shopping ) , and Place-Area ( oasis desert ) .</sentence>
				<definiendum id="0">Feature-Activity</definiendum>
				<definiens id="0">Winston et al. , 1987 ) determined in 1987 six types of part-whole relations : Component-Integral object ( wheel car )</definiens>
			</definition>
			<definition id="1">
				<sentence>Iceland is a member of NATO .</sentence>
				<definiendum id="0">Iceland</definiendum>
				<definiens id="0">a member of NATO</definiens>
			</definition>
</paper>

		<paper id="5002">
</paper>

		<paper id="2036">
			<definition id="0">
				<sentence>This baseline set is further filtered using the unigram count N ( b ) : Nk denotes the set of blocks b for which N ( b ) k. Blocks where the target and the source clump are of length 1 are kept regardless of their count.1 We compute the unigram probability p ( b ) as relative frequency over all selected blocks .</sentence>
				<definiendum id="0">Nk</definiendum>
			</definition>
</paper>

		<paper id="2001">
			<definition id="0">
				<sentence>The system uses the techniques of SelfOrganizing Map ( SOM ) algorithm ( Kohonen , 1997 ) and an inductive learning algorithm , C5 ( Quinlan , 1993 , 2000 ) .</sentence>
				<definiendum id="0">system</definiendum>
				<definiens id="0">uses the techniques of SelfOrganizing Map ( SOM ) algorithm ( Kohonen , 1997 ) and an inductive learning algorithm</definiens>
			</definition>
			<definition id="1">
				<sentence>An XML document consists of a strictly nested hierarchy of elements with a root element .</sentence>
				<definiendum id="0">XML document</definiendum>
				<definiens id="0">consists of a strictly nested hierarchy of elements with a root element</definiens>
			</definition>
</paper>

		<paper id="5003">
</paper>

		<paper id="1027">
			<definition id="0">
				<sentence>This paper investigates adapting a lexicalized probabilistic context-free grammar ( PCFG ) to a novel domain , using maximum a posteriori ( MAP ) estimation .</sentence>
				<definiendum id="0">PCFG</definiendum>
				<definiens id="0">adapting a lexicalized probabilistic context-free grammar (</definiens>
			</definition>
			<definition id="1">
				<sentence>Bacchiani and Roark ( 2003 ) investigated MAP adaptation of n-gram language models , in a way that is straightforwardly applicable to probabilistic context-free grammars ( PCFGs ) .</sentence>
				<definiendum id="0">n-gram language models</definiendum>
				<definiens id="0">in a way that is straightforwardly applicable to probabilistic context-free grammars ( PCFGs )</definiens>
			</definition>
			<definition id="2">
				<sentence>A context-free grammar ( CFG ) G = ( V ; T ; P ; Sy ) , consists of a set of non-terminal symbols V , a set of terminal symbols T , a start symbol Sy2V , and a set of rule productions P of the form : A !</sentence>
				<definiendum id="0">context-free grammar ( CFG</definiendum>
				<definiens id="0">consists of a set of non-terminal symbols V , a set of terminal symbols T , a start symbol Sy2V</definiens>
			</definition>
			<definition id="3">
				<sentence>Then the parameters of the prior distribution for left-hand side A are chosen as Ai = AeP ( ijA ) + 1 1 i K : ( 4 ) where A is the left-hand side dependent prior weighting parameter .</sentence>
				<definiendum id="0">A</definiendum>
				<definiens id="0">the left-hand side dependent prior weighting parameter</definiens>
			</definition>
			<definition id="4">
				<sentence>The figure-ofmerit consists of the probability of the parse to that point times a look-ahead statistic , which is an estimate of how much probability mass it will take to connect the parse with the next word .</sentence>
				<definiendum id="0">figure-ofmerit</definiendum>
				<definiens id="0">consists of the probability of the parse to that point times a look-ahead statistic , which is an estimate of how much probability mass it will take to connect the parse with the next word</definiens>
			</definition>
			<definition id="5">
				<sentence>jXj1 ) = P ( jA ; Xj1 ) ( 11 ) = ( 1 ) bP ( jA ; Xj1 ) + P ( jA ; Xj 11 ) where bP is the maximum likelihood estimate of the conditional probability .</sentence>
				<definiendum id="0">bP</definiendum>
			</definition>
</paper>

		<paper id="1006">
			<definition id="0">
				<sentence>Suffix models −a −e −ie −ge −i −t ) Gender Seeds Translations Romanian English Natural Context models F M F M Test data : ) ^ ( pleasure ) ( blood ) ( M ) sange ( F ) placere F MNouns Romanian a252a24a160a171a175a156a189a137a168a174a167a109a238a166a191a41a59a61a60a63a62a65a64a65a64a65a66a46a67a69a68a37a70a42a71a39a68a72a62a74a73a75a60a76a73a7a77a78a68a72a79a81a80a82a68a37a70a42a71a75a60a81a67a37a64a65a62a74a60a81a83a22a66a46a71a75a64a85a84a81a70a72a73a87a86a37a80a14a88a16a68a72a62a74a73a75a60 a73a75a77a89a60a90a71a7a68a72a66a18a70a42a71a75a64a44a83a22a80a14a60a46a91a81a80a43a70a61a67a37a80a14a80a14a91a81a67a3a92a19a62a93a71a82a88a14a73a22a60a9a68a72a80a43a94a19a68a72a66a90a71a7a64a44a71a75a60a90a91a95a67a37a66a81a96a41a94a98a97a99a73a19a91a81a80a43a64a74a67 a183a188a168a174a179a156a182a59a181a162a165a166a168a174a175a156a167a109a189a76a170a76a165a166a170a137a170a76a179a166a173a174a165a166a173a177a167 a184 a187a4a179a81a168a177a163a90a179a156a168a186a165a140a173a174a179a194a187a7a179a156a182a16a163a90a167a7a170a76a161a174a165a117a173a174a167a109a183a188a179a81a168 a173a177a159a76a167a99a181a171a165a81a187a186a195a25a179a166a183a24a173a177a159a137a160a162a161a47a173a54a193a157a163a66a167a99a179a156a183a24a195a157a170a137a179a117a190a29a181a171a167 a184 a175a156a167a166a207a157a180a157a193a109a167a4a201a139a163a137a181a171a179a81a160a151a173a174a160a171a170a137a175a99a173a177a159a76a167 a175a156a167a121a170 a184 a167a121a168a22a165a156a175a156a168a174a167a7a167a121a182a16a167a7a170a86a173a115a179a166a183a46a170a137a179a156a189a137a170a66a161a29a165a166a170 a184 a160a176a182a16a182a16a167 a184 a160a162a165a117a173a174a167a111a187a4a179a156a170a86a173a174a167a4a201a157a173a7a198 a199a200a167a45a163a137a168a174a179a156a163a90a179a81a161a177a167a61a165a43a173a54a190a47a179a156a203a230a187a7a179a156a182a16a163a90a179a156a170a137a167a121a170a86a173a35a180a66a179a157a179a166a173a186a161a54a173a174a168a174a165a156a163a137a163a137a160a171a170a137a175a99a173a174a167a121a187a186a159a139a203 a170a137a160a40a57a86a189a137a167a204a173a177a159a76a165a166a173a111a187a7a165a166a170a140a180a90a167a11a161a72a189a76a182a16a182a109a165a166a168a174a160a176a216a121a167 a184 a165a156a161a52a183a188a179a81a181a171a181a176a179a117a190a111a161a7a191 a232a86a173a174a165a156a168a72a173a174a160a176a170a76a175a212a190a29a160a176a173a177a159a40a165a94a181a176a160a162a161a72a173a109a179a166a183a206a161a177a167a7a167 a184 a170a137a179a81a189a137a170a76a161a7a207a192a168a177a167a121a181a171a160a171a165a156a180a137a181a171a167a147a187a4a179a156a170a137a203 a173a177a167a7a201a157a173a174a161a42a183a188a179a81a168a88a167a7a172a156a167a121a168a177a193a43a175a156a167a7a170 a184 a167a7a168a35a187a7a181a171a165a81a161a177a161a42a165a156a168a177a167 a184 a167a4a173a174a167a7a168a174a182a16a160a171a170a137a167 a184 a165a166a170 a184 a182a16a179a156a168a174a167 a170a137a179a81a189a137a170a76a161a27a173a177a159a76a165a166a173a24a165a166a168a174a167a115a161a177a167a7a167a121a170a11a190a29a160a176a173a177a159a45a173a177a159a76a179a81a161a177a167a47a187a4a179a81a170a86a173a177a167a4a201a157a173a186a161a27a165a166a168a174a167a35a167a7a201a86a173a174a168a174a165a81a187a130a173a174a167 a184 a183a188a168a174a179a156a182a119a173a177a159a137a167a52a187a4a179a156a168a174a163a137a189a76a161a7a198a46a158a22a159a137a167a47a182a16a179a156a168a174a163a137a159a137a179a81a181a176a179a81a175a156a160a162a187a7a165a156a181a7a163a137a168a174a179a156a163a90a167a7a168a177a173a177a160a171a167a108a161a32a179a166a183a139a173a177a159a76a167 a161a177a167a7a167 a184 a161a204a165a156a170 a184 a173a177a159a137a167a25a170a137a179a81a189a137a170a76a161a45a190a29a160a176a173a177a159a20a168a177a167a121a181a176a167a121a172a117a165a166a170a86a173a204a187a7a179a156a170a86a173a177a167a7a201a86a173a11a165a156a168a177a167a206a173a177a159a137a167a121a170 a189a76a161a177a167 a184 a173a174a179a113a159a157a193a86a163a90a179a166a173a174a159a137a167a121a161a177a160a171a216a7a167a25a175a156a168a186a165a166a182a16a182a109a165a166a173a177a160a162a187a7a165a156a181a27a175a81a167a7a170 a184 a167a121a168a99a183a188a179a156a168a206a165a166a181a171a181a88a173a177a159a76a167 a170a137a179a81a189a137a170a76a161a22a160a171a170a103a173a174a159a137a167a99a181a162a165a166a170a137a175a81a189a76a165a166a175a81a167a166a198 a158a22a159a137a160a162a161a147a182a16a167a4a173a174a159a137a179 a184 a165a81a161a177a161a177a189a137a182a16a167a108a161a5a173a177a159a137a167a212a167a7a201a139a160a171a161a72a173a177a167a121a170a76a187a4a167a196a179a156a183a109a165 a181a176a160a162a161a72a173a147a179a166a183 a170a137a179a81a189a137a170a76a161a16a183a188a179a81a168a109a173a174a159a137a167a147a173a174a165a156a168a177a175a81a167a4a173a103a181a162a165a156a170a137a175a156a189a76a165a156a175a156a167a156a198a114a158a22a159a137a160a162a161a16a160a162a161a16a170a137a179a156a173a5a165a196a182a109a165a166a203 a197a54a179a156a168a192a168a177a167a108a161a54a173a174a168a177a160a162a187a130a173a174a160a171a179a156a170a64a233a66a241a47a189a76a187a7a167a7a168a174a216a121a165a166a170a140a165a166a170 a184a109a242 a165a156a168a177a179a117a190a111a161a177a195a157a193a113a220a122a243a166a244a81a244a81a243a117a221a29a161a177a159a137a179a117a190 a159a137a179a117a190a119a170a137a179a156a189a137a170a66a161a111a187a7a165a156a170a5a180a90a167a11a159a157a193a157a163a66a179a156a173a177a159a137a167a108a161a72a160a171a216a121a167 a184 a168a174a167a7a181a171a160a162a165a166a180a76a181a176a193a100a189a76a161a177a160a171a170a137a175a16a165a100a183a188a179a156a168a177a203 a167a7a160a171a175a81a170a103a181a162a165a166a170a137a175a81a189a76a165a166a175a81a167a111a173a174a179a16a213a35a170a137a175a156a181a171a160a162a161a177a159 a184 a160a162a187a130a173a174a160a176a179a81a170a76a165a166a168a174a193a166a198 a223a111a170 a160a171a170a139a203 a184 a167a7a163a139a173a174a159a79a165a166a170a66a165a166a181a171a193a139a161a72a160a162a161a11a179a156a183a192a173a174a159a137a167a113a165a166a181a171a175a156a179a81a168a177a160a176a173a174a159a137a182a140a207a24a163a76a168a177a179a81a180a137a181a171a167a7a182a109a161 a167a7a170a66a187a4a179a156a189a76a170a81a173a174a167a7a168a174a167 a184 a207a29a165a166a170 a184 a168a174a167a121a161a177a189a137a181a176a173a174a161a7a207a22a190a29a160a151a173a174a159 a167a4a201a137a165a166a182a16a163a137a181a171a167a108a161a43a160a171a170a48a255a29a179a156a182a109a165a166a203 a170a137a160a162a165a166a170a150a207a157a160a162a161a47a163a137a168a174a167a121a161a177a167a7a170a86a173a177a167 a184 a160a171a170a109a173a174a159a137a167a204a183a188a179a156a181a171a181a171a179a117a190a29a160a176a170a76a175a45a161a177a189a137a180a76a161a177a167a121a187a4a173a177a160a171a179a156a170a66a161a115a179a156a183a27a173a177a159a76a167 a163a76a165a156a163a66a167a121a168a7a198a45a255a29a167a121a161a177a189a137a181a176a173a174a161a111a183a188a179a156a168a61a161a177a167a7a172a81a167a7a168a186a165a166a181a46a179a166a173a177a159a76a167a7a168a192a181a162a165a156a170a137a175a156a189a76a165a156a175a156a167a108a161a29a165a166a168a174a167a43a161a72a189a76a182a25a203 a182a109a165a166a168a174a160a171a216a7a167 a184 a160a171a170a140a232a157a167a108a187a130a173a174a160a176a179a81a170a100a50a137a198 a101a33a102a104a103 a105a55a106a90a106a90a107a78a108a104a109a78a110 a231a61a170a137a167a11a179a156a183a88a173a177a159a137a167a206a182a16a179a81a161a72a173a192a160a171a182a16a163a66a179a81a168a72a173a186a165a166a170a86a173a29a160a162a161a177a161a177a189a137a167a121a161a111a160a176a170a113a165a156a170a157a193a18a180a90a179a157a179a166a173a174a161a72a173a177a168a186a165a166a163a137a203 a163a137a160a171a170a137a175a99a163a137a168a174a179a139a187a4a167a108a161a177a161a88a160a162a161a35a173a177a159a137a167a5a57a81a189a66a165a166a170a86a173a177a160a176a173a54a193a43a165a156a170 a184 a57a86a189a76a165a166a181a171a160a176a173a54a193a99a179a166a183a64a173a174a159a137a167a61a161a177a167a7a167 a184 a161a7a198 a248a56a170a103a165a43a182a16a160a176a170a76a160a176a182a109a165a156a181a176a203a106a167a7a226a90a179a81a168a72a173a150a183a188a168a186a165a166a182a16a167a121a190a47a179a81a168a177a195a90a207a156a179a81a170a137a167a111a190a52a179a156a189a137a181 a184 a181a171a160a171a195a156a167a52a173a177a179a206a189a76a161a177a167 a165a156a161a52a183a188a167a121a190a119a161a177a167a7a167 a184 a161a29a165a156a161a52a163a90a179a81a161a174a161a72a160a171a180a137a181a171a167a61a165a156a170 a184 a159a76a165a93a172a156a167a61a173a177a159a137a167a121a182a178a180a90a167a45a167a121a165a156a161a177a160a171a181a171a193a100a167a7a201a157a203 a173a177a168a186a165a156a187a4a173a177a167 a184 a183a188a168a174a179a156a182a246a190a29a160 a184 a167a121a181a171a193a109a165a93a172a93a165a156a160a171a181a171a165a156a180a137a181a171a167a29a168a177a167a108a161a72a179a81a189a137a168a186a187a4a167a121a161a7a198 a223a212a208a76a168a186a161a72a173a24a165a166a163a76a163a137a168a177a179a86a165a156a187a186a159a99a189a76a161a177a167a121a161a27a173a177a159a76a167a115a173a174a168a174a165a156a170a76a161a72a181a171a160a171a170a137a175a81a189a76a165a166a181a117a163a137a168a174a179a166a197a54a167a108a187a130a173a174a160a176a179a81a170a45a179a166a183 a170a76a165a166a173a177a189a137a168a186a165a166a181a66a175a156a167a7a170 a184 a167a7a168a121a207a86a161a72a173a174a165a156a168a72a173a174a160a176a170a76a175a204a190a29a160a176a173a174a159a25a173a177a159a137a167a192a173a177a168a186a165a166a170a76a161a177a181a162a165a117a173a177a160a171a179a81a170a76a161a24a179a166a183a150a161a72a167a121a172a86a203 a167a7a168a186a165a166a181a27a213a35a170a137a175a156a181a171a160a162a161a177a159a5a170a76a179a156a189a137a170a76a161a111a173a177a159a76a165a166a173a192a159a76a165a93a172a81a167a43a165a25a170a76a165a117a173a174a189a137a168a186a165a166a181a27a175a81a167a7a170 a184 a167a7a168a43a220a122a252a46a160a171a175a156a203 a189a137a168a174a167a196a238a108a221a130a198a114a199a194a167a74a187a7a179a156a170a76a161a177a160 a184 a167a7a168a174a167 a184 a165a194a173a177a179a156a173a174a165a166a181a192a179a166a183a111a50a156a244a200a183a188a167a121a182a16a160a176a170a76a160a176a170a76a167a5a165a156a170 a184 a50a156a244a5a182a109a165a81a161a177a187a7a189a137a181a171a160a176a170a76a167a11a170a137a179a156a189a76a170a76a161a45a160a171a170a113a173a177a167a121a168a177a182a109a161a45a179a156a183a47a170a76a165a166a173a177a189a137a168a186a165a166a181a88a175a81a167a7a170 a184 a167a7a168a39a112a121a207a24a165a81a161 a113a37a114 a73a22a66a81a60a46a67a115a67a37a66a81a88a16a79a98a71a7a67a117a116a42a118a1a119a121a120a22a122a124a123a43a125a126a71a7a60a90a91a128a127a85a122a40a129a40a130a16a131a95a71a39a70a72a80a132a71a75a67a37a67a37a66a81a97a99a80a87a91a5a68a72a73a133a88a14a73a75a70a37a134 a161a177a159a137a179a117a190a29a170a18a160a171a170a140a158a46a165a156a180a137a181a171a167a206a238a156a198 a199a215a159a137a167a7a170a147a165a206a180a137a160a171a181a176a160a171a170a137a175a81a189a76a165a166a181 a184 a160a162a187a130a173a174a160a176a179a81a170a76a165a166a168a174a193a100a190a29a160a151a173a174a159a18a213a115a170a137a175a156a181a171a160a162a161a72a159a103a160a171a161a22a165a93a172a117a165a166a160a171a181a176a203 a165a166a180a76a181a176a167a140a167a121a181a176a167a108a187a130a173a174a168a177a179a81a170a137a160a162a187a7a165a166a181a171a181a171a193a79a220a122a165a156a161a103a190a52a165a81a161a100a173a177a159a137a167a74a187a121a165a156a161a177a167a140a183a188a179a156a168a103a255a111a179a156a182a109a165a166a170a76a160a171a165a156a170a64a207 a252a137a168a174a167a7a170a66a187a186a159a64a207a76a165a166a170 a184 a232a157a163a76a165a156a170a137a160a162a161a72a159a66a221a130a207a157a173a177a159a137a167a45a163a137a168a174a179a166a197a54a167a108a187a130a173a177a160a171a179a81a170a109a179a166a183a24a170a76a165a117a173a174a189a137a168a174a165a156a181a32a175a156a167a7a170a137a203 a184 a167a121a168a99a181a171a165a156a180a66a167a121a181a162a161a61a160a162a161 a184 a179a81a170a137a167a109a165a166a189a139a173a174a179a156a182a109a165a166a173a177a160a162a187a7a165a156a181a176a181a171a193a156a198a99a199a215a159a137a167a7a170a196a161a177a189a76a187a186a159a200a165 a184 a160a162a187a4a203 a173a177a160a171a179a81a170a76a165a166a168a174a193a74a160a162a161a11a170a76a179a166a173a100a165a93a172a117a165a156a160a176a181a162a165a156a180a137a181a171a167a206a160a171a170a94a165a156a170a196a167a7a181a171a167a121a187a4a173a177a168a174a179a156a170a137a160a162a187a100a183a188a179a156a168a174a182a109a165a117a173a121a207a42a165a156a170 a213a35a170a137a175a81a181a171a160a171a161a177a159a139a203a106a173a177a179a156a203a122a173a186a165a166a168a174a175a156a167a4a173a177a203a106a181a162a165a156a170a137a175a156a189a76a165a156a175a166a167a115a159a66a165a166a168 a184 a203a230a187a7a179a156a163a157a193 a184 a160a162a187a130a173a177a160a171a179a81a170a76a165a166a168a174a193a43a187a7a165a156a170 a180a90a167a99a189a76a161a72a167 a184 a220a162a173a177a159a76a160a171a161a111a190a52a165a81a161 a184 a179a156a170a137a167a45a183a188a179a81a168a192a232a157a181a171a179a117a172a156a167a121a170a137a167a166a207a139a190a29a160a176a173a177a159a135a50a81a136a206a182a16a160a171a170a157a189a139a173a177a167a108a161 a170a137a167a108a187a4a167a121a161a174a161a174a165a166a168a174a193a113a173a177a179a20a167a4a201a157a173a177a168a186a165a156a187a4a173a206a165a166a181a171a181a88a173a174a159a137a167a109a173a174a168a174a165a156a170a76a161a177a181a171a165a166a173a177a160a171a179a156a170a66a161a45a179a166a183a29a173a177a159a76a167a103a213a35a170a139a203 a175a156a181a171a160a162a161a177a159a154a161a177a167a7a167 a184 a161a174a221a130a198a247a158a22a159a137a160a162a161a25a208a76a168a186a161a54a173a140a165a166a163a137a163a76a168a177a179a86a165a156a187a186a159a154a160a171a161a109a181a176a160a171a182a16a160a176a173a177a167 a184 a173a174a179a212a173a177a159a76a167 a181a162a165a166a170a137a175a81a189a76a165a166a175a81a167a121a161a115a160a176a170a18a190a29a159a137a160a162a187a186a159a103a175a81a168a174a165a156a182a16a182a109a165a117a173a177a160a162a187a121a165a166a181a139a175a156a167a121a170 a184 a167a121a168a52a160a162a161a52a168a174a167a7a181a162a165a117a173a174a167 a184 a173a174a179 a170a76a165a166a173a177a189a137a168a186a165a166a181a139a175a81a167a7a170 a184 a167a121a168a7a198a88a223a111a181a162a161a177a179a137a207a117a173a174a159a137a167a29a168a177a167a108a161a72a189a76a181a151a173a186a161a42a182a109a165a93a193a99a172a117a165a166a168a174a193a43a165a156a187a121a187a4a179a156a168 a184 a160a171a170a137a175 a173a177a179a25a173a174a159a137a167a99a189a76a161a174a165a166a175a81a167a204a179a156a183a46a173a174a159a137a167a43a161a177a167a7a181a171a167a121a187a4a173a177a167 a184 a170a76a165a166a173a177a189a137a168a186a165a166a181a64a175a81a167a7a170 a184 a167a7a168a29a170a137a179a81a189a137a170a76a161a29a160a171a170 a173a177a159a76a167a100a187a7a179a156a168a174a163a137a189a76a161a100a220a162a183a188a179a156a168a204a167a4a201a137a165a156a182a16a163a137a181a171a167a166a207a66a190a52a179a156a168 a184 a161a61a181a171a160a176a195a81a167a137a8a44a10a12a25a14a11a14a25a100a179a156a168a138a27a16a6a22a6a1a4a39a23a26a25a7a27 a182a109a165a93a193a16a170a137a179a156a173a22a180a90a167a99a172a156a167a121a168a177a193a109a183a188a168a177a167a22a57a81a189a76a167a7a170a86a173a29a160a176a170a5a170a137a167a121a190a111a161a72a190a29a160a171a168a174a167a204a187a7a179a156a168a174a163a66a179a81a168a174a165a86a221a186a198 a223a94a161a177a167a121a187a4a179a81a170 a184 a207a93a182a16a179a156a168a174a167a88a175a156a167a121a170a137a167a7a168a186a165a166a181a156a165a156a163a137a163a137a168a174a179a81a165a81a187a186a159a204a160a162a161a32a173a174a179a192a167a7a201a86a173a174a168a174a165a81a187a130a173a64a183a188a168a174a179a156a182 a173a177a159a76a167a113a187a4a179a156a168a174a163a137a189a76a161a16a165a200a181a171a160a162a161a54a173a25a179a166a183a45a170a137a179a81a189a137a170a76a161a109a161a177a167a7a181a171a167a121a187a4a173a177a167 a184 a179a156a170a154a173a174a159a137a167a147a180a76a165a156a161a177a160a162a161a100a179a166a183 a183a188a168a174a167a75a57a86a189a137a167a7a170a66a187a4a193a166a207a88a170a157a189a137a182a100a180a66a167a121a168a43a179a156a183a192a187a4a179a156a170a86a173a174a167a4a201a157a173a174a161a43a190a29a160a151a173a174a159a212a190a29a159a137a160a162a187a186a159a194a173a177a159a76a167a7a193a196a187a4a179a156a203 a179a139a187a7a187a7a189a137a168a7a207a52a165a166a170 a184 a161a72a189a139a205a25a201a212a163a76a165a166a173a72a173a174a167a7a168a174a170a76a161a4a207a52a165a166a170 a184 a173a177a179a200a181a171a165a156a180a66a167a121a181a52a173a177a159a137a167a121a182 a190a29a160a176a173a177a159 a175a156a167a121a170 a184 a167a121a168a61a160a171a170a139a183a188a179a81a168a177a182a109a165a166a173a177a160a171a179a156a170a5a180a157a193 a184 a160a162a187a130a173a177a160a171a179a81a170a76a165a166a168a174a193a109a181a171a179a157a179a156a195a86a203a106a189a76a163a64a198a45a158a22a159a76a160a171a161a204a165a166a163a137a203 a163a137a168a174a179a81a165a81a187a186a159a5a175a81a189a76a165a166a168a186a165a166a170a86a173a174a167a7a167a121a161a52a173a174a159a76a165a117a173a61a173a177a159a137a167a100a161a72a167a121a167 a184 a161a192a189a76a161a177a167 a184 a165a156a168a177a167a11a168a174a167a7a163a76a168a177a167a108a161a72a167a121a170a139a203 a173a174a165a166a173a177a160a171a172a156a167a18a183a188a179a156a168a100a173a174a159a137a167a147a175a156a160a171a172a156a167a121a170a94a187a4a179a81a168a177a163a76a189a76a161a4a207a52a161a72a179a20a173a177a159a76a165a166a173a16a173a177a159a137a167a140a180a90a179a157a179a166a173a174a161a72a173a177a168a186a165a166a163a137a203 a163a137a160a171a170a137a175a147a159a76a165a81a161a11a165a140a180a90a167a4a173a72a173a174a167a7a168a100a187a186a159a76a165a166a170a76a187a7a167a25a173a177a179a113a161a177a189a76a187a7a187a7a167a7a167 a184 a198a113a231a61a170a194a173a174a159a137a167a109a179a156a173a177a159a137a167a121a168 a159a76a165a156a170 a184 a207a22a160a151a173a109a163a76a168a177a167a108a161a72a189a137a182a16a167a108a161a206a173a177a159a137a167a147a167a7a201a157a160a162a161a72a173a177a167a121a170a76a187a4a167a140a179a166a183a99a165a200a175a156a167a121a170 a184 a167a7a168a109a165a156a170a137a170a137a179a156a203 a173a174a165a166a173a177a167 a184 a182a16a179a156a170a137a179a156a203a43a179a156a168a5a180a137a160a176a203a230a181a176a160a171a170a137a175a81a189a76a165a166a181 a184 a160a162a187a4a173a177a160a171a179a156a170a76a165a156a168a177a193a119a220a188a190a29a159a137a160a162a187a186a159a48a182a16a160a171a175a156a159a86a173 a180a90a167a43a182a16a179a156a168a174a167 a184 a160a176a205a109a187a4a189a137a181a176a173a29a173a174a179a16a208a76a170 a184 a173a174a159a76a165a166a170a20a165a166a170a147a189a137a170a76a165a156a170a137a170a137a179a156a173a174a165a117a173a174a167 a184 a180a137a160a171a181a171a160a171a170a139a203 a175a156a189a66a165a166a181 a184 a160a162a187a130a173a177a160a171a179a81a170a76a165a166a168a174a193a137a221a186a198a204a231a61a189a137a168a61a175a156a179a81a165a156a181a27a190a22a165a156a161a111a173a177a179a18a161a177a167a7a181a171a167a108a187a130a173a61a165a18a161a72a182a109a165a156a181a176a181a46a161a72a167a7a173 a220a104a136a156a244a204a179a156a168a42a183a188a167a7a190a52a167a7a168a14a139a121a221a24a179a156a183a32a161a177a189a76a187a186a159a100a190a47a179a81a168 a184 a161a42a160a176a170a100a179a156a168 a184 a167a121a168a42a173a177a179a45a182a16a160a171a170a137a160a171a182a16a160a176a216a121a167a88a173a177a159a76a167 a159a157a189a137a182a109a165a166a170a5a161a72a189a76a163a66a167a121a168a177a172a157a160a162a161a72a160a171a179a81a170a109a168a177a167a22a57a86a189a137a160a171a168a177a167 a184 a198 a158a22a159a137a167a114a161a177a193a139a161a54a173a174a167a7a182 a190a22a165a156a161a79a160a171a170a137a160a176a173a177a160a162a165a166a181a171a181a171a193 a184 a167a121a172a156a167a7a181a171a179a81a163a66a167 a184 a183a188a179a156a168a48a255a29a179a156a182a109a165a166a203 a170a137a160a162a165a166a170a150a198a42a223a119a181a171a160a171a161a72a173a35a179a166a183a47a238a1a45a86a207a244a81a136a18a50a45a170a137a179a156a189a76a170a76a161a115a190a52a167a7a168a174a167a111a167a7a201a86a173a174a168a174a165a81a187a130a173a174a167 a184 a183a188a168a174a179a156a182a185a173a177a159a76a167 a218a113a234a61a228a139a158a22a213a3a140a61a158a52a203a230a213a115a165a156a161a72a173a16a255a29a179a156a182a109a165a156a170a137a160a162a165a166a170a200a181a176a167a7a201a139a160a171a187a7a179a156a170 a220a188a213a35a168a122a197a72a165a93a172a156a167a108a187a16a167a4a173a25a165a166a181a106a198a176a207 a238a121a239a81a239a46a45a156a221a186a198a99a234a111a170a139a183a188a179a81a168a72a173a174a189a137a170a76a165a117a173a174a167a7a181a171a193a166a207a64a165a166a181a171a181a24a170a137a167a7a189a137a173a177a167a7a168a45a170a137a179a81a189a137a170a76a161a204a165a166a168a174a167a43a181a171a160a162a161a54a173a174a167 a184 a165a81a161 a182a109a165a156a161a174a187a4a189a76a181a176a160a171a170a137a167a22a160a171a170a25a173a177a159a76a160a171a161a47a181a171a167a4a201a139a160a162a187a4a179a81a170a64a207a156a163a137a168a174a179a156a180a76a165a156a180a137a181a171a193a43a180a90a167a121a187a121a165a166a189a76a161a177a167a111a182a16a179a156a168a174a163a137a159a137a179a156a203 a181a171a179a156a175a81a160a171a187a121a165a166a181a171a181a171a193a166a207a86a170a137a167a7a189a139a173a174a167a7a168a186a161a192a165a156a170 a184 a182a109a165a156a161a174a187a4a189a137a181a171a160a171a170a137a167a45a165a166a168a174a167a11a165a166a181a171a160a171a195a156a167a204a160a176a170a5a173a174a159a137a167a43a161a177a160a176a170a137a203 a175a156a189a76a181a171a165a156a168a132a141a18a183a188a179a81a168a192a167a7a201a139a165a156a182a16a163a137a181a171a167a166a207a142a11a43a6a14a143a24a17a81a11a5a220a42a23a104a27a16a25a14a25a108a221a111a160a162a161a111a182a109a165a156a161a174a187a4a189a76a181a176a160a171a170a137a167a45a190a29a159a137a160a171a181a171a167 a11a14a6a9a8a89a17a18a11a99a220a42a144a128a17a19a8a24a4a87a10a12a6a9a8a64a221a88a160a162a161a24a170a137a167a7a189a137a173a177a167a7a168a121a198a115a232a157a193a157a170a86a173a174a165a156a187a4a173a177a160a162a187a7a165a156a181a171a181a176a193a156a207a108a170a76a167a7a189a139a173a174a167a7a168a35a161a177a160a176a170a137a203 a175a156a189a76a181a171a165a156a168a29a170a137a179a156a189a76a170a76a161a111a179a139a187a7a187a7a189a137a168a111a160a171a170a140a173a177a159a76a167a206a161a174a165a166a182a16a167a99a187a4a179a81a170a81a173a174a167a4a201a157a173a61a165a81a161a29a182a109a165a156a161a174a187a4a189a137a181a171a160a171a170a137a167 a161a177a160a176a170a76a175a156a189a137a181a162a165a166a168a204a170a137a179a81a189a137a170a76a161a7a207a42a161a177a179a140a173a177a159a137a167a103a175a156a167a7a170 a184 a167a7a168a43a165a156a175a156a168a174a167a7a167a121a182a16a167a7a170a86a173a45a187a121a165a166a170a137a170a76a179a166a173a11a180a90a167 a189a76a161a177a167 a184 a173a177a179a16a187a186a159a137a179a157a179a86a161a72a167a204a180a66a167a7a173a54a190a47a167a121a167a7a170a5a173a177a159a76a167a45a173a54a190a47a179a25a187a4a181a162a165a156a161a174a161a52a181a162a165a166a180a90a167a7a181a162a161a4a198 a231a61a170a137a181a171a193a20a243a157a207a171a238a75a50a86a243a109a179a156a183a115a173a177a159a76a167a113a238a1a45a157a207a244a46a136a19a50a109a195a157a170a137a179a117a190a29a170a200a170a137a179a81a189a137a170a76a161a11a165a156a163a137a163a66a167a108a165a166a168a99a160a171a170 a173a177a159a76a167a115a187a4a179a81a168a177a163a137a189a66a161a64a165a166a170 a184 a190a52a167a42a183a188a179a139a187a4a189a76a161a64a179a81a189a137a168a27a165a166a173a72a173a177a167a121a170a86a173a177a160a171a179a156a170a45a179a156a170a204a173a174a159a137a167a121a161a177a167a88a170a137a179a156a189a76a170a76a161a4a207 a165a156a161a29a165a100a168a174a167a7a181a171a167a7a172a117a165a156a170a81a173a29a161a174a165a166a182a16a163a137a181a171a167a192a179a156a183a24a170a76a179a156a189a137a170a76a161a22a160a171a170a18a173a177a159a137a167a99a181a162a165a156a170a137a175a156a189a76a165a156a175a156a167a156a198 a232a86a173a174a165a156a168a72a173a174a160a176a170a76a175a20a183a188a168a174a179a156a182 a173a177a159a76a167a113a213a35a170a137a175a81a181a176a160a162a161a177a159a79a170a66a165a117a173a177a189a76a168a174a165a156a181a151a203a230a175a156a167a121a170 a184 a167a121a168a206a190a52a179a156a168 a184 a161a7a207 a161a177a167a7a167 a184 a170a137a179a156a189a76a170a76a161 a190a47a167a121a168a177a167a119a179a156a180a139a173a186a165a166a160a171a170a137a167 a184 a180a157a193a246a163a137a168a174a179a166a197a54a167a121a187a4a173a177a160a171a179a156a170a254a189a66a161a72a160a171a170a137a175a185a165 a161a174a187a7a165a166a170a76a170a137a167 a184 a165a156a170 a184 a231a99a241a52a255a29a167 a184 a180a137a160a171a181a171a160a176a170a76a175a156a189a76a165a156a181a113a255a29a179a156a182a109a165a156a170a137a160a162a165a166a170a139a203a230a213a35a170a137a175a81a181a176a160a162a161a177a159 a184 a160a162a187a130a173a174a160a171a179a156a170a76a165a156a168a177a193a156a198a52a231a61a170a137a167a99a182a109a165a117a197a54a179a81a168a22a187a7a181a162a165a156a161a174a161a22a179a166a183a88a161a72a167a121a167 a184 a187a7a165a156a170 a184 a160 a184 a165a117a173a174a167a121a161a22a190a52a167a7a168a174a167 a165a166a189a137a173a177a179a156a182a109a165a166a173a177a160a162a187a7a165a156a181a171a181a176a193a111a165a156a170 a184 a161a177a193a139a161a54a173a174a167a7a182a109a165a166a173a177a160a162a187a7a165a156a181a176a181a171a193a29a167a121a181a176a160a171a182a16a160a171a170a76a165a166a173a177a167 a184 a207a7a170a76a165a166a182a16a167a121a181a171a193 a173a177a159a76a167a11a182a206a189a76a181a151a173a174a160a176a203a106a175a81a167a7a170 a184 a167a121a168a29a187a7a165a156a161a177a167a99a190a29a159a137a167a121a168a177a167a11a165a16a182a109a165a156a181a171a167a45a165a156a170 a184 a183a188a167a7a182a109a165a156a181a171a167a204a163a66a165a166a160a171a168 a161a177a159a76a165a166a168a174a167a204a173a177a159a137a167a11a161a174a165a166a182a16a167a61a173a177a168a186a165a166a170a76a161a177a181a162a165a117a173a174a160a176a179a81a170a113a220a188a167a156a198a175a76a198a35a173a177a159a137a167a99a182a109a165a81a161a177a187a7a189a137a181a171a160a171a170a137a167a111a170a137a179a81a189a137a170 a70a72a80a14a67a37a84a145a73a75a60a90a91a31a68a72a73a100a71a100a88a43a80a43a70a37a68a42a71a75a62a65a60a146a83a75a80a14a60a90a91a18a80a43a70a41a77a58a73a7a70a98a79a46a62a65a67a69a68a72a73a75a70a72a62a65a88a87a71a7a64a61a70a72a80a87a71a7a67a37a73a22a60a81a67a14a147a3a71a75a60a46a91 a68a72a79a46a62a65a67a61a71a75a67a37a67a37a66a81a97a99a84a81a68a72a62a65a73a22a60a95a62a65a67a61a92a75a71a75a64a65a62a74a91a46a71a39a68a72a80a87a91a138a80a14a97a99a84a81a62a121a70a72a62a74a88a14a71a75a64a65a64a121a148a9a149 a150a43a151 a73a75a70a98a67a37a73a22a97a99a80a137a88a14a73a7a70a72a84a145a73a75a70a42a71a19a147a61a68a72a79a81a80a137a67a69a148a18a67a69a68a72a80a14a97a152a97a111a71a14a148a153a60a46a73a75a68a98a154a145a80a155a71a7a154a46a64a65a80a137a68a72a73 a80a43a94a19a68a37a70a42a71a75a88a16a68a142a156a7a157a126a67a37a80a43a80a87a91a81a67a78a154a145a80a14a88a87a71a75a66a81a67a37a80a158a73a7a77a24a68a72a79a46a80a142a77a38a70a72a80a87a159a9a66a81a80a14a60a46a88a43a148a5a88a14a73a22a60a81a67a69a68a37a70a42a71a75a62a65a60a9a68a72a67a115a62a65a97a41a134 a84a145a73a22a67a37a80a14a91a44a149 a160a22a161a37a162a142a163a164a7a163a164a7a161 a160a22a165a124a161a37a166 a167a169a168a16a160a90a168a42a170a24a168a43a171 a172a132a173a16a174a124a175a37a176a75a177a163a164a75a161 a160a22a165a124a161a37a166 a167a89a168a42a160a90a168a16a170a24a168a16a171 a178a24a179 a162a142a173a16a164 a180 a139a16a139 a181 a168 a181 a168 a181 a168 a181 a162a142a173a43a164 a112 a180a43a182a43a183 a181 a168 a181 a168 a181 a168 a181 a184 a163a165a12a177 a139 a180a42a185 a186a187a85a168 a181 a168a43a188a187a85a168 a181 a189 a179a37a190 a139 a183 a112 a188a187a89a168 a181 a168a14a188a187a33a168 a181 a174a124a163a174a40a191a104a161a37a165 a192a43a183 a181 a168 a181 a168a43a193a132a168 a181 a189 a165 a179 a191a12a194a75a161a37a165 a112a72a195 a183 a181 a168 a181 a168 a181 a168 a181 a162 a179 a191a12a194a7a161a37a165 a139 a183a16a196 a181 a168 a181 a168 a181 a168 a181 a197 a173a16a191a12a194a75a161a37a165 a139 a185a43a183 a181 a168 a181 a168 a181 a168 a181 a178 a163 a197 a161 a180 a195 a139 a181 a168 a181 a168 a181 a168 a181 a194a87a176a75a174 a189 a173a43a164a7a198 a112 a196a42a185 a181 a168 a181 a168 a181 a168 a181 a198a7a173a43a176 a184 a194a14a191a12a161a37a165 a182a43a180 a186a187 a168 a181 a168 a181 a168 a181 a174 a179 a164 a112 a182 a112 a188a187 a168 a181 a168 a181 a168 a181 a198a75a173a16a176 a184 a194a14a191a12a161a37a165a124a199a93a163a164a39a199a38a177a173 a178 a112 a181 a168 a181 a168 a181 a168a14a200 a174 a179 a164a39a199a38a163a164a7a199a93a177a173 a178 a192 a181 a168 a181 a168 a181 a168a43a200 a174a40a191a12a161a37a201a1a198a7a173a43a176 a184 a191a12a194a75a161a37a165 a112 a202 a168 a202 a168 a181 a168 a181 a174a40a191a12a161a37a201a75a174 a179 a164 a180 a202 a168 a202 a168 a181 a168 a181 a184 a165a124a173a43a164a7a198a75a162 a179 a191a12a194a75a161a37a165 a112 a185 a202 a168 a181 a168 a181 a168 a181 a184 a165a124a173a43a164a7a198 a197 a173a16a191a12a194a7a161a37a165 a112a42a203 a202 a168 a181 a168 a181 a168a43a200 a184 a165a124a173a43a164a7a198a75a198a7a173a43a176 a184 a194a14a191a12a161a37a165 a180 a181 a168 a181 a168 a181 a168 a181 a184 a165a124a173a43a164a7a198a7a174 a179 a164 a203 a181 a168 a181 a168 a181 a168 a181 a173a16a176a75a164a14a191 a112a43a112 a181 a168 a181 a168 a202 a168 a181 a176a75a164a7a175a37a177a161 a139 a183 a181 a168 a181 a168 a181 a168 a181 a164a75a163a161a37a175a37a161 a182 a181 a168 a181 a168 a181 a168 a181 a164a7a161a37a201a75a194a7a161 a178 a112a43a112 a181 a168 a181 a168 a181 a168 a181 a189 a165a124a163a198a75a161 a180a43a182 a202 a168 a181 a168 a181 a168 a181 a184 a165 a179a87a179 a162 a192 a202 a168 a202 a168 a181 a168 a181 a184 a163a165a124a177 a197 a165a124a163a161a37a164a7a198 a192 a202 a168 a202 a168 a186a187 a168 a202 a189 a179a37a190 a197 a165a12a163a161a37a164a75a198 a112 a181 a168 a202 a168 a186a187 a168 a202 a177a173a43a198 a190 a183 a139 a181 a168 a202 a168 a181 a168 a181 a184 a161a37a164a14a191a104a177a161a37a162a142a173a43a164 a139 a183 a181 a168 a202 a168 a181 a168 a181 a162a142a163a174a40a191a12a165a12a161a37a174a124a174 a196 a202 a168 a181 a168 a181 a168 a181 a162a142a163a174a40a191a104a161a37a165 a192 a202 a168 a202 a168 a202 a168 a181 a166a87a176a7a161a37a161a37a164 a139 a183 a181 a168 a181 a168a43a204a55a168 a181 a205 a163a164 a184 a185 a139 a181 a168 a181 a168 a181 a168 a181 a201a7a165a124a163a164a7a175a37a161a37a174a12a174 a203 a202 a168 a181 a168 a181 a168 a181 a201a7a165a124a163a164a7a175a37a161 a183 a181 a168 a181 a168 a181 a168 a181 a184 a179a37a206 a161a37a165a124a164a7a161a37a174a12a174 a185 a181 a168 a202 a168 a181 a168a14a200 a184 a179a37a206 a161a37a165a124a164 a179 a165 a196a16a185 a202 a168 a181 a168a14a204a85a168 a181 a198a7a176a7a175a26a194a7a161a37a174a12a174 a112 a202 a168 a181 a168 a181 a168a14a200 a198a7a176 a205 a161 a183 a181 a168 a181 a168 a181 a168 a181 a161a37a162a142a201a7a165a124a161a37a174a12a174 a195 a202 a168 a181 a168 a181 a168 a181 a161a37a162a142a201a1a161a37a165 a179 a165 a112a43a112 a181 a168 a181 a168 a202 a168 a181 a189 a173a43a165 a179 a164a7a161a37a174a124a174 a139 a202 a168 a181 a168 a181 a168 a181 a189 a173a43a165 a179 a164 a180 a202 a168 a181 a168 a181 a168 a181 a178 a163a191a12a175a26a194 a112a72a195 a202 a168 a181 a168 a181 a168a14a200 a174 a179 a177a198a7a163a161a37a165 a185a14a180 a181 a168 a181 a168 a181 a168 a181 a173a43a175a69a191a12a165a124a161a37a174a124a174 a112a42a203 a181 a168 a181 a168 a188a187 a168 a181 a173a16a175a69a191 a179 a165 a185a14a180 a181 a168 a181 a168 a188a187 a168 a181 a178 a173a43a163a191a12a165a124a161a37a174a124a174 a185 a181 a168 a181 a168 a188a187 a168 a181 a178 a173a16a163a191a12a161a37a165 a112a43a112 a181 a168 a181 a168 a188a187 a168 a181 a162a142a173a43a165a124a161 a112 a192 a181 a168 a202 a168 a181 a168 a181 a174a40a191a104a173a16a177a177a163 a179 a164 a203 a181 a168 a202 a168 a181 a168a43a200 a175 a179a37a178 a180 a195 a181 a168 a181 a168 a181 a168 a181 a189 a176a7a177a177 a139 a182 a181 a168 a181 a168a14a204a85a168 a181 a189 a163a191a12a175a26a194 a196 a181 a168 a181 a168 a181 a168a14a200 a198 a179 a184 a196a43a192 a181 a168 a181 a168 a181 a168 a181 a194a75a161a37a164 a139 a180 a181 a168a43a204a55a168 a202 a168 a181 a165 a179a87a179 a174a40a191a12a161a37a165 a192 a202 a168 a181 a168 a181 a168 a202 a198 a179 a161 a112 a202 a168 a202 a168 a181 a168a14a200 a174a40a191a12a173 a184 a182 a181 a168 a202 a168 a181 a168 a181 a207 a156a22a208a75a156 a209a7a210a1a208a39a211 a158a24a165a166a180a137a181a171a167a111a238a156a191 a114 a71a7a68a72a66a81a70a42a71a7a64a9a83a22a80a14a60a46a91a81a80a43a70a89a67a37a80a14a80a87a91a126a60a46a73a22a66a81a60a46a67a89a62a65a60a82a212a55a60a81a83a22a64a65a62a65a67a37a79a82a213a3a62a121a68a72a79a126a68a72a79a46a80a14a62a121a70 a77a38a70a72a80a14a159a19a66a81a80a14a60a46a88a43a62a74a80a43a67a137a62a74a60a214a68a72a79a46a80a100a215a217a216a18a218a219a71a75a60a90a91a217a220a78a70a72a73a87a213a3a60a29a88a14a73a7a70a72a84a145a73a75a70a42a71a31a88a14a73a22a97a82a154a46a62a65a60a46a80a87a91 a71a75a60a46a91a221a68a72a79a46a80a43a62a65a70a100a84a81a70a72a73a87a86a37a80a43a88a43a68a72a62a65a73a22a60a222a73a22a60a9a68a72a73a146a211a223a64a74a71a75a60a81a83a22a66a46a71a75a83a22a80a43a67a219a224a40a225a117a226a117a225a158a73a75a97a111a71a75a60a46a62a74a71a7a60a227a147 a151 a226 a151 a70a72a80a14a60a81a88a16a79a44a147a82a212a115a226a228a216a19a84a90a71a75a60a81a62a65a67a37a79a227a147a41a216a46a226a228a216a18a64a65a73a39a92a1a80a14a60a81a80a7a229a42a230 a193 a97a99a80a14a71a75a60a46a67a63a73a22a60a81a80a153a73a75a70 a97a99a73a75a70a72a80a142a68a37a70a42a71a7a60a46a67a37a64a74a71a7a68a72a62a65a73a22a60a81a67a14a147a81a71a75a64a65a64a46a213a3a62a121a68a72a79a99a88a14a73a75a70a37a70a72a80a43a88a43a68a49a83a75a80a14a60a90a91a18a80a43a70a87a147a81a231a214a97a99a80a14a71a75a60a46a67a85a154a145a73a7a68a72a79 a83a22a80a43a60a90a91a81a80a16a70a37a134a104a88a43a73a75a70a37a70a72a80a14a88a43a68a82a71a7a60a90a91a76a62a65a60a46a88a43a73a75a70a37a70a72a80a14a88a43a68a126a68a37a70a42a71a7a60a46a67a37a64a74a71a7a68a72a62a65a73a22a60a81a67a14a147a78a232a29a60a46a73a95a68a37a70a42a71a7a60a46a67a37a64a74a71a7a134 a68a72a62a65a73a22a60a44a147a132a226a233a97a111a71a75a64a65a80a155a71a7a60a90a91a219a77a58a80a43a97a111a71a75a64a65a80a155a79a90a71a87a92a1a80a128a68a72a79a46a80a155a67a72a71a7a97a99a80a137a66a46a60a46a62a74a159a9a66a46a80a128a68a37a70a42a71a7a60a46a67a69a134 a64a74a71a7a68a72a62a65a73a22a60a44a147 a188a187 a154a145a73a7a68a72a79a52a83a22a80a14a60a46a91a81a80a43a70a37a134a12a88a14a73a7a70a37a70a72a80a14a88a43a68a5a71a75a60a46a91a76a80a87a159a9a66a90a71a7a64a78a68a37a70a42a71a75a60a81a67a37a64a74a71a7a68a72a62a65a73a22a60a81a67a14a147 a186a187 a83a22a80a43a60a90a91a81a80a16a70a37a134a104a88a43a73a75a70a37a70a72a80a14a88a43a68a78a71a7a60a90a91a82a80a14a159a19a66a46a71a75a64a19a68a37a70a42a71a75a60a81a67a37a64a93a71a39a68a72a62a65a73a22a60a46a67a14a147a9a68a72a79a81a80a49a64a74a71a7a68a37a68a72a80a43a70a55a79a46a71a39a92a19a62a65a60a46a83a132a71 a213a142a70a72a73a22a60a81a83a5a83a75a80a14a60a90a91a18a80a43a70a126a224a40a80a22a149a83a81a149a117a119a122a65a234a22a235a81a123a82a71a7a60a90a91a98a236a18a237a22a125a69a123a58a238a14a237a98a62a74a60a128a216a18a84a46a71a75a60a46a62a65a67a37a79a145a229a42a147a46a239a228a68a37a70a72a66a81a68a72a79 a213a142a71a7a67a5a60a81a73a75a68a99a71a87a92a75a71a75a62a65a64a74a71a75a154a81a64a74a80a63a224a124a71a75a64a65a64a49a68a72a79a18a70a72a80a14a80a95a216a18a64a65a73a39a92a1a80a14a60a46a80a111a64a65a62a65a154a81a70a42a71a39a70a37a148a135a91a81a62a65a88a43a68a72a62a65a73a75a60a90a71a7a70a72a62a65a80a14a67 a71a87a92a22a71a7a62a65a64a93a71a7a154a46a64a65a80a155a68a72a73a52a66a46a67a95a91a81a73a52a60a81a73a75a68a95a62a65a60a46a88a14a64a65a66a90a91a18a80a137a83a22a80a14a60a46a91a81a80a43a70a98a62a65a60a81a77a38a73a75a70a72a97a111a71a39a68a72a62a74a73a75a60a214a71a75a60a46a91 a68a72a79a46a80a228a240a138a241a132a242a18a243a142a212a55a244a117a243a214a64a65a80a43a94a18a62a65a88a14a73a75a60a137a91a81a73a9a80a14a67a3a60a81a73a75a68a61a88a14a73a22a60a9a68a42a71a7a62a74a60a95a68a72a79a46a80a14a67a37a80a132a60a81a73a22a66a81a60a46a67a16a229 a11a14a6a43a143a89a10a40a36a46a160a162a161a22a165a206a173a177a168a186a165a166a170a76a161a177a181a162a165a117a173a177a160a171a179a81a170a16a179a166a183a46a180a90a179a166a173a174a159a153a20a19a10a40a27a87a36a24a165a166a170 a184a146a245 a6a9a246a93a207a66a165a81a161a22a190a47a167a121a181a176a181a64a165a81a161 a15a18a17a19a2a18a20a22a21a24a23a26a25a7a27a192a165a156a170 a184 a4a7a6a9a8a64a221a186a198a88a223a111a181a171a181a157a179a166a173a174a159a137a167a7a168a42a161a72a167a121a167 a184 a161a46a190a52a167a7a168a174a167a115a168a174a167a4a173a174a165a156a160a171a170a137a167 a184 a220a128a160a176a170a137a203 a187a4a181a171a189 a184 a160a176a170a76a175a204a163a90a179a157a179a156a168a47a179a156a170a137a167a108a161a174a221a42a160a171a170a25a179a156a168 a184 a167a121a168a88a173a177a179a43a165a93a172a81a179a156a160 a184 a189a76a161a72a167a192a179a166a183a64a181a162a165a166a170a137a175a81a189a76a165a166a175a81a167a4a203 a161a177a163a66a167a108a187a4a160a176a208a66a187a206a195a86a170a76a179a117a190a29a181a176a167 a184 a175a156a167a156a198a206a252a137a179a81a168a45a167a4a201a137a165a166a182a16a163a137a181a171a167a156a207a90a179a81a170a137a167a25a179a166a183a115a173a174a159a137a167a16a255a29a179a156a182a109a165a166a203 a170a137a160a162a165a166a170a20a161a72a167a121a167 a184 a161a7a207a24a0a3a2a94a220a72a4a39a6a19a8a32a221a61a160a162a161a204a165a166a181a162a161a72a179a109a165a18a172a156a167a121a168a177a193a18a183a188a168a174a167a75a57a86a189a137a167a7a170a86a173a204a183a188a179a156a168a174a182a49a179a166a183 a173a177a159a76a167a61a172a81a167a7a168a174a180a31a17a132a0a164a220a42a23a69a6 a245 a25a93a221a130a207a139a165a156a170 a184 a173a174a159a137a167a7a168a174a167a4a183a188a179a81a168a177a167a111a182a109a165a156a170a157a193a206a172a81a167a7a168a174a180a76a165a166a181a90a187a4a179a156a170a137a203 a173a177a167a7a201a157a173a174a161a11a165a156a168a177a167a16a187a4a179a81a170a76a161a177a160a184 a167a7a168a174a167 a184 a180a157a193a147a173a174a159a137a167a103a161a177a193a139a161a54a173a174a167a7a182a202a183a188a168a174a179a156a182a71a173a177a159a137a167a16a180a90a167a7a175a81a160a176a170a137a203 a170a137a160a171a170a137a175a76a198a35a231a61a170a137a167a204a163a90a179a81a161a174a161a72a160a171a180a137a181a171a167a192a165a156a163a137a163a137a168a174a179a81a165a156a187a186a159a109a173a177a179a25a187a4a179a156a168a174a168a174a167a121a187a130a173a47a173a177a159a137a160a162a161a52a163a137a168a174a179a156a180a137a181a171a167a121a182 a160a162a161a90a173a177a179a111a172a81a167a7a168a174a160a176a183a188a193a29a173a177a159a76a165a166a173a150a173a177a159a76a167a35a161a72a167a121a167 a184 a161a64a167a7a201a157a173a177a168a186a165a156a187a130a173a174a167 a184 a183a188a168a174a179a156a182a215a173a174a159a137a167a35a180a137a160a171a181a171a160a171a170a137a175a156a189a66a165a166a181 a184 a160a162a187a130a173a174a160a171a179a156a170a76a165a156a168a177a193a109a159a66a165a93a172a156a167a43a179a81a170a137a181a171a193a18a170a76a179a156a182a16a160a171a170a76a165a166a181a27a182a16a167a121a165a166a170a76a160a176a170a76a175a81a161a22a180a157a193a147a187a186a159a137a167a121a187a186a195a157a160a171a170a137a175 a173a177a159a76a167a7a182a9a160a171a170 a184 a160a171a172a157a160a184 a189a76a165a166a181a171a181a171a193a20a160a171a170a215a165a196a181a171a160a171a180a137a168a186a165a166a168a174a193 a184 a160a162a187a130a173a174a160a176a179a81a170a76a165a166a168a174a193a166a198a114a199a194a167 a184 a160 a184 a170a137a179a156a173a35a173a174a165a156a195a156a167a29a173a174a159a137a160a162a161a35a165a166a163a137a163a76a168a177a179a86a165a156a187a186a159a64a207a166a173a174a168a177a193a157a160a171a170a137a175a45a173a174a179a11a195a156a167a121a167a7a163a25a173a177a159a76a167a192a165a166a182a16a179a81a189a137a170a86a173a35a179a166a183 a161a177a189a137a163a66a167a121a168a177a172a157a160a162a161a177a160a176a179a81a170a109a182a16a160a171a170a137a160a171a182a109a165a166a181a106a198 a101a33a102a40a101 a247a82a248a85a108a12a107a115a106a90a109a78a249a81a106a153a250a252a251a85a107a115a106a90a253a12a108a104a109a78a110 a223a111a180a66a161a72a179a81a181a176a189a137a173a177a167a43a168a186a165a117a173a174a159a137a167a7a168a61a173a177a159a66a165a166a170a200a168a177a167a121a181a171a165a166a173a177a160a171a172a156a167a109a220a128a170a137a179a156a168a174a182a109a165a166a181a171a160a171a216a7a167 a184 a221a47a183a188a168a174a167a75a57a86a189a137a167a7a170a137a203 a187a4a160a171a167a108a161a46a165a156a168a177a167a52a189a76a161a177a167 a184 a173a174a179a204a187a121a165a166a163a139a173a174a189a137a168a174a167a47a180a90a179a166a173a174a159a43a173a174a159a137a167 a184 a160a162a161a54a173a174a168a177a160a171a180a137a189a139a173a174a160a171a179a156a170a76a165a156a181a166a160a171a170a139a183a188a179a156a168a177a203 a182a109a165a117a173a174a160a171a179a156a170a206a165a156a170 a184 a173a177a159a137a167a192a168a177a167a121a181a176a160a162a165a156a180a137a160a171a181a176a160a176a173a54a193a61a179a166a183a90a173a177a159a76a165a166a173a115a160a171a170a139a183a188a179a156a168a174a182a109a165a117a173a174a160a176a179a81a170a109a220a188a180a76a165a81a161a72a167 a184 a179a156a170a206a161a177a165a156a182a16a163a137a181a171a167a35a161a72a160a171a216a7a167a93a221a186a198a42a234a111a170a76a187a7a167a7a168a177a173a174a165a166a160a171a170a86a173a54a193a192a160a162a161a46a167a4a201a139a163a137a181a171a160a162a187a4a160a176a173a177a181a171a193a29a168a174a167a7a163a137a168a174a167a121a161a177a167a7a170a86a173a174a167 a184 a165a156a161a192a165a16a187a4a181a162a165a156a161a174a161a29a187a7a165a156a181a176a181a171a167 a184 a219a16a57a81a189a76a167a121a161a72a173a177a160a171a179a156a170a76a165a156a180a137a181a171a167a130a222a186a198a88a248a56a170a140a173a177a159a137a160a162a161a29a182a109a165a156a170a137a170a137a167a7a168a121a207a137a179a156a170a76a167 a187a7a165a156a163a139a173a177a189a76a168a177a167a108a161a45a170a137a179a166a173a43a179a81a170a137a181a171a193a140a173a177a159a137a167a103a167a7a172a157a160 a184 a167a7a170a76a187a7a167a25a180a137a189a139a173a206a165a156a181a171a161a177a179a18a173a177a159a137a167a109a181a162a165a81a187a186a195a147a179a166a183 a167a7a172a157a160 a184 a167a121a170a76a187a4a167a156a198a24a252a137a179a81a168a42a167a4a201a137a165a166a182a16a163a137a181a171a167a156a207a93a160a176a183a32a165a61a170a76a179a156a189a137a170a138a254a48a165a166a163a137a163a90a167a121a165a156a168a174a161a24a160a171a170a138a50a61a183a188a167a121a182a25a203 a160a171a170a137a160a171a170a137a167a22a187a4a179a156a170a86a173a174a167a4a201a157a173a174a161a7a207a66a238a22a182a109a165a156a161a174a187a4a189a76a181a176a160a171a170a137a167a52a187a4a179a81a170a81a173a174a167a4a201a157a173a7a207a157a165a166a170 a184a128a255 a179a166a173a174a159a137a167a7a168a47a187a4a179a156a170a137a203 a173a177a167a7a201a157a173a174a161a29a190a29a160a176a173a177a159a140a170a137a179a16a165a93a172a117a165a166a160a171a181a162a165a166a180a76a181a176a167a192a175a156a167a7a170 a184 a167a7a168a29a160a171a170a139a183a188a179a81a168a177a182a109a165a166a173a177a160a171a179a156a170a64a207a81a173a177a159a137a167a43a175a156a167a7a170a137a203 a184 a167a121a168 a184 a160a171a161a72a173a177a168a174a160a171a180a137a189a139a173a174a160a176a179a81a170a25a179a166a183a55a254a114a160a162a161a115a182a16a179 a184 a167a121a181a176a167 a184 a165a156a161a22a252a137a168a174a167a75a57a86a189a137a167a121a170a76a187a4a193a64a220 a255 a207a121a50a139a207a171a238a108a221 a168a186a165a117a173a177a159a76a167a7a168a52a173a177a159a76a165a156a170a140a229a35a168a177a179a81a180a76a165a166a180a76a160a176a181a171a160a176a173a54a193a64a220a128a244a137a198a65a45a18a136a157a207a244a139a198a143a243a18a136a156a221a130a198 a158a22a159a137a167a18a181a171a167a121a172a156a167a7a181a52a179a166a183a204a187a4a179a156a170a137a208 a184 a167a7a170a66a187a4a167a5a160a176a170a212a173a177a159a137a167a140a179a156a180a66a161a72a167a121a168a177a172a81a167 a184a196a184 a160a162a161a72a173a177a168a174a160a176a180a76a189a139a203 a173a177a160a171a179a81a170a147a160a171a161a111a167a75a57a86a189a76a165a166a181a27a173a177a179a1a0a3a2a5a4a7a6a9a8a11a10a13a12a15a14a17a16a19a18a130a233a90a160a171a170a140a173a174a159a137a167a43a175a81a160a176a172a81a167a7a170a140a167a4a201a137a165a156a182a16a163a137a181a171a167a166a207 a173a177a159a76a167a45a187a7a179a156a170a139a208 a184 a167a7a170a76a187a7a167a61a160a162a161a20a0a21a2 a22 a22a24a23a26a25a24a23a28a27a30a29a32a31a34a33a35 a165a166a173a22a165a156a170a18a165a156a180a76a161a72a179a81a181a171a189a139a173a177a167a192a183a188a168a177a167a7a203 a57a86a189a137a167a7a170a66a187a4a193a109a179a156a183a52a238a108a244a139a198 questionable masculine feminine learning a36a38a37a40a39a24a41a43a42a45a44a47a46a48a46a49a39a51a50a19a39a24a52a24a53a55a54a43a54a43a56a57a37a43a58a20a54a43a52a59a46a34a60a61a42a17a50a24a50a63a62a49a64a57a42a17a53a55a52a59a37a65a56a66a37a65a58a67a44a47a42a68a60a63a46a55a69a7a42a68a50a70a42a17a50a72a71 a50a59a42a61a37a73a39a59a56a74a53a49a64a57a64a57a75a76a50a59a41a43a56a66a77a74a39a59a56a57a37a43a58a79a78a34a56a74a50a72a39a59a52a24a56a57a44a43a80a34a39a59a56a57a46a81a37a65a53a49a64a82a69a79a53a81a50a59a50a3a77a83a52a59a46a81a69a84a39a24a41a43a42a86a85a81a80a65a42a17a50a72a71 a39a59a56a57a46a81a37a65a53a49a44a43a64a57a42a87a60a63a64a74a53a55a50a24a50a21a39a59a46a86a46a55a37a43a42a88a46a55a77a70a52a24a42a17a53a55a64a82a58a55a42a61a37a47a78a34a42a61a52a67a60a63a64a74a53a81a50a59a50a59a42a17a50a61a89 a90a13a91a57a92 a93a40a94a96a95a13a97a17a98a73a99a82a97a79a100a101a94a26a94a65a97a68a102a61a97a17a103a15a104a34a105a28a105a107a106a9a95a70a108 a109a45a41a43a42a21a44a47a46a48a46a49a39a51a50a19a39a24a52a24a53a55a54a43a54a43a56a57a37a43a58a3a54a65a52a59a46a34a60a63a42a68a50a59a50a28a50a19a39a51a53a49a52a59a39a24a50a110a44a73a75a111a60a61a46a55a64a57a64a57a42a17a60a112a39a24a56a57a37a43a58a67a50a19a39a51a53a15a39a59a56a74a50a72a71 a39a59a56a74a60a17a50a20a46a15a113a81a42a61a52a87a39a59a41a65a42a79a60a63a46a55a37a73a39a24a42a63a114a48a39a24a50a88a56a57a37a115a39a24a41a43a42a79a60a63a46a81a52a59a54a65a80a65a50a87a116a67a56a117a39a24a41a1a116a67a41a65a56a57a60a51a41a1a39a59a41a65a42 a50a59a42a61a42a17a78a65a50a118a60a63a46a55a71a119a46a34a60a17a60a63a80a43a52a17a89a118a109a45a41a43a42a17a50a59a42a40a53a55a52a59a42a111a120a47a64a117a39a24a42a61a52a24a42a17a78a121a80a65a50a59a56a57a37a43a58a79a53a7a77a83a52a24a42a17a85a73a80a43a42a17a37a65a60a63a75 a39a59a41a65a52a59a42a68a50a72a41a43a46a81a64a74a78a122a50a59a42a61a37a65a50a59a56a66a39a59a56a57a113a55a42a123a39a59a46a111a44a96a46a49a39a24a41a122a39a24a41a43a42a118a50a59a56a57a124a61a42a45a46a49a77a96a39a59a41a43a42a3a60a61a46a55a52a24a54a43a80a65a50a125a53a55a37a65a78 a39a59a41a65a42a88a50a59a42a61a42a68a78a79a64a57a56a74a50a19a39a17a89a107a126a67a78a65a78a34a56a66a39a59a56a57a46a55a37a65a53a55a64a43a120a65a64a66a39a24a42a61a52a24a56a66a37a65a58a30a56a74a50a127a78a43a46a55a37a43a42a87a44a48a75a79a78a34a56a74a50a59a60a17a53a49a52a51a78a48a71 a56a57a37a43a58a128a60a61a46a55a37a73a39a59a42a61a114a73a39a51a50a79a116a67a56a66a39a59a41a129a41a65a56a66a58a81a41a129a52a59a42a17a64a74a53a15a39a59a56a57a113a81a42a121a60a61a46a49a71a130a46a34a60a61a60a63a80a65a52a59a52a24a42a61a37a65a60a61a42a131a116a67a56a66a39a59a41 a116a127a46a55a52a51a78a43a50a67a46a55a80a43a39a24a50a59a56a57a78a43a42a88a39a59a41a43a42a30a37a65a46a55a80a43a37a131a64a57a56a74a50a19a39a17a62a65a44a65a53a81a50a72a42a68a78a121a46a55a37a121a39a59a41a65a42a30a42a17a50a72a39a59a56a57a69a79a53a15a39a24a42a17a78 a60a63a46a15a113a81a42a61a52a51a53a49a58a81a42a118a46a49a77a28a39a59a41a43a56a74a50a67a53a11a113a15a53a49a56a57a64a74a53a49a44a65a64a66a42a67a37a65a46a55a80a43a37a121a64a57a56a74a50a19a39a17a89 a132 a37a65a60a63a42a5a52a24a42a61a64a57a56a74a53a49a44a65a64a66a42a133a60a63a46a81a37a73a39a59a42a63a114a48a39a51a50a131a56a57a37a134a39a59a42a61a52a24a69a79a50a131a46a55a77a79a58a55a52a51a53a49a69a7a69a79a53a15a39a24a56a74a60a61a53a49a64 a58a55a42a17a37a65a78a34a42a17a52a30a53a49a52a24a42a79a78a34a42a63a39a24a42a61a52a24a69a7a56a66a37a65a42a17a78a13a62a82a39a24a41a43a42a76a78a34a56a74a50a72a39a59a52a24a56a66a44a65a80a34a39a59a56a57a46a55a37a47a50a3a77a83a46a81a52a40a53a49a64a57a64a107a39a59a41a65a42 a116a127a46a55a52a51a78a43a50a127a56a66a37a135a39a59a41a65a42a87a37a65a46a55a80a43a37a136a64a57a56a57a50a72a39a67a53a49a52a24a42a20a69a7a46a34a78a34a56a66a120a65a42a68a78a76a53a55a60a17a60a63a46a81a52a24a78a34a56a57a37a43a58a40a39a59a46a101a39a59a41a65a42 a37a48a80a43a69a101a44a47a42a17a52a82a46a49a77a34a52a59a42a17a64a57a56a57a53a55a44a43a64a57a42a110a60a63a46a81a37a73a39a59a42a63a114a48a39a51a50a82a116a67a56a66a39a59a41a88a116a67a41a43a56a74a60a51a41a118a39a24a41a43a42a61a75a88a60a63a46a55a71a119a46a34a60a17a60a63a80a43a52a17a89 a137a45a53a55a50a59a42a17a78a138a46a55a37a139a53a81a50a59a50a59a46a34a60a63a56a74a53a15a39a24a56a66a46a81a37a32a50a72a39a24a53a15a39a24a56a74a50a19a39a24a56a57a60a17a50a136a116a67a56a117a39a24a41a138a39a59a41a43a42a68a50a72a42a128a78a43a42a61a52a24a56a66a113a81a42a17a78 a60a63a46a81a37a73a39a59a42a63a114a48a39a51a50a63a62a47a53a81a78a43a78a34a56a66a39a59a56a57a46a81a37a65a53a49a64a13a37a43a46a81a37a34a71a130a50a59a42a61a42a68a78a136a37a43a46a55a80a43a37a47a50a67a116a67a56a66a39a59a41a121a58a55a42a17a37a65a78a34a42a61a52a20a53a55a50a72a71 a50a59a56a66a58a81a37a43a69a7a42a61a37a73a39a51a50a111a53a49a44a96a46a15a113a55a42a79a53a121a39a24a41a43a52a59a42a68a50a72a41a65a46a55a64a74a78a133a53a49a52a24a42a79a53a55a78a43a78a34a42a68a78a140a39a59a46a141a39a59a41a43a42a76a50a59a42a61a42a68a78 a64a57a56a74a50a19a39a28a53a55a37a65a78a111a39a24a41a43a42a127a44a47a46a48a46a49a39a51a50a19a39a24a52a24a53a55a54a43a54a43a56a57a37a43a58a118a53a55a64a57a58a55a46a55a52a24a56a66a39a59a41a43a69a142a56a66a39a59a42a61a52a51a53a15a39a24a42a17a50a110a80a43a37a73a39a59a56a57a64a81a37a65a46 a69a7a46a55a52a24a42a88a50a72a80a65a60a51a41a136a37a43a46a81a80a43a37a65a50a45a46a55a52a3a60a61a46a55a37a73a39a59a42a61a114a48a39a24a50a67a53a49a52a24a42a20a77a83a46a55a80a43a37a65a78a82a89 a109a45a41a43a42a76a37a43a42a68a60a63a42a68a50a59a50a24a53a49a52a24a75a1a50a72a39a24a53a49a39a59a56a74a50a19a39a24a56a74a60a61a50a111a60a61a53a55a37a143a44a47a42a136a60a63a46a81a64a66a64a57a42a68a60a112a39a59a42a68a78a140a44a47a46a55a39a59a41a5a56a57a37 a39a59a42a17a52a59a69a79a50a20a46a49a77a21a39a19a75a48a54a47a42a55a62a110a44a48a75a115a60a63a46a55a80a65a37a81a39a24a56a57a37a43a58a76a42a68a53a55a60a51a41a115a39a19a75a48a54a96a42a86a46a49a77a21a60a61a46a55a37a73a39a59a42a61a114a73a39a88a77a83a46a81a52 a42a17a53a81a60a51a41a86a37a43a46a55a80a43a37a86a46a81a37a43a64a57a75a30a46a55a37a65a60a61a42a67a52a59a42a17a58a81a53a55a52a24a78a34a64a57a42a68a50a59a50a28a41a43a46a15a116a144a69a79a53a49a37a48a75a111a39a59a56a57a69a7a42a68a50a70a39a59a41a65a53a49a39 a60a63a46a81a37a73a39a59a42a63a114a48a39a88a53a49a37a65a78a121a39a24a41a43a42a101a116a21a46a81a52a24a78a136a77a83a46a81a52a59a69a79a145a122a60a63a46a49a71a130a46a34a60a61a60a61a80a43a52a118a56a57a37a121a39a59a41a65a42a101a60a61a46a55a52a24a54a43a80a65a50a61a62 a53a49a37a47a78a7a39a59a46a81a146a55a42a17a37a65a50a63a62a34a44a48a75a7a60a63a46a81a80a43a37a73a39a59a56a57a37a43a58a40a42a68a53a55a60a51a41a76a60a61a46a55a37a73a39a59a42a61a114a48a39a45a53a81a50a123a69a79a53a55a37a73a75a101a39a24a56a66a69a7a42a68a50 a53a55a50a20a56a66a39a87a53a55a54a43a54a47a42a68a53a49a52a51a50a3a56a57a37a131a39a24a41a43a42a101a60a61a46a55a52a24a54a43a80a65a50a20a116a67a56a66a39a59a41a141a53a76a58a55a56a57a113a55a42a17a37a131a37a43a46a55a80a43a37a26a89a111a109a45a41a65a42 a120a65a52a51a50a19a39a118a53a55a54a43a54a43a52a24a46a81a53a81a60a51a41a135a41a65a53a81a50a45a39a59a41a65a42a40a53a55a78a34a113a15a53a55a37a81a39a51a53a49a58a81a42a87a46a55a77a70a44a96a42a61a56a57a37a43a58a7a64a57a42a68a50a59a50a67a50a59a42a61a37a65a50a59a56a66a71 a39a59a56a57a113a81a42a67a39a59a46a40a39a59a41a43a42a87a54a65a53a49a52a59a39a59a56a74a60a61a80a43a64a74a53a49a52a24a56a117a39a24a56a57a42a17a50a28a46a49a77a110a53a30a64a74a53a55a37a43a58a55a80a65a53a55a58a55a42a55a62a55a44a48a75a101a37a65a46a49a39a21a46a15a113a81a42a61a52a59a71 a116a127a42a61a56a57a58a55a41a73a39a59a56a57a37a43a58a135a53a49a37a48a75a115a60a63a46a81a37a81a39a24a42a63a114a48a39a87a147a115a42a17a50a59a54a47a42a68a60a63a56a74a53a49a64a57a64a57a75a135a116a67a41a65a42a61a37a133a50a72a42a17a42a17a78a43a50a88a50a59a80a65a60a51a41 a53a55a50a110a148a150a149a86a56a57a37a101a151a67a46a81a69a79a53a49a37a43a56a74a53a55a37a40a41a65a53a11a113a81a42a127a69a101a80a43a64a66a39a59a56a57a54a43a64a57a42a127a50a72a75a48a37a73a39a24a53a81a60a112a39a59a56a74a60a21a77a83a80a43a37a65a60a63a39a59a56a57a46a55a37a47a50 a152a50a59a42a61a42a30a153a48a42a68a60a112a39a24a56a66a46a81a37a136a154a34a89a66a155a11a156a51a89a125a157a125a114a34a54a47a42a17a52a59a56a57a69a7a42a17a37a81a39a51a50a127a56a66a37a136a151a67a46a55a69a79a53a55a37a43a56a74a53a49a37a79a50a59a41a43a46a15a116a127a42a17a78 a39a59a41a47a53a15a39a86a52a59a42a68a50a72a80a43a64a66a39a51a50a30a46a55a44a43a39a24a53a49a56a57a37a43a42a68a78a143a44a48a75a143a60a63a46a55a37a47a50a72a56a74a78a34a42a17a52a59a56a57a37a43a58a136a39a19a75a48a54a47a42a121a50a72a39a24a53a15a39a24a56a74a50a19a39a24a56a57a60a17a50 a152a9a158a81a158 a89a117a159a158a34a160 a53a55a60a17a60a63a80a43a52a51a53a55a60a61a75a161a53a49a39a76a162a55a162a65a89a163a34a159a160 a60a61a46a15a113a55a42a17a52a24a53a55a58a55a42a68a156a101a53a55a52a59a42a141a50a59a64a57a56a57a58a55a41a73a39a59a64a57a75 a164a51a165a28a166a51a167a112a168a17a169a81a170a38a166a172a171a19a173a73a166a174a167a51a175a61a176a19a177a73a169a81a170a179a178a181a180a182a180a73a175a17a171a179a167a51a175a17a180a73a170a38a178a184a183a81a166a59a176a19a166a112a183a186a185a28a187a67a188a49a189 a168a17a180a81a180a73a175a61a171a72a168a61a171a19a166a112a183a43a190a73a191a107a166a3a169a81a170a38a166a3a168a17a192a181a192a96a178a181a180a73a170a130a171a72a168a61a180a73a167a51a166a24a170a21a175a61a193a110a171a19a173a81a166a45a191a107a175a61a176a72a183a55a189a83a193a57a175a61a176a19a194a111a170a123a178a181a180a101a171a19a173a81a166 a180a73a175a17a169a73a180a122a192a184a178a181a170a130a171a21a168a61a171a150a171a19a173a81a166a45a171a19a178a184a194a111a166a127a175a17a193a82a177a55a176a19a175a15a167a51a166a51a170a38a170a38a178a181a180a73a195a55a190a48a166a51a196a11a166a24a180a122a171a19a173a73a175a17a169a73a195a17a173a86a170a38a175a68a194a111a166a45a175a61a193 a171a19a173a73a166a24a170a38a166a67a178a184a180a81a170a130a171a72a168a17a180a81a167a51a166a51a170a123a183a81a175a88a180a81a175a17a171a150a173a73a168a63a196a68a166a45a180a73a175a17a194a111a178a184a180a73a168a17a192a43a170a130a197a55a180a15a171a72a168a17a167a24a171a19a178a181a167a45a193a57a169a81a180a73a167a24a171a19a178a181a175a17a180a47a198 a44a96a42a63a39a72a39a24a42a61a52a128a39a59a41a65a53a55a37a199a39a59a41a43a46a73a50a72a42a200a46a81a44a34a39a24a53a55a56a57a37a43a42a17a78a201a80a65a50a59a56a57a37a43a58a138a39a59a46a55a146a81a42a61a37a202a50a72a39a24a53a15a39a24a56a74a50a19a39a24a56a57a60a17a50 a152a9a158a81a158 a89a204a203a158a34a160 a53a55a60a61a60a61a80a43a52a51a53a55a60a63a75a143a53a49a39a86a162a48a205a48a89a117a159a11a206 a160 a60a63a46a15a113a55a42a17a52a24a53a55a58a55a42a11a156a111a116a67a41a43a42a17a37a144a50a72a39a24a53a55a52a72a39a59a71 a56a57a37a43a58a141a116a67a56a66a39a24a41a128a37a65a53a49a39a59a80a43a52a51a53a49a64a45a58a55a42a17a37a65a78a34a42a17a52a101a50a59a42a61a42a68a78a43a50a63a62a45a53a49a64a66a39a59a41a65a46a55a80a43a58a81a41a133a39a59a41a43a42a131a78a34a56a66a207a13a42a61a52a59a71 a42a61a37a47a60a63a42a40a56a74a50a67a37a65a46a49a39a87a50a72a39a24a53a49a39a59a56a74a50a72a39a59a56a74a60a61a53a55a64a66a64a57a75a7a50a59a56a66a58a81a37a43a56a66a120a47a60a61a53a55a37a73a39a61a89a45a208a140a42a101a60a51a41a43a46a81a50a59a42a111a39a24a46a79a80a65a50a59a42 a39a19a75a48a54a47a42a45a50a72a39a24a53a15a39a24a56a74a50a19a39a24a56a57a60a17a50a13a77a83a46a55a52a125a53a55a64a66a64a81a46a49a39a24a41a43a42a61a52a70a64a74a53a49a37a43a58a81a80a65a53a49a58a81a42a17a50a82a44a96a42a17a60a17a53a49a80a65a50a59a42a123a46a55a77a43a39a59a41a43a42a17a56a57a52 a42a63a114a34a54a96a42a17a60a63a39a59a42a17a78a136a52a24a46a55a44a43a80a47a50a19a39a24a37a43a42a17a50a24a50a21a39a59a46a7a37a43a46a81a56a57a50a59a42a87a56a66a37a76a39a59a41a43a42a30a78a65a53a15a39a24a53a43a89 a208a140a42a136a56a57a37a73a113a81a42a17a50a72a39a59a56a57a58a81a53a49a39a59a42a68a78a140a203a141a69a7a46a34a78a34a42a61a64a74a50a111a46a55a77a20a60a63a46a81a37a81a39a24a42a63a114a48a39a59a80a47a53a49a64a127a56a66a37a43a77a83a46a55a52a24a69a79a53a15a71 a39a59a56a57a46a81a37a82a209a110a64a57a42a63a77a74a39a17a62a49a52a59a56a57a58a55a41a73a39a17a62a15a53a55a37a65a78a122a44a43a56a57a64a57a53a49a39a59a42a17a52a24a53a55a64a55a60a63a46a81a37a81a39a24a42a63a114a48a39a107a44a65a53a55a50a59a42a17a78a40a46a55a37a40a116a67a41a65a46a55a64a57a42 a116a127a46a55a52a51a78a43a50a131a53a49a37a65a78a142a116a127a46a55a52a51a78a142a50a59a80a34a210a86a114a34a42a17a50a61a89a212a211a43a46a81a52a115a151a67a46a55a69a79a53a55a37a43a56a74a53a49a37a82a62a87a116a21a42a143a78a34a56a74a50a72a71 a60a63a46a15a113a81a42a61a52a24a42a17a78a5a39a59a41a65a53a49a39a79a46a55a37a43a64a57a75a133a39a59a41a65a42a131a64a66a42a61a77a74a39a79a116a67a41a43a46a55a64a57a42a61a71a119a116a127a46a55a52a51a78a5a60a63a46a81a37a73a39a59a42a63a114a48a39a7a56a74a50a86a53 a52a24a42a61a64a57a56a74a53a49a44a43a64a57a42a86a56a57a37a65a78a34a56a74a60a61a53a49a39a59a46a55a52a88a77a83a46a81a52a86a58a55a42a61a37a47a78a34a42a61a52a17a62a107a39a59a41a43a42a136a52a59a56a57a58a81a41a81a39a101a60a63a46a55a37a73a39a24a42a63a114a48a39a101a53a55a37a65a78 a39a59a41a65a42a40a60a63a46a81a37a81a39a24a42a63a114a48a39a59a80a47a53a49a64a110a50a59a80a34a210a86a114a136a56a57a37a34a77a83a46a81a52a59a69a79a53a49a39a59a56a57a46a55a37a135a60a63a46a55a37a73a39a51a53a49a56a57a37a43a56a57a37a43a58a122a53a79a64a66a46a55a39a67a46a49a77 a37a43a46a81a56a57a50a59a42a49a89a200a211a65a46a55a52a7a42a63a114a43a53a55a69a7a54a43a64a57a42a49a62a21a50a59a46a55a69a7a42a136a113a55a42a17a52a59a75a133a77a83a52a24a42a17a85a73a80a43a42a17a37a81a39a76a53a81a78a11a213a19a42a17a60a63a39a59a56a57a113a55a42a68a50 a152a39a24a41a65a53a15a39a107a39a19a75a48a54a43a56a74a60a61a53a55a64a57a64a66a75a20a60a63a46a55a37a47a50a19a39a24a56a117a39a24a80a34a39a59a42a21a52a59a56a57a58a81a41a81a39a107a60a63a46a81a37a81a39a24a42a63a114a48a39a51a156a28a50a59a80a65a60a51a41a40a53a55a50a127a214a7a215a15a216a59a217 a152a59a218a61a219a184a220 a156a51a62a118a221a130a215a15a216a24a217 a152a38a222 a215a15a216a24a223a43a156a51a62 a219a149a43a221a130a217 a152a117a224a215a11a225a63a221a88a46a55a52a7a225a119a226 a219a9a227a63a228 a156a51a62a150a42a63a39a51a60a15a89a131a78a34a46a131a37a43a46a55a39 a78a34a56a74a50a72a39a59a56a57a37a43a58a55a80a65a56a57a50a59a41a143a44a96a42a63a39a19a116a127a42a61a42a61a37a144a69a79a53a55a50a24a60a63a80a65a64a66a56a57a37a43a42a135a53a49a37a65a78a128a77a83a42a61a69a7a56a57a37a43a56a57a37a43a42a135a56a66a37a161a39a59a41a65a42 a56a57a37a65a78a34a42a61a120a65a37a43a56a66a39a59a42a7a77a83a46a81a52a59a69a229a53a49a37a47a78a133a39a59a41a43a42a17a75a143a60a61a53a49a37a128a46a48a60a17a60a63a80a43a52a122a44a48a75a140a60a51a41a65a53a55a37a65a60a63a42a135a116a67a56a66a39a59a41 a46a55a37a65a64a66a75a122a46a55a37a43a42a118a39a19a75a48a54a47a42a3a46a55a77a26a37a43a46a55a80a65a37a76a50a72a42a17a42a17a78a43a50 a152a42a68a50a72a54a96a42a17a60a61a56a57a53a55a64a57a64a66a75a111a116a67a41a65a42a61a37a76a60a61a46a55a37a65a50a59a56a74a78a48a71 a42a61a52a24a56a57a37a43a58a131a53a131a50a72a69a79a53a55a64a57a64a150a60a63a46a55a52a24a54a43a80a65a50a51a156a51a89a131a126a3a64a74a50a59a46a43a62a107a151a67a46a55a69a79a53a55a37a43a56a74a53a49a37a141a113a81a42a61a52a24a44a65a50 a152a39a59a41a65a53a49a39 a39a19a75a48a54a43a56a74a60a61a53a55a64a66a64a57a75a40a77a83a46a55a64a57a64a57a46a15a116a161a39a24a41a43a42a87a37a43a46a55a80a43a37a47a50a24a156a127a78a34a46a101a37a43a46a49a39a3a60a51a41a65a53a55a37a43a58a55a42a118a39a59a41a43a42a17a56a57a52a123a77a83a46a81a52a59a69 a53a55a60a17a60a63a46a81a52a24a78a34a56a57a37a43a58a118a39a59a46a88a58a55a42a17a37a65a78a34a42a17a52a70a56a57a37a101a69a7a46a81a50a72a39a28a39a24a42a61a37a65a50a59a42a17a50a61a62a81a50a59a46a87a39a59a41a43a42a17a75a30a52a59a42a17a54a43a52a24a42a17a50a59a42a61a37a73a39 a69a7a46a81a50a72a39a59a64a57a75a86a37a43a46a81a56a57a50a59a42a49a89 a126a118a50a88a50a72a41a65a46a15a116a67a37a131a56a66a37a1a109a28a53a55a44a43a64a57a42a40a163 a152a53a49a37a65a78a1a53a49a64a74a50a72a46a76a56a66a37a121a39a24a41a43a42a122a39a24a53a49a44a65a64a66a42a68a50a67a77a83a52a24a46a55a69 a153a48a42a68a60a112a39a59a56a57a46a81a37a230a163a81a156a112a62a122a39a24a41a43a42a144a60a61a46a55a37a73a39a59a42a61a114a48a39a1a44a96a46a73a46a55a39a24a50a72a39a59a52a51a53a49a54a43a54a65a56a66a37a65a58a200a75a48a56a66a42a17a64a74a78a43a50a131a113a55a42a17a52a59a75 a41a43a56a57a58a55a41a138a54a43a52a24a42a17a60a61a56a57a50a59a56a57a46a55a37a82a62a88a44a43a80a34a39a141a39a59a41a43a42a128a60a61a46a15a113a55a42a17a52a24a53a55a58a55a42a141a56a74a50a131a52a24a42a61a64a74a53a49a39a59a56a57a113a55a42a17a64a66a75a144a64a57a46a15a116a88a89 a109a45a41a43a42a17a52a59a42a61a77a83a46a55a52a24a42a49a62a3a46a55a37a47a60a63a42a115a58a81a52a24a53a55a69a7a69a79a53a15a39a59a56a74a60a17a53a49a64a127a58a55a42a61a37a47a78a34a42a61a52a135a56a57a50a135a78a34a42a63a39a24a42a61a52a24a69a7a56a57a37a43a42a17a78 a116a67a56a66a39a59a41a79a41a65a56a66a58a81a41a79a54a43a52a24a42a17a60a61a56a57a50a59a56a57a46a55a37a122a77a83a46a55a52a67a53a40a50a59a42a63a39a45a46a49a77a26a37a65a46a55a80a43a37a65a50a61a62a43a53a30a69a7a46a81a52a59a54a43a41a65a46a55a64a57a46a55a58a81a56a117a71 a60a61a53a55a64a47a69a7a46a34a78a34a42a17a64a43a39a24a46a122a54a43a52a24a42a17a78a43a56a57a60a63a39a123a58a55a42a17a37a65a78a34a42a17a52a150a77a83a46a55a52a21a39a59a41a65a42a20a37a43a46a81a80a43a37a65a50a123a39a59a41a65a53a49a39a127a60a61a46a55a80a43a64a74a78 a37a43a46a55a39a3a44a47a42a30a78a34a56a74a50a24a53a49a69a101a44a43a56a57a58a55a80a65a53a49a39a59a42a68a78a40a77a83a52a24a46a55a69a84a60a63a46a55a37a73a39a24a42a63a114a48a39a24a50a45a56a74a50a45a80a65a50a59a42a17a78a13a89 a90a13a91a66a231 a232a230a94a65a103a11a105a107a233a28a94a96a234a9a94a96a108a47a106a236a235a55a104a43a234a21a237a76a95a70a104a43a234a83a238a26a102a68a106a9a102 a36a38a37a131a58a55a42a17a37a43a42a61a52a51a53a49a64a119a62a34a116a127a42a40a53a49a52a24a42a88a56a66a37a73a39a24a42a61a52a24a42a17a50a72a39a59a42a17a78a136a56a57a37a121a54a43a52a24a42a17a78a34a56a74a60a112a39a24a56a57a37a43a58a40a39a24a41a43a42a30a54a43a52a24a46a55a54a43a71 a42a61a52a59a39a59a56a57a42a68a50a125a46a49a77a26a37a43a46a81a80a43a37a65a50a123a39a59a41a65a53a49a39a127a53a55a54a43a54a47a42a68a53a49a52a150a56a57a37a76a53a40a60a63a46a55a52a24a54a43a80a65a50a61a89a125a239a115a53a49a37a48a75a101a46a49a77a82a39a59a41a65a42 a37a43a46a81a80a43a37a65a50a107a56a57a37a40a39a24a41a43a42a67a64a57a56a74a50a19a39a107a78a34a46a111a37a43a46a49a39a150a53a55a54a43a54a47a42a68a53a49a52a107a56a57a37a40a39a24a41a43a42a3a60a63a46a81a37a65a50a59a56a57a78a43a42a61a52a24a42a17a78a30a60a61a46a55a52a59a71 a54a43a80a65a50a125a53a49a39a123a53a49a64a57a64a34a53a49a37a65a78a122a69a79a53a49a37a48a75a111a46a55a77a65a39a59a41a65a42a67a37a43a46a55a80a43a37a47a50a70a39a59a41a65a53a49a39a125a53a55a54a43a54a96a42a17a53a49a52a150a53a55a52a59a42a127a37a43a46a55a39 a56a57a37a1a52a24a42a61a64a57a42a17a113a11a53a55a37a73a39a88a60a61a46a55a37a73a39a59a42a61a114a73a39a51a50a63a89a76a109a45a41a65a42a61a52a24a42a63a77a83a46a55a52a24a42a49a62a70a53a49a37a143a53a49a54a43a54a65a52a59a46a73a53a55a60a51a41a141a44a47a53a55a50a59a42a17a78 a46a55a37a135a69a7a46a55a52a24a54a43a41a43a46a81a64a66a46a81a58a55a75 a152a56a57a37a79a39a24a42a61a52a24a69a79a50a21a46a55a77a28a116a127a46a55a52a51a78a7a42a61a37a47a78a34a56a57a37a43a58a81a50a51a156a150a41a47a53a55a50a21a39a59a46a86a44a96a42 a60a63a46a81a37a65a50a59a56a57a78a43a42a61a52a24a42a17a78a87a77a83a46a55a52a70a39a24a41a43a42a17a50a59a42a21a37a65a46a55a80a43a37a65a50a61a89a70a109a70a53a49a44a65a64a66a42a45a154a118a50a59a41a43a46a15a116a3a50a110a39a59a41a43a42a127a58a55a42a17a37a65a78a34a42a17a52 a78a34a56a74a50a72a39a59a52a24a56a66a44a65a80a34a39a59a56a57a46a55a37a121a46a15a113a81a42a61a52a40a155a68a240a7a77a83a52a24a42a17a85a73a80a43a42a17a37a81a39a101a155a63a71a130a64a57a42a63a39a72a39a24a42a61a52a87a50a72a80a34a210a86a114a34a42a17a50a20a56a57a37a131a120a65a113a81a42 a64a74a53a49a37a43a58a81a80a65a53a49a58a81a42a17a50a61a62a65a53a55a50a118a46a55a44a34a39a51a53a49a56a57a37a43a42a17a78a135a77a83a52a24a46a55a69a84a39a59a41a43a42a122a37a43a46a55a80a65a37a131a64a66a56a74a50a72a39a24a50a67a53a11a113a15a53a49a56a57a64a74a53a49a44a65a64a66a42 a77a83a46a55a52a45a39a24a41a43a42a17a50a59a42a111a64a74a53a49a37a43a58a81a80a65a53a49a58a81a42a17a50a61a89 a90a13a91a66a231a110a91a236a241 a242a111a104a34a103a15a106a236a104a34a243a70a234a236a98a81a244a24a234a9a98a48a95a70a108a65a97a68a233a32a245a82a246a28a247a143a99a5a248a61a95a13a97a68a98a81a103a11a105a123a94a96a234a9a104a43a97a17a106a9a94a96a95 a109a110a80a65a60a51a146a81a42a61a52a45a42a63a39a118a53a55a64a119a89 a152a155a158 a159a55a159a49a62a34a54a43a54a136a205a48a159a17a71a38a203a81a154a81a156a70a46a55a44a65a50a59a42a61a52a24a113a55a42a68a78a101a39a59a41a65a53a49a39a21a37a43a46a81a80a43a37 a42a61a37a47a78a34a56a57a37a43a58a81a50a88a53a49a52a24a42a86a60a63a46a55a52a24a52a24a42a61a64a74a53a15a39a24a42a17a78a121a116a67a56a66a39a59a41a140a58a55a42a17a37a65a78a34a42a61a52a88a56a57a37a136a249a59a53a121a50a72a75a34a50a72a39a59a42a17a69a79a53a15a39a59a56a74a60 a53a49a37a47a78a40a54a43a52a24a42a17a78a43a56a57a60a63a39a24a53a55a44a43a64a57a42a123a69a79a53a49a37a65a37a43a42a61a52a72a250a123a56a57a37a122a211a43a52a24a42a61a37a47a60a51a41a82a89a107a109a45a41a65a42a61a75a88a77a83a46a55a80a65a37a65a78a122a39a59a41a65a53a49a39 a39a59a41a65a42a61a56a57a52a150a211a43a52a24a42a61a37a65a60a51a41a7a50a59a80a43a44a34a213a19a42a68a60a112a39a24a50a150a116a21a42a17a52a59a42a67a78a34a42a61a39a59a42a61a52a24a69a7a56a57a37a43a56a57a37a43a58a3a39a24a41a43a42a67a58a55a42a17a37a65a78a34a42a17a52a125a46a49a77 a53a131a37a43a46a81a80a43a37a143a44a48a75a1a69a79a53a55a146a48a56a66a37a65a58a136a53a55a37a65a53a49a64a57a46a55a58a81a56a57a42a17a50a20a116a67a56a117a39a24a41a143a116a21a46a81a52a24a78a65a50a88a39a59a41a65a53a49a39a122a50a59a41a65a53a49a52a24a42 a53a86a64a57a46a55a37a43a58a7a50a59a80a34a210a86a114a135a116a67a56a66a39a59a41a136a39a24a41a43a42a111a39a24a53a55a52a59a58a81a42a63a39a3a116a127a46a55a52a51a78a13a62a65a80a65a50a59a56a57a37a43a58a101a39a59a41a43a42a17a52a59a42a61a77a83a46a55a52a24a42a111a53 a113a15a53a49a52a24a56a74a53a49a44a43a64a57a42a63a71a130a64a57a42a61a37a43a58a55a39a59a41a87a52a24a53a49a39a59a41a43a42a17a52a110a39a24a41a65a53a49a37a86a53a67a120a65a114a48a42a68a78a40a44a65a56a66a58a81a52a24a53a55a69a142a46a81a52a110a39a24a52a59a56a57a58a81a52a24a53a55a69 a50a59a80a34a210a86a114a1a69a7a46a34a78a34a42a61a64a119a89a135a211a65a46a55a52a30a42a61a114a43a53a49a69a7a54a43a64a57a42a49a62a82a39a24a41a43a42a61a75a133a53a55a50a24a50a59a56a66a58a81a37a115a77a83a42a17a69a7a56a66a37a65a56a66a37a65a42a40a39a24a46 a53a136a37a43a46a55a80a65a37a140a64a57a56a57a146a55a42a136a214a7a215a219a225a61a251a15a252a161a44a65a53a55a50a59a42a17a78a1a46a55a37a140a39a59a41a65a42a86a77a83a42a61a69a7a56a57a37a43a56a57a37a43a42a101a42a61a37a65a78a34a56a57a37a43a58a140a253 a215a219a225a61a251a49a252 a152a72a254a181a219a215a219a225a61a251a15a252a65a62a43a216a59a215a219a225a61a251a49a252a122a42a61a39a24a60a15a89a181a156a88a52a51a53a15a39a24a41a43a42a61a52a13a39a24a41a65a53a49a37a111a46a81a37a20a39a24a41a43a42a150a50a59a41a43a46a55a52a59a39a59a42a17a52 a42a61a37a47a78a34a56a57a37a43a58a5a253a72a251a15a252a255a46a81a44a65a50a72a42a17a52a59a113a81a42a17a78a140a116a67a56a66a39a59a41a5a69a79a53a81a50a59a60a61a80a43a64a57a56a57a37a43a42a86a37a43a46a55a80a43a37a47a50a122a50a59a80a65a60a51a41a128a53a81a50 a225a61a251a15a252a65a62 a218a63a254a215a11a225a61a251a15a252a65a62a70a215a1a0 a219a251a15a252a1a42a63a39a24a60a49a89 a225a158a73a75a97a111a71a75a60a81a62a93a71a7a60 a151 a70a72a80a14a60a46a88a42a79 a216a19a84a90a71a7a60a46a62a65a67a37a79 a216a18a64a65a73a39a92a1a80a14a60a46a80 a216a19a213a115a80a87a91a81a62a65a67a37a79 a77 a97a3a2a7a60 a77 a97 a77 a97 a77 a97a3a2a39a60 a88 a60 a134a104a71 a207a5a4 a157 a207a75a207 a157 a157 a156a7a211 a207 a211 a4 a210a7a6 a209a75a157a22a209a7a8 a207 a157 a209a9a8a10a8 a4 a207a75a207 a8 a134a12a11 a4 a8a75a210a1a208 a4 a210 a157 a157 a157 a157 a157 a157 a157 a157 a134a104a91 a207 a207 a208a22a156 a157 a157 a6a10a8 a4 a207 a6 a209a7a157 a207 a157a1a156 a207 a6a1a208a75a157 a6a22a208a75a157 a134a12a80 a211a13a8a7a211 a4 a207 a211a1a210 a211a1a157a7a211 a207 a8a1a209 a207 a6a22a208 a207a5a4 a8a22a156 a157 a157 a209a75a156 a4 a210 a209a7a157a1a208a7a157 a134a12a62 a207 a211 a207 a211a13a8 a209 a209a75a157 a207 a211 a208a22a156 a157 a157 a156 a207 a6 a209 a207 a211 a134a12a60 a209 a208a75a208a22a156 a209a22a156a9a6 a4 a6 a8 a208a7a211 a207 a211 a207 a210 a207 a209a75a209 a207a5a4 a156a9a8a10a6 a134a12a73 a157 a157 a157 a157 a210 a207 a6a22a157a10a8a22a156 a157 a157 a207 a208a22a209 a6a1a156 a134a12a70 a8 a207 a211a1a156a7a6 a207 a6 a6a1a209 a4a7a4 a208a7a8a22a156 a156 a209a75a208a22a209 a207 a6a1a156 a207 a210a75a157a10a6 a134a104a67 a209 a209a39a211a13a8 a4 a211a1a157 a208a9a6 a207 a209 a4 a211 a8 a4 a207a14a4a18a207 a210 a211a10a6 a4 a134a12a68 a209 a207 a8a75a157a22a210 a211 a207 a8a1a209 a157 a157 a211a10a6a1a156 a209a9a6 a4 a4 a8 a4 a8 a8a7a211a22a211 a158a24a165a166a180a137a181a171a167a103a243a157a191a128a243a85a148a81a84a145a80a16a134a104a154a46a71a75a67a37a80a87a91a100a67a69a68a42a71a7a68a72a62a65a67a69a68a72a62a65a88a14a67a5a67a37a79a81a73a39a213a3a62a65a60a81a83a155a68a72a79a81a80a99a88a14a73a75a70a37a70a72a80a43a64a93a71a39a68a72a62a65a73a22a60 a154a145a80a43a68a104a213a49a80a14a80a14a60a137a73a75a60a46a80a43a134a12a64a65a80a43a68a37a68a72a80a43a70a117a67a37a66a81a96a41a94a18a80a14a67a158a71a75a60a46a91a128a83a75a70a42a71a7a97a99a97a111a71a7a68a72a62a65a88a87a71a75a64a227a83a22a80a14a60a46a91a81a80a43a70a158a62a65a60a100a156 a64a74a71a75a60a81a83a22a66a90a71a7a83a22a80a14a67 a252a137a179a156a181a171a181a171a179a117a190a29a160a171a170a137a175a249a173a177a159a76a167a121a161a177a167a185a179a81a180a76a161a177a167a7a168a174a172a93a165a166a173a177a160a171a179a156a170a66a161a4a207a212a190a52a167a185a187a7a179a156a170a76a161a177a160 a184 a167a7a168a174a167 a184 a165 a172a117a165a166a168a174a160a162a165a166a180a137a181a171a167a4a203a230a181a171a167a7a170a137a175a156a173a177a159a215a161a177a189a139a205a25a201a114a182a16a179 a184 a167a121a181a106a207a204a160a171a170a224a190a29a159a137a160a162a187a186a159a119a170a76a179a156a189a137a170a76a161a74a190a29a160a176a173a177a159 a170a137a179a99a168a174a167a7a181a171a160a162a165a166a180a137a181a171a167a52a187a4a179a156a170a86a173a174a167a4a201a157a173a174a161a88a180a90a179a156a168a174a168a174a179a117a190a94a182a16a179a156a168a174a167a22a175a156a167a121a170 a184 a167a7a168a115a160a176a170a137a183a188a179a156a168a174a182a109a165a117a173a177a160a171a179a81a170 a183a188a168a174a179a156a182a164a170a137a179a81a189a137a170a76a161a24a190a29a160a176a173a177a159a43a190a29a159a76a160a171a187a186a159a11a173a177a159a137a167a121a193a43a161a72a159a66a165a166a168a174a167a115a181a171a179a156a170a137a175a81a167a7a168a24a161a72a189a139a205a25a201a139a167a121a161a42a165a156a170 a184 a181a171a167a121a161a174a161a206a183a188a168a177a179a81a182a59a173a177a159a137a179a86a161a72a167a140a190a29a160a176a173a177a159a154a190a29a159a137a160a162a187a186a159a212a173a174a159a137a167a7a193a154a161a72a159a66a165a166a168a174a167a5a161a177a159a137a179a156a168a177a173a177a167a121a168a16a161a72a189a139a183a162a203 a208a137a201a139a167a121a161a7a198a254a158a22a159a137a160a162a161a103a160a162a161a109a167a108a165a156a161a177a160a171a181a176a193a79a160a171a182a16a163a137a181a171a167a7a182a16a167a7a170a86a173a174a167 a184 a189a76a161a72a160a171a170a137a175a79a161a72a189a139a205a25a201 a173a177a168a174a160a171a167 a182a16a179 a184 a167a7a181a162a161a42a165a166a170 a184 a173a186a165a166a195a157a160a171a170a137a175a45a165 a184 a172a117a165a166a170a86a173a186a165a166a175a156a167a52a179a166a183a90a173a177a159a76a167a192a187a4a181a162a165a156a161a174a161a42a187a4a179a81a170 a184 a160a176a173a177a160a171a179a156a170a66a165a166a181 a184 a160a162a161a72a173a177a168a174a160a176a180a76a189a139a173a177a160a171a179a156a170a99a182a16a179 a184 a167a121a181a157a180a86a193a99a189a66a161a72a160a171a170a137a175a61a173a177a159a137a167a228a57a86a189a137a167a108a161a54a173a174a160a176a179a81a170a76a165a166a180a76a181a176a167a115a182a109a165a156a161a174a161a46a165a81a161 a165a45a182a16a167a121a165a81a161a72a189a76a168a177a167a52a179a166a183a32a189a137a170a76a187a7a167a7a168a177a173a174a165a166a160a171a170a86a173a54a193a11a165a117a173 a184 a160a151a226a32a167a7a168a174a167a7a170a86a173a35a161a177a189a139a205a25a201a100a163a90a179a81a161a177a160a176a173a177a160a171a179a156a170a76a161a7a198 a101a33a102a16a15a55a102a40a101 a17a19a18a9a108a12a106a135a250a252a251a55a107a78a106a90a253a21a20 a248a56a170a137a160a176a173a177a160a162a165a166a181a171a181a171a193a166a207a64a165a166a181a171a181a42a170a137a179a156a189a76a170a76a161a11a165a166a168a174a167a100a160a176a170a86a173a174a168a177a179 a184 a189a76a187a7a167 a184 a160a171a170a74a173a174a159a137a167a25a173a177a168a174a160a171a167a100a165a156a170 a184 a173a177a159a76a167a7a160a171a168a27a187a4a181a162a165a81a161a177a161a64a187a7a179a156a170 a184 a160a176a173a174a160a176a179a81a170a76a165a166a181 a184 a160a162a161a72a173a177a168a174a160a171a180a137a189a139a173a177a160a171a179a81a170a76a161a32a165a166a168a174a167a42a165 a184a137a184 a167 a184 a173a177a179a111a167a108a165a156a187a186a159 a168a186a165a166a182a16a160a176a208a66a187a7a165a166a173a177a160a171a179a156a170a100a179a156a168a52a173a174a167a7a168a174a182a16a160a176a170a66a165a166a181a90a170a137a179 a184 a167a61a179a81a170a103a173a174a159a137a167a45a163a76a165a117a173a174a159a64a207a76a165a156a161a22a161a177a159a137a179a117a190a29a170 a160a171a170 a173a177a159a137a167a20a173a177a189a137a173a177a179a156a168a174a160a162a165a166a181a176a203a230a167a4a201a137a165a166a182a16a163a137a181a171a167a109a160a171a170a215a252a24a160a171a175a156a189a137a168a174a167a20a243a139a198a185a223a111a175a86a165a166a160a171a170a64a207a22a173a177a159a76a167a7a168a174a167 a165a166a168a174a167a111a173a54a190a52a179a25a187a186a159a137a179a156a160a162a187a4a167a108a161a4a207a86a190a29a159a137a167a4a173a174a159a137a167a7a168a22a173a174a179a206a189a66a161a72a167a61a173a54a193a157a163a66a167a7a203a106a180a76a165a81a161a72a167 a184 a161a72a173a174a165a117a173a174a160a162a161a54a173a174a160a171a187a121a161 a220a188a167a108a165a156a187a186a159 a190a52a179a156a168 a184 a159a76a165a81a161a109a165a194a182a109a165a156a161a174a161a25a187a4a179a156a170a86a173a174a168a177a160a171a180a137a189a139a173a174a160a171a179a156a170a212a167a22a57a81a189a66a165a166a181a29a173a174a179a48a238a5a179a81a170 a160a176a173a174a161a61a163a76a165a117a173a174a159a66a221a61a179a156a168a61a173a177a179a81a195a156a167a7a170a137a203a106a180a76a165a81a161a72a167 a184 a161a72a173a174a165a117a173a174a160a162a161a54a173a174a160a171a187a121a161a11a220a188a167a108a165a156a187a186a159a20a190a47a179a81a168 a184 a159a66a165a156a161a45a165 a187a4a179a81a170a86a173a177a168a174a160a176a180a76a189a139a173a177a160a171a179a156a170a20a167a75a57a86a189a76a165a156a181a88a173a177a179a140a173a174a159a137a167a109a170a157a189a137a182a100a180a66a167a121a168a99a179a166a183a29a179a139a187a7a187a4a189a76a168a177a168a174a167a7a170a76a187a7a167a121a161a45a160a171a170 a173a177a159a76a167a25a187a7a179a156a168a174a163a137a189a76a161a186a221a186a198a16a223a111a181a162a161a177a179a137a207a27a165a5a187a4a179a156a182a16a163a76a168a177a179a81a182a16a160a171a161a177a167a11a161a177a179a156a181a171a189a139a173a177a160a171a179a81a170a147a190a47a179a81a189a137a181 a184 a180a90a167 a173a177a179a154a190a52a167a7a160a171a175a156a159a86a173a109a173a174a159a137a167a196a187a4a179a156a170a86a173a174a167a4a201a157a173a177a189a76a165a156a181a204a187a7a181a162a165a156a161a174a161 a184 a160a162a161a72a173a177a168a174a160a176a180a76a189a139a173a177a160a171a179a156a170 a170a137a179a156a173a5a180a157a193 a173a177a159a76a167a204a170a157a189a137a182a100a180a90a167a7a168a22a179a166a183a24a179a157a187a121a187a4a189a137a168a174a168a174a167a7a170a76a187a7a167a121a161a47a160a176a170a18a173a177a159a76a167a45a187a7a179a156a168a174a163a137a189a76a161a7a207a139a180a137a189a139a173a111a180a157a193a16a173a177a159a76a167 a170a157a189a137a182a100a180a66a167a121a168a192a179a166a183a47a168a177a167a121a181a176a167a121a172a117a165a166a170a86a173a61a187a4a179a81a170a86a173a177a167a4a201a157a173a186a161a192a190a29a160a176a173a177a159a20a190a29a159a137a160a162a187a186a159a147a160a176a173a61a159a76a165a81a161a61a180a90a167a7a167a121a170 a161a177a167a7a167a7a170a154a220a162a183a188a179a81a168a61a167a7a201a139a165a156a182a16a163a137a181a171a167a166a207a64a165a109a190a52a179a156a168 a184 a173a177a159a66a165a117a173a99a179a139a187a7a187a4a189a76a168a174a161 a255 a173a174a160a176a182a16a167a108a161a29a183a188a168a174a179a156a182 a190a29a159a137a160a162a187a186a159a221a50a74a173a177a160a171a182a16a167a108a161a43a160a171a170a94a182a109a165a81a161a177a187a7a189a137a181a171a160a171a170a137a167a109a187a4a179a81a170a81a173a174a167a4a201a157a173a174a161a100a160a162a161a100a175a156a160a171a172a156a167a121a170a212a182a16a179a156a168a174a167 a190a52a167a7a160a171a175a156a159a86a173a16a173a177a159a66a165a166a170a215a165a196a190a52a179a156a168 a184 a179a139a187a7a187a4a189a76a168a177a168a174a160a171a170a137a175a35a47a212a173a177a160a171a182a16a167a121a161a25a183a188a168a174a179a156a182 a190a29a159a137a160a162a187a186a159 a173a54a190a29a160a162a187a4a167a204a160a171a170a18a182a109a165a81a161a177a187a7a189a137a181a171a160a176a170a76a167a192a187a4a179a81a170a81a173a174a167a4a201a157a173a174a161a186a221a186a198 a231a61a170a76a187a4a167a147a173a174a159a137a167a113a173a174a168a177a160a171a167a113a160a162a161a16a180a76a189a137a160a171a181a151a173a121a207a29a173a177a159a137a167a20a163a137a168a174a179a156a180a76a165a156a180a137a160a171a181a176a160a176a173a54a193a194a179a166a183a43a165a212a175a156a167a7a170a137a203 a184 a167a121a168a45a183a188a179a156a168a11a165a140a175a156a160a171a172a81a167a7a170a74a190a52a179a156a168 a184 a254a246a187a7a179a156a182a16a163a90a179a81a161a177a167 a184 a179a166a183a47a181a171a167a7a173a72a173a177a167a121a168a174a161a23a22 a27 a22a25a24 a33a66a33a117a33 a22a25a26 a160a162a161a11a187a4a179a81a182a16a163a137a189a139a173a174a167 a184 a165a166a181a171a179a81a170a137a175a5a173a177a159a137a167a109a163a66a165a117a173a177a159a79a187a4a179a156a168a174a168a174a167a121a161a177a163a66a179a81a170 a184 a160a171a170a137a175a18a173a177a179a153a254a246a180a157a193 a189a76a161a177a160a171a170a137a175a11a165a99a168a174a167a121a187a4a189a76a168a174a161a177a160a171a172a156a167a29a161a72a182a16a179a157a179a156a173a177a159a137a160a171a170a137a175a61a183a188a179a156a168a174a182a206a189a76a181a171a165a204a190a29a159a137a160a162a187a186a159a25a170a76a165a166a173a177a189a137a168a186a165a166a181a171a181a171a193 a173a174a165a156a195a156a167a108a161a61a165 a184 a172a117a165a166a170a86a173a174a165a156a175a156a167a11a179a156a183a35a173a177a159a137a167 a184 a160a162a161a72a173a177a168a174a160a176a180a76a189a139a173a177a160a171a179a156a170a66a165a166a181a64a168a174a167a7a163a137a168a174a167a121a161a177a167a7a170a86a173a174a165a166a173a177a160a171a179a156a170 a179a166a183a11a189a76a170a76a187a4a167a121a168a72a173a186a165a166a160a171a170a86a173a54a193a166a198a247a158a22a159a137a167a194a187a4a179a81a170 a184 a160a176a173a177a160a171a179a156a170a66a165a166a181a111a187a4a181a162a165a81a161a177a161a16a163a76a168a177a179a81a180a76a165a166a180a137a160a171a181a171a160a176a173a177a160a171a167a121a161 a175a156a160a171a172a81a167a7a170 a161a72a189a139a205a25a201a27a22 a26 a22 a26a29a28 a27 a33a117a33a66a33 a22a25a30a103a220a188a160a106a198a167a156a198a40a173a174a159a137a167a113a163a76a165a166a173a177a159 a160a171a170a79a173a174a159a137a167a147a173a174a168a177a160a171a167a140a160a162a161 a31a1a32a1a32 a16a107a2a33a22 a26 a2a34a22 a26a29a28 a27 a2 a33a66a33a117a33 a2a34a22a25a30a230a221a22a165a166a168a174a167a61a167a108a161a54a173a174a160a176a182a109a165a166a173a177a167 a184 a165a156a161a7a191 a35 a4a7a6a25a36a34a12a7a37a39a38a41a40a22a25a26a42a22a25a26a29a28 a27 a33a66a33a117a33 a22 a30a18 a29 a4 a26a44a43a46a45a5a47a14a48a50a49a52a51a1a49a52a51a54a53a41a55a57a56a58a56a58a56a49a52a59a25a60 a6a61a36a48a12a10a37a39a38a68a18a46a62 a4 a26a54a43a57a45a5a47a14a48a52a49 a51 a49 a51a1a53a41a55 a56a58a56a58a56a49 a59 a60 a6a236a8a11a10a96a12a15a14a68a16a19a18a64a63 a35 a4a7a6a25a36a34a12a10a37a39a38a41a40a22a25a26a42a22a25a26a42a28 a27 a33a66a33a117a33 a22 a30 a23a28a27 a18 a220a54a238a93a221 a158a22a159a137a167a61a168a177a167a108a187a4a189a137a168a186a161a72a160a171a179a81a170a100a187a121a165a166a170a103a161a72a173a177a179a81a163a16a167a7a160a176a173a177a159a137a167a121a168a47a165a166a173a47a168a174a179a86a179a156a173a115a181a171a167a7a172a81a167a7a181a106a207a156a190a29a159a137a167a121a168a177a167a192a165a156a170 c cc t , arp # ratiune ( F ) , caine ( M ) ^ paine ( F ) ^ fem masc quest .</sentence>
				<definiendum id="0">Suffix models</definiendum>
				<definiens id="0">−a −e −ie −ge −i −t ) Gender Seeds Translations Romanian English Natural Context models F M F M Test data : ) ^ ( pleasure ) ( blood ) ( M ) sange ( F ) placere F MNouns Romanian a252a24a160a171a175a156a189a137a168a174a167a109a238a166a191a41a59a61a60a63a62a65a64a65a64a65a66a46a67a69a68a37a70a42a71a39a68a72a62a74a73a75a60a76a73a7a77a78a68a72a79a81a80a82a68a37a70a42a71a75a60a81a67a37a64a65a62a74a60a81a83a22a66a46a71a75a64a85a84a81a70a72a73a87a86a37a80a14a88a16a68a72a62a74a73a75a60 a73a75a77a89a60a90a71a7a68a72a66a18a70a42a71a75a64a44a83a22a80a14a60a46a91a81a80a43a70a61a67a37a80a14a80a14a91a81a67a3a92a19a62a93a71a82a88a14a73a22a60a9a68a72a80a43a94a19a68a72a66a90a71a7a64a44a71a75a60a90a91a95a67a37a66a81a96a41a94a98a97a99a73a19a91a81a80a43a64a74a67 a183a188a168a174a179a156a182a59a181a162a165a166a168a174a175a156a167a109a189a76a170a76a165a166a170a137a170a76a179a166a173a174a165a166a173a177a167 a184 a187a4a179a81a168a177a163a90a179a156a168a186a165a140a173a174a179a194a187a7a179a156a182a16a163a90a167a7a170a76a161a174a165a117a173a174a167a109a183a188a179a81a168 a173a177a159a76a167a99a181a171a165a81a187a186a195a25a179a166a183a24a173a177a159a137a160a162a161a47a173a54a193a157a163a66a167a99a179a156a183a24a195a157a170a137a179a117a190a29a181a171a167 a184 a175a156a167a166a207a157a180a157a193a109a167a4a201a139a163a137a181a171a179a81a160a151a173a174a160a171a170a137a175a99a173a177a159a76a167 a175a156a167a121a170 a184 a167a121a168a22a165a156a175a156a168a174a167a7a167a121a182a16a167a7a170a86a173a115a179a166a183a46a170a137a179a156a189a137a170a66a161a29a165a166a170 a184 a160a176a182a16a182a16a167 a184 a160a162a165a117a173a174a167a111a187a4a179a156a170a86a173a174a167a4a201a157a173a7a198 a199a200a167a45a163a137a168a174a179a156a163a90a179a81a161a177a167a61a165a43a173a54a190a47a179a156a203a230a187a7a179a156a182a16a163a90a179a156a170a137a167a121a170a86a173a35a180a66a179a157a179a166a173a186a161a54a173a174a168a174a165a156a163a137a163a137a160a171a170a137a175a99a173a174a167a121a187a186a159a139a203 a170a137a160a40a57a86a189a137a167a204a173a177a159a76a165a166a173a111a187a7a165a166a170a140a180a90a167a11a161a72a189a76a182a16a182a109a165a166a168a174a160a176a216a121a167 a184 a165a156a161a52a183a188a179a81a181a171a181a176a179a117a190a111a161a7a191 a232a86a173a174a165a156a168a72a173a174a160a176a170a76a175a212a190a29a160a176a173a177a159a40a165a94a181a176a160a162a161a72a173a109a179a166a183a206a161a177a167a7a167 a184 a170a137a179a81a189a137a170a76a161a7a207a192a168a177a167a121a181a171a160a171a165a156a180a137a181a171a167a147a187a4a179a156a170a137a203 a173a177a167a7a201a157a173a174a161a42a183a188a179a81a168a88a167a7a172a156a167a121a168a177a193a43a175a156a167a7a170 a184 a167a7a168a35a187a7a181a171a165a81a161a177a161a42a165a156a168a177a167 a184 a167a4a173a174a167a7a168a174a182a16a160a171a170a137a167 a184 a165a166a170 a184 a182a16a179a156a168a174a167 a170a137a179a81a189a137a170a76a161a27a173a177a159a76a165a166a173a24a165a166a168a174a167a115a161a177a167a7a167a121a170a11a190a29a160a176a173a177a159a45a173a177a159a76a179a81a161a177a167a47a187a4a179a81a170a86a173a177a167a4a201a157a173a186a161a27a165a166a168a174a167a35a167a7a201a86a173a174a168a174a165a81a187a130a173a174a167 a184 a183a188a168a174a179a156a182a119a173a177a159a137a167a52a187a4a179a156a168a174a163a137a189a76a161a7a198a46a158a22a159a137a167a47a182a16a179a156a168a174a163a137a159a137a179a81a181a176a179a81a175a156a160a162a187a7a165a156a181a7a163a137a168a174a179a156a163a90a167a7a168a177a173a177a160a171a167a108a161a32a179a166a183a139a173a177a159a76a167 a161a177a167a7a167 a184 a161a204a165a156a170 a184 a173a177a159a137a167a25a170a137a179a81a189a137a170a76a161a45a190a29a160a176a173a177a159a20a168a177a167a121a181a176a167a121a172a117a165a166a170a86a173a204a187a7a179a156a170a86a173a177a167a7a201a86a173a11a165a156a168a177a167a206a173a177a159a137a167a121a170 a189a76a161a177a167 a184 a173a174a179a113a159a157a193a86a163a90a179a166a173a174a159a137a167a121a161a177a160a171a216a7a167a25a175a156a168a186a165a166a182a16a182a109a165a166a173a177a160a162a187a7a165a156a181a27a175a81a167a7a170 a184 a167a121a168a99a183a188a179a156a168a206a165a166a181a171a181a88a173a177a159a76a167 a170a137a179a81a189a137a170a76a161a22a160a171a170a103a173a174a159a137a167a99a181a162a165a166a170a137a175a81a189a76a165a166a175a81a167a166a198 a158a22a159a137a160a162a161a147a182a16a167a4a173a174a159a137a179 a184 a165a81a161a177a161a177a189a137a182a16a167a108a161a5a173a177a159a137a167a212a167a7a201a139a160a171a161a72a173a177a167a121a170a76a187a4a167a196a179a156a183a109a165 a181a176a160a162a161a72a173a147a179a166a183 a170a137a179a81a189a137a170a76a161a16a183a188a179a81a168a109a173a174a159a137a167a147a173a174a165a156a168a177a175a81a167a4a173a103a181a162a165a156a170a137a175a156a189a76a165a156a175a156a167a156a198a114a158a22a159a137a160a162a161a16a160a162a161a16a170a137a179a156a173a5a165a196a182a109a165a166a203 a197a54a179a156a168a192a168a177a167a108a161a54a173a174a168a177a160a162a187a130a173a174a160a171a179a156a170a64a233a66a241a47a189a76a187a7a167a7a168a174a216a121a165a166a170a140a165a166a170 a184a109a242 a165a156a168a177a179a117a190a111a161a177a195a157a193a113a220a122a243a166a244a81a244a81a243a117a221a29a161a177a159a137a179a117a190 a159a137a179a117a190a119a170a137a179a156a189a137a170a66a161a111a187a7a165a156a170a5a180a90a167a11a159a157a193a157a163a66a179a156a173a177a159a137a167a108a161a72a160a171a216a121a167 a184 a168a174a167a7a181a171a160a162a165a166a180a76a181a176a193a100a189a76a161a177a160a171a170a137a175a16a165a100a183a188a179a156a168a177a203 a167a7a160a171a175a81a170a103a181a162a165a166a170a137a175a81a189a76a165a166a175a81a167a111a173a174a179a16a213a35a170a137a175a156a181a171a160a162a161a177a159 a184 a160a162a187a130a173a174a160a176a179a81a170a76a165a166a168a174a193a166a198 a223a111a170 a160a171a170a139a203 a184 a167a7a163a139a173a174a159a79a165a166a170a66a165a166a181a171a193a139a161a72a160a162a161a11a179a156a183a192a173a174a159a137a167a113a165a166a181a171a175a156a179a81a168a177a160a176a173a174a159a137a182a140a207a24a163a76a168a177a179a81a180a137a181a171a167a7a182a109a161 a167a7a170a66a187a4a179a156a189a76a170a81a173a174a167a7a168a174a167 a184 a207a29a165a166a170 a184 a168a174a167a121a161a177a189a137a181a176a173a174a161a7a207a22a190a29a160a151a173a174a159 a167a4a201a137a165a166a182a16a163a137a181a171a167a108a161a43a160a171a170a48a255a29a179a156a182a109a165a166a203 a170a137a160a162a165a166a170a150a207a157a160a162a161a47a163a137a168a174a167a121a161a177a167a7a170a86a173a177a167 a184 a160a171a170a109a173a174a159a137a167a204a183a188a179a156a181a171a181a171a179a117a190a29a160a176a170a76a175a45a161a177a189a137a180a76a161a177a167a121a187a4a173a177a160a171a179a156a170a66a161a115a179a156a183a27a173a177a159a76a167 a163a76a165a156a163a66a167a121a168a7a198a45a255a29a167a121a161a177a189a137a181a176a173a174a161a111a183a188a179a156a168a61a161a177a167a7a172a81a167a7a168a186a165a166a181a46a179a166a173a177a159a76a167a7a168a192a181a162a165a156a170a137a175a156a189a76a165a156a175a156a167a108a161a29a165a166a168a174a167a43a161a72a189a76a182a25a203 a182a109a165a166a168a174a160a171a216a7a167 a184 a160a171a170a140a232a157a167a108a187a130a173a174a160a176a179a81a170a100a50a137a198 a101a33a102a104a103 a105a55a106a90a106a90a107a78a108a104a109a78a110 a231a61a170a137a167a11a179a156a183a88a173a177a159a137a167a206a182a16a179a81a161a72a173a192a160a171a182a16a163a66a179a81a168a72a173a186a165a166a170a86a173a29a160a162a161a177a161a177a189a137a167a121a161a111a160a176a170a113a165a156a170a157a193a18a180a90a179a157a179a166a173a174a161a72a173a177a168a186a165a166a163a137a203 a163a137a160a171a170a137a175a99a163a137a168a174a179a139a187a4a167a108a161a177a161a88a160a162a161a35a173a177a159a137a167a5a57a81a189a66a165a166a170a86a173a177a160a176a173a54a193a43a165a156a170 a184 a57a86a189a76a165a166a181a171a160a176a173a54a193a99a179a166a183a64a173a174a159a137a167a61a161a177a167a7a167 a184 a161a7a198 a248a56a170a103a165a43a182a16a160a176a170a76a160a176a182a109a165a156a181a176a203a106a167a7a226a90a179a81a168a72a173a150a183a188a168a186a165a166a182a16a167a121a190a47a179a81a168a177a195a90a207a156a179a81a170a137a167a111a190a52a179a156a189a137a181 a184 a181a171a160a171a195a156a167a52a173a177a179a206a189a76a161a177a167 a165a156a161a52a183a188a167a121a190a119a161a177a167a7a167 a184 a161a29a165a156a161a52a163a90a179a81a161a174a161a72a160a171a180a137a181a171a167a61a165a156a170 a184 a159a76a165a93a172a156a167a61a173a177a159a137a167a121a182a178a180a90a167a45a167a121a165a156a161a177a160a171a181a171a193a100a167a7a201a157a203 a173a177a168a186a165a156a187a4a173a177a167 a184 a183a188a168a174a179a156a182a246a190a29a160 a184 a167a121a181a171a193a109a165a93a172a93a165a156a160a171a181a171a165a156a180a137a181a171a167a29a168a177a167a108a161a72a179a81a189a137a168a186a187a4a167a121a161a7a198 a223a212a208a76a168a186a161a72a173a24a165a166a163a76a163a137a168a177a179a86a165a156a187a186a159a99a189a76a161a177a167a121a161a27a173a177a159a76a167a115a173a174a168a174a165a156a170a76a161a72a181a171a160a171a170a137a175a81a189a76a165a166a181a117a163a137a168a174a179a166a197a54a167a108a187a130a173a174a160a176a179a81a170a45a179a166a183 a170a76a165a166a173a177a189a137a168a186a165a166a181a66a175a156a167a7a170 a184 a167a7a168a121a207a86a161a72a173a174a165a156a168a72a173a174a160a176a170a76a175a204a190a29a160a176a173a174a159a25a173a177a159a137a167a192a173a177a168a186a165a166a170a76a161a177a181a162a165a117a173a177a160a171a179a81a170a76a161a24a179a166a183a150a161a72a167a121a172a86a203 a167a7a168a186a165a166a181a27a213a35a170a137a175a156a181a171a160a162a161a177a159a5a170a76a179a156a189a137a170a76a161a111a173a177a159a76a165a166a173a192a159a76a165a93a172a81a167a43a165a25a170a76a165a117a173a174a189a137a168a186a165a166a181a27a175a81a167a7a170 a184 a167a7a168a43a220a122a252a46a160a171a175a156a203 a189a137a168a174a167a196a238a108a221a130a198a114a199a194a167a74a187a7a179a156a170a76a161a177a160 a184 a167a7a168a174a167 a184 a165a194a173a177a179a156a173a174a165a166a181a192a179a166a183a111a50a156a244a200a183a188a167a121a182a16a160a176a170a76a160a176a170a76a167a5a165a156a170 a184 a50a156a244a5a182a109a165a81a161a177a187a7a189a137a181a171a160a176a170a76a167a11a170a137a179a156a189a76a170a76a161a45a160a171a170a113a173a177a167a121a168a177a182a109a161a45a179a156a183a47a170a76a165a166a173a177a189a137a168a186a165a166a181a88a175a81a167a7a170 a184 a167a7a168a39a112a121a207a24a165a81a161 a113a37a114 a73a22a66a81a60a46a67a115a67a37a66a81a88a16a79a98a71a7a67a117a116a42a118a1a119a121a120a22a122a124a123a43a125a126a71a7a60a90a91a128a127a85a122a40a129a40a130a16a131a95a71a39a70a72a80a132a71a75a67a37a67a37a66a81a97a99a80a87a91a5a68a72a73a133a88a14a73a75a70a37a134 a161a177a159a137a179a117a190a29a170a18a160a171a170a140a158a46a165a156a180a137a181a171a167a206a238a156a198 a199a215a159a137a167a7a170a147a165a206a180a137a160a171a181a176a160a171a170a137a175a81a189a76a165a166a181 a184 a160a162a187a130a173a174a160a176a179a81a170a76a165a166a168a174a193a100a190a29a160a151a173a174a159a18a213a115a170a137a175a156a181a171a160a162a161a72a159a103a160a171a161a22a165a93a172a117a165a166a160a171a181a176a203 a165a166a180a76a181a176a167a140a167a121a181a176a167a108a187a130a173a174a168a177a179a81a170a137a160a162a187a7a165a166a181a171a181a171a193a79a220a122a165a156a161a103a190a52a165a81a161a100a173a177a159a137a167a74a187a121a165a156a161a177a167a140a183a188a179a156a168a103a255a111a179a156a182a109a165a166a170a76a160a171a165a156a170a64a207 a252a137a168a174a167a7a170a66a187a186a159a64a207a76a165a166a170 a184 a232a157a163a76a165a156a170a137a160a162a161a72a159a66a221a130a207a157a173a177a159a137a167a45a163a137a168a174a179a166a197a54a167a108a187a130a173a177a160a171a179a81a170a109a179a166a183a24a170a76a165a117a173a174a189a137a168a174a165a156a181a32a175a156a167a7a170a137a203 a184 a167a121a168a99a181a171a165a156a180a66a167a121a181a162a161a61a160a162a161 a184 a179a81a170a137a167a109a165a166a189a139a173a174a179a156a182a109a165a166a173a177a160a162a187a7a165a156a181a176a181a171a193a156a198a99a199a215a159a137a167a7a170a196a161a177a189a76a187a186a159a200a165 a184 a160a162a187a4a203 a173a177a160a171a179a81a170a76a165a166a168a174a193a74a160a162a161a11a170a76a179a166a173a100a165a93a172a117a165a156a160a176a181a162a165a156a180a137a181a171a167a206a160a171a170a94a165a156a170a196a167a7a181a171a167a121a187a4a173a177a168a174a179a156a170a137a160a162a187a100a183a188a179a156a168a174a182a109a165a117a173a121a207a42a165a156a170 a213a35a170a137a175a81a181a171a160a171a161a177a159a139a203a106a173a177a179a156a203a122a173a186a165a166a168a174a175a156a167a4a173a177a203a106a181a162a165a156a170a137a175a156a189a76a165a156a175a166a167a115a159a66a165a166a168 a184 a203a230a187a7a179a156a163a157a193 a184 a160a162a187a130a173a177a160a171a179a81a170a76a165a166a168a174a193a43a187a7a165a156a170 a180a90a167a99a189a76a161a72a167 a184 a220a162a173a177a159a76a160a171a161a111a190a52a165a81a161 a184 a179a156a170a137a167a45a183a188a179a81a168a192a232a157a181a171a179a117a172a156a167a121a170a137a167a166a207a139a190a29a160a176a173a177a159a135a50a81a136a206a182a16a160a171a170a157a189a139a173a177a167a108a161 a170a137a167a108a187a4a167a121a161a174a161a174a165a166a168a174a193a113a173a177a179a20a167a4a201a157a173a177a168a186a165a156a187a4a173a206a165a166a181a171a181a88a173a174a159a137a167a109a173a174a168a174a165a156a170a76a161a177a181a171a165a166a173a177a160a171a179a156a170a66a161a45a179a166a183a29a173a177a159a76a167a103a213a35a170a139a203 a175a156a181a171a160a162a161a177a159a154a161a177a167a7a167 a184 a161a174a221a130a198a247a158a22a159a137a160a162a161a25a208a76a168a186a161a54a173a140a165a166a163a137a163a76a168a177a179a86a165a156a187a186a159a154a160a171a161a109a181a176a160a171a182a16a160a176a173a177a167 a184 a173a174a179a212a173a177a159a76a167 a181a162a165a166a170a137a175a81a189a76a165a166a175a81a167a121a161a115a160a176a170a18a190a29a159a137a160a162a187a186a159a103a175a81a168a174a165a156a182a16a182a109a165a117a173a177a160a162a187a121a165a166a181a139a175a156a167a121a170 a184 a167a121a168a52a160a162a161a52a168a174a167a7a181a162a165a117a173a174a167 a184 a173a174a179 a170a76a165a166a173a177a189a137a168a186a165a166a181a139a175a81a167a7a170 a184 a167a121a168a7a198a88a223a111a181a162a161a177a179a137a207a117a173a174a159a137a167a29a168a177a167a108a161a72a189a76a181a151a173a186a161a42a182a109a165a93a193a99a172a117a165a166a168a174a193a43a165a156a187a121a187a4a179a156a168 a184 a160a171a170a137a175 a173a177a179a25a173a174a159a137a167a99a189a76a161a174a165a166a175a81a167a204a179a156a183a46a173a174a159a137a167a43a161a177a167a7a181a171a167a121a187a4a173a177a167 a184 a170a76a165a166a173a177a189a137a168a186a165a166a181a64a175a81a167a7a170 a184 a167a7a168a29a170a137a179a81a189a137a170a76a161a29a160a171a170 a173a177a159a76a167a100a187a7a179a156a168a174a163a137a189a76a161a100a220a162a183a188a179a156a168a204a167a4a201a137a165a156a182a16a163a137a181a171a167a166a207a66a190a52a179a156a168 a184 a161a61a181a171a160a176a195a81a167a137a8a44a10a12a25a14a11a14a25a100a179a156a168a138a27a16a6a22a6a1a4a39a23a26a25a7a27 a182a109a165a93a193a16a170a137a179a156a173a22a180a90a167a99a172a156a167a121a168a177a193a109a183a188a168a177a167a22a57a81a189a76a167a7a170a86a173a29a160a176a170a5a170a137a167a121a190a111a161a72a190a29a160a171a168a174a167a204a187a7a179a156a168a174a163a66a179a81a168a174a165a86a221a186a198 a223a94a161a177a167a121a187a4a179a81a170 a184 a207a93a182a16a179a156a168a174a167a88a175a156a167a121a170a137a167a7a168a186a165a166a181a156a165a156a163a137a163a137a168a174a179a81a165a81a187a186a159a204a160a162a161a32a173a174a179a192a167a7a201a86a173a174a168a174a165a81a187a130a173a64a183a188a168a174a179a156a182 a173a177a159a76a167a113a187a4a179a156a168a174a163a137a189a76a161a16a165a200a181a171a160a162a161a54a173a25a179a166a183a45a170a137a179a81a189a137a170a76a161a109a161a177a167a7a181a171a167a121a187a4a173a177a167 a184 a179a156a170a154a173a174a159a137a167a147a180a76a165a156a161a177a160a162a161a100a179a166a183 a183a188a168a174a167a75a57a86a189a137a167a7a170a66a187a4a193a166a207a88a170a157a189a137a182a100a180a66a167a121a168a43a179a156a183a192a187a4a179a156a170a86a173a174a167a4a201a157a173a174a161a43a190a29a160a151a173a174a159a212a190a29a159a137a160a162a187a186a159a194a173a177a159a76a167a7a193a196a187a4a179a156a203 a179a139a187a7a187a7a189a137a168a7a207a52a165a166a170 a184 a161a72a189a139a205a25a201a212a163a76a165a166a173a72a173a174a167a7a168a174a170a76a161a4a207a52a165a166a170 a184 a173a177a179a200a181a171a165a156a180a66a167a121a181a52a173a177a159a137a167a121a182 a190a29a160a176a173a177a159 a175a156a167a121a170 a184 a167a121a168a61a160a171a170a139a183a188a179a81a168a177a182a109a165a166a173a177a160a171a179a156a170a5a180a157a193 a184 a160a162a187a130a173a177a160a171a179a81a170a76a165a166a168a174a193a109a181a171a179a157a179a156a195a86a203a106a189a76a163a64a198a45a158a22a159a76a160a171a161a204a165a166a163a137a203 a163a137a168a174a179a81a165a81a187a186a159a5a175a81a189a76a165a166a168a186a165a166a170a86a173a174a167a7a167a121a161a52a173a174a159a76a165a117a173a61a173a177a159a137a167a100a161a72a167a121a167 a184 a161a192a189a76a161a177a167 a184 a165a156a168a177a167a11a168a174a167a7a163a76a168a177a167a108a161a72a167a121a170a139a203 a173a174a165a166a173a177a160a171a172a156a167a18a183a188a179a156a168a100a173a174a159a137a167a147a175a156a160a171a172a156a167a121a170a94a187a4a179a81a168a177a163a76a189a76a161a4a207a52a161a72a179a20a173a177a159a76a165a166a173a16a173a177a159a137a167a140a180a90a179a157a179a166a173a174a161a72a173a177a168a186a165a166a163a137a203 a163a137a160a171a170a137a175a147a159a76a165a81a161a11a165a140a180a90a167a4a173a72a173a174a167a7a168a100a187a186a159a76a165a166a170a76a187a7a167a25a173a177a179a113a161a177a189a76a187a7a187a7a167a7a167 a184 a198a113a231a61a170a194a173a174a159a137a167a109a179a156a173a177a159a137a167a121a168 a159a76a165a156a170 a184 a207a22a160a151a173a109a163a76a168a177a167a108a161a72a189a137a182a16a167a108a161a206a173a177a159a137a167a147a167a7a201a157a160a162a161a72a173a177a167a121a170a76a187a4a167a140a179a166a183a99a165a200a175a156a167a121a170 a184 a167a7a168a109a165a156a170a137a170a137a179a156a203 a173a174a165a166a173a177a167 a184 a182a16a179a156a170a137a179a156a203a43a179a156a168a5a180a137a160a176a203a230a181a176a160a171a170a137a175a81a189a76a165a166a181 a184 a160a162a187a4a173a177a160a171a179a156a170a76a165a156a168a177a193a119a220a188a190a29a159a137a160a162a187a186a159a48a182a16a160a171a175a156a159a86a173 a180a90a167a43a182a16a179a156a168a174a167 a184 a160a176a205a109a187a4a189a137a181a176a173a29a173a174a179a16a208a76a170 a184 a173a174a159a76a165a166a170a20a165a166a170a147a189a137a170a76a165a156a170a137a170a137a179a156a173a174a165a117a173a174a167 a184 a180a137a160a171a181a171a160a171a170a139a203 a175a156a189a66a165a166a181 a184 a160a162a187a130a173a177a160a171a179a81a170a76a165a166a168a174a193a137a221a186a198a204a231a61a189a137a168a61a175a156a179a81a165a156a181a27a190a22a165a156a161a111a173a177a179a18a161a177a167a7a181a171a167a108a187a130a173a61a165a18a161a72a182a109a165a156a181a176a181a46a161a72a167a7a173 a220a104a136a156a244a204a179a156a168a42a183a188a167a7a190a52a167a7a168a14a139a121a221a24a179a156a183a32a161a177a189a76a187a186a159a100a190a47a179a81a168 a184 a161a42a160a176a170a100a179a156a168 a184 a167a121a168a42a173a177a179a45a182a16a160a171a170a137a160a171a182a16a160a176a216a121a167a88a173a177a159a76a167 a159a157a189a137a182a109a165a166a170a5a161a72a189a76a163a66a167a121a168a177a172a157a160a162a161a72a160a171a179a81a170a109a168a177a167a22a57a86a189a137a160a171a168a177a167 a184 a198 a158a22a159a137a167a114a161a177a193a139a161a54a173a174a167a7a182 a190a22a165a156a161a79a160a171a170a137a160a176a173a177a160a162a165a166a181a171a181a171a193 a184 a167a121a172a156a167a7a181a171a179a81a163a66a167 a184 a183a188a179a156a168a48a255a29a179a156a182a109a165a166a203 a170a137a160a162a165a166a170a150a198a42a223a119a181a171a160a171a161a72a173a35a179a166a183a47a238a1a45a86a207a244a81a136a18a50a45a170a137a179a156a189a76a170a76a161a115a190a52a167a7a168a174a167a111a167a7a201a86a173a174a168a174a165a81a187a130a173a174a167 a184 a183a188a168a174a179a156a182a185a173a177a159a76a167 a218a113a234a61a228a139a158a22a213a3a140a61a158a52a203a230a213a115a165a156a161a72a173a16a255a29a179a156a182a109a165a156a170a137a160a162a165a166a170a200a181a176a167a7a201a139a160a171a187a7a179a156a170 a220a188a213a35a168a122a197a72a165a93a172a156a167a108a187a16a167a4a173a25a165a166a181a106a198a176a207 a238a121a239a81a239a46a45a156a221a186a198a99a234a111a170a139a183a188a179a81a168a72a173a174a189a137a170a76a165a117a173a174a167a7a181a171a193a166a207a64a165a166a181a171a181a24a170a137a167a7a189a137a173a177a167a7a168a45a170a137a179a81a189a137a170a76a161a204a165a166a168a174a167a43a181a171a160a162a161a54a173a174a167 a184 a165a81a161 a182a109a165a156a161a174a187a4a189a76a181a176a160a171a170a137a167a22a160a171a170a25a173a177a159a76a160a171a161a47a181a171a167a4a201a139a160a162a187a4a179a81a170a64a207a156a163a137a168a174a179a156a180a76a165a156a180a137a181a171a193a43a180a90a167a121a187a121a165a166a189a76a161a177a167a111a182a16a179a156a168a174a163a137a159a137a179a156a203 a181a171a179a156a175a81a160a171a187a121a165a166a181a171a181a171a193a166a207a86a170a137a167a7a189a139a173a174a167a7a168a186a161a192a165a156a170 a184 a182a109a165a156a161a174a187a4a189a137a181a171a160a171a170a137a167a45a165a166a168a174a167a11a165a166a181a171a160a171a195a156a167a204a160a176a170a5a173a174a159a137a167a43a161a177a160a176a170a137a203 a175a156a189a76a181a171a165a156a168a132a141a18a183a188a179a81a168a192a167a7a201a139a165a156a182a16a163a137a181a171a167a166a207a142a11a43a6a14a143a24a17a81a11a5a220a42a23a104a27a16a25a14a25a108a221a111a160a162a161a111a182a109a165a156a161a174a187a4a189a76a181a176a160a171a170a137a167a45a190a29a159a137a160a171a181a171a167 a11a14a6a9a8a89a17a18a11a99a220a42a144a128a17a19a8a24a4a87a10a12a6a9a8a64a221a88a160a162a161a24a170a137a167a7a189a137a173a177a167a7a168a121a198a115a232a157a193a157a170a86a173a174a165a156a187a4a173a177a160a162a187a7a165a156a181a171a181a176a193a156a207a108a170a76a167a7a189a139a173a174a167a7a168a35a161a177a160a176a170a137a203 a175a156a189a76a181a171a165a156a168a29a170a137a179a156a189a76a170a76a161a111a179a139a187a7a187a7a189a137a168a111a160a171a170a140a173a177a159a76a167a206a161a174a165a166a182a16a167a99a187a4a179a81a170a81a173a174a167a4a201a157a173a61a165a81a161a29a182a109a165a156a161a174a187a4a189a137a181a171a160a171a170a137a167 a161a177a160a176a170a76a175a156a189a137a181a162a165a166a168a204a170a137a179a81a189a137a170a76a161a7a207a42a161a177a179a140a173a177a159a137a167a103a175a156a167a7a170 a184 a167a7a168a43a165a156a175a156a168a174a167a7a167a121a182a16a167a7a170a86a173a45a187a121a165a166a170a137a170a76a179a166a173a11a180a90a167 a189a76a161a177a167 a184 a173a177a179a16a187a186a159a137a179a157a179a86a161a72a167a204a180a66a167a7a173a54a190a47a167a121a167a7a170a5a173a177a159a76a167a45a173a54a190a47a179a25a187a4a181a162a165a156a161a174a161a52a181a162a165a166a180a90a167a7a181a162a161a4a198 a231a61a170a137a181a171a193a20a243a157a207a171a238a75a50a86a243a109a179a156a183a115a173a177a159a76a167a113a238a1a45a157a207a244a46a136a19a50a109a195a157a170a137a179a117a190a29a170a200a170a137a179a81a189a137a170a76a161a11a165a156a163a137a163a66a167a108a165a166a168a99a160a171a170 a173a177a159a76a167a115a187a4a179a81a168a177a163a137a189a66a161a64a165a166a170 a184 a190a52a167a42a183a188a179a139a187a4a189a76a161a64a179a81a189a137a168a27a165a166a173a72a173a177a167a121a170a86a173a177a160a171a179a156a170a45a179a156a170a204a173a174a159a137a167a121a161a177a167a88a170a137a179a156a189a76a170a76a161a4a207 a165a156a161a29a165a100a168a174a167a7a181a171a167a7a172a117a165a156a170a81a173a29a161a174a165a166a182a16a163a137a181a171a167a192a179a156a183a24a170a76a179a156a189a137a170a76a161a22a160a171a170a18a173a177a159a137a167a99a181a162a165a156a170a137a175a156a189a76a165a156a175a156a167a156a198 a232a86a173a174a165a156a168a72a173a174a160a176a170a76a175a20a183a188a168a174a179a156a182 a173a177a159a76a167a113a213a35a170a137a175a81a181a176a160a162a161a177a159a79a170a66a165a117a173a177a189a76a168a174a165a156a181a151a203a230a175a156a167a121a170 a184 a167a121a168a206a190a52a179a156a168 a184 a161a7a207 a161a177a167a7a167 a184 a170a137a179a156a189a76a170a76a161 a190a47a167a121a168a177a167a119a179a156a180a139a173a186a165a166a160a171a170a137a167 a184 a180a157a193a246a163a137a168a174a179a166a197a54a167a121a187a4a173a177a160a171a179a156a170a254a189a66a161a72a160a171a170a137a175a185a165 a161a174a187a7a165a166a170a76a170a137a167 a184 a165a156a170 a184 a231a99a241a52a255a29a167 a184 a180a137a160a171a181a171a160a176a170a76a175a156a189a76a165a156a181a113a255a29a179a156a182a109a165a156a170a137a160a162a165a166a170a139a203a230a213a35a170a137a175a81a181a176a160a162a161a177a159 a184 a160a162a187a130a173a174a160a171a179a156a170a76a165a156a168a177a193a156a198a52a231a61a170a137a167a99a182a109a165a117a197a54a179a81a168a22a187a7a181a162a165a156a161a174a161a22a179a166a183a88a161a72a167a121a167 a184 a187a7a165a156a170 a184 a160 a184 a165a117a173a174a167a121a161a22a190a52a167a7a168a174a167 a165a166a189a137a173a177a179a156a182a109a165a166a173a177a160a162a187a7a165a156a181a171a181a176a193a111a165a156a170 a184 a161a177a193a139a161a54a173a174a167a7a182a109a165a166a173a177a160a162a187a7a165a156a181a176a181a171a193a29a167a121a181a176a160a171a182a16a160a171a170a76a165a166a173a177a167 a184 a207a7a170a76a165a166a182a16a167a121a181a171a193 a173a177a159a76a167a11a182a206a189a76a181a151a173a174a160a176a203a106a175a81a167a7a170 a184 a167a121a168a29a187a7a165a156a161a177a167a99a190a29a159a137a167a121a168a177a167a11a165a16a182a109a165a156a181a171a167a45a165a156a170 a184 a183a188a167a7a182a109a165a156a181a171a167a204a163a66a165a166a160a171a168 a161a177a159a76a165a166a168a174a167a204a173a177a159a137a167a11a161a174a165a166a182a16a167a61a173a177a168a186a165a166a170a76a161a177a181a162a165a117a173a174a160a176a179a81a170a113a220a188a167a156a198a175a76a198a35a173a177a159a137a167a99a182a109a165a81a161a177a187a7a189a137a181a171a160a171a170a137a167a111a170a137a179a81a189a137a170 a70a72a80a14a67a37a84a145a73a75a60a90a91a31a68a72a73a100a71a100a88a43a80a43a70a37a68a42a71a75a62a65a60a146a83a75a80a14a60a90a91a18a80a43a70a41a77a58a73a7a70a98a79a46a62a65a67a69a68a72a73a75a70a72a62a65a88a87a71a7a64a61a70a72a80a87a71a7a67a37a73a22a60a81a67a14a147a3a71a75a60a46a91 a68a72a79a46a62a65a67a61a71a75a67a37a67a37a66a81a97a99a84a81a68a72a62a65a73a22a60a95a62a65a67a61a92a75a71a75a64a65a62a74a91a46a71a39a68a72a80a87a91a138a80a14a97a99a84a81a62a121a70a72a62a74a88a14a71a75a64a65a64a121a148a9a149 a150a43a151 a73a75a70a98a67a37a73a22a97a99a80a137a88a14a73a7a70a72a84a145a73a75a70a42a71a19a147a61a68a72a79a81a80a137a67a69a148a18a67a69a68a72a80a14a97a152a97a111a71a14a148a153a60a46a73a75a68a98a154a145a80a155a71a7a154a46a64a65a80a137a68a72a73 a80a43a94a19a68a37a70a42a71a75a88a16a68a142a156a7a157a126a67a37a80a43a80a87a91a81a67a78a154a145a80a14a88a87a71a75a66a81a67a37a80a158a73a7a77a24a68a72a79a46a80a142a77a38a70a72a80a87a159a9a66a81a80a14a60a46a88a43a148a5a88a14a73a22a60a81a67a69a68a37a70a42a71a75a62a65a60a9a68a72a67a115a62a65a97a41a134 a84a145a73a22a67a37a80a14a91a44a149 a160a22a161a37a162a142a163a164a7a163a164a7a161 a160a22a165a124a161a37a166 a167a169a168a16a160a90a168a42a170a24a168a43a171 a172a132a173a16a174a124a175a37a176a75a177a163a164a75a161 a160a22a165a124a161a37a166 a167a89a168a42a160a90a168a16a170a24a168a16a171 a178a24a179 a162a142a173a16a164 a180 a139a16a139 a181 a168 a181 a168 a181 a168 a181 a162a142a173a43a164 a112 a180a43a182a43a183 a181 a168 a181 a168 a181 a168 a181 a184 a163a165a12a177 a139 a180a42a185 a186a187a85a168 a181 a168a43a188a187a85a168 a181 a189 a179a37a190 a139 a183 a112 a188a187a89a168 a181 a168a14a188a187a33a168 a181 a174a124a163a174a40a191a104a161a37a165 a192a43a183 a181 a168 a181 a168a43a193a132a168 a181 a189 a165 a179 a191a12a194a75a161a37a165 a112a72a195 a183 a181 a168 a181 a168 a181 a168 a181 a162 a179 a191a12a194a7a161a37a165 a139 a183a16a196 a181 a168 a181 a168 a181 a168 a181 a197 a173a16a191a12a194a75a161a37a165 a139 a185a43a183 a181 a168 a181 a168 a181 a168 a181 a178 a163 a197 a161 a180 a195 a139 a181 a168 a181 a168 a181 a168 a181 a194a87a176a75a174 a189 a173a43a164a7a198 a112 a196a42a185 a181 a168 a181 a168 a181 a168 a181 a198a7a173a43a176 a184 a194a14a191a12a161a37a165 a182a43a180 a186a187 a168 a181 a168 a181 a168 a181 a174 a179 a164 a112 a182 a112 a188a187 a168 a181 a168 a181 a168 a181 a198a75a173a16a176 a184 a194a14a191a12a161a37a165a124a199a93a163a164a39a199a38a177a173 a178 a112 a181 a168 a181 a168 a181 a168a14a200 a174 a179 a164a39a199a38a163a164a7a199a93a177a173 a178 a192 a181 a168 a181 a168 a181 a168a43a200 a174a40a191a12a161a37a201a1a198a7a173a43a176 a184 a191a12a194a75a161a37a165 a112 a202 a168 a202 a168 a181 a168 a181 a174a40a191a12a161a37a201a75a174 a179 a164 a180 a202 a168 a202 a168 a181 a168 a181 a184 a165a124a173a43a164a7a198a75a162 a179 a191a12a194a75a161a37a165 a112 a185 a202 a168 a181 a168 a181 a168 a181 a184 a165a124a173a43a164a7a198 a197 a173a16a191a12a194a7a161a37a165 a112a42a203 a202 a168 a181 a168 a181 a168a43a200 a184 a165a124a173a43a164a7a198a75a198a7a173a43a176 a184 a194a14a191a12a161a37a165 a180 a181 a168 a181 a168 a181 a168 a181 a184 a165a124a173a43a164a7a198a7a174 a179 a164 a203 a181 a168 a181 a168 a181 a168 a181 a173a16a176a75a164a14a191 a112a43a112 a181 a168 a181 a168 a202 a168 a181 a176a75a164a7a175a37a177a161 a139 a183 a181 a168 a181 a168 a181 a168 a181 a164a75a163a161a37a175a37a161 a182 a181 a168 a181 a168 a181 a168 a181 a164a7a161a37a201a75a194a7a161 a178 a112a43a112 a181 a168 a181 a168 a181 a168 a181 a189 a165a124a163a198a75a161 a180a43a182 a202 a168 a181 a168 a181 a168 a181 a184 a165 a179a87a179 a162 a192 a202 a168 a202 a168 a181 a168 a181 a184 a163a165a124a177 a197 a165a124a163a161a37a164a7a198 a192 a202 a168 a202 a168 a186a187 a168 a202 a189 a179a37a190 a197 a165a12a163a161a37a164a75a198 a112 a181 a168 a202 a168 a186a187 a168 a202 a177a173a43a198 a190 a183 a139 a181 a168 a202 a168 a181 a168 a181 a184 a161a37a164a14a191a104a177a161a37a162a142a173a43a164 a139 a183 a181 a168 a202 a168 a181 a168 a181 a162a142a163a174a40a191a12a165a12a161a37a174a124a174 a196 a202 a168 a181 a168 a181 a168 a181 a162a142a163a174a40a191a104a161a37a165 a192 a202 a168 a202 a168 a202 a168 a181 a166a87a176a7a161a37a161a37a164 a139 a183 a181 a168 a181 a168a43a204a55a168 a181 a205 a163a164 a184 a185 a139 a181 a168 a181 a168 a181 a168 a181 a201a7a165a124a163a164a7a175a37a161a37a174a12a174 a203 a202 a168 a181 a168 a181 a168 a181 a201a7a165a124a163a164a7a175a37a161 a183 a181 a168 a181 a168 a181 a168 a181 a184 a179a37a206 a161a37a165a124a164a7a161a37a174a12a174 a185 a181 a168 a202 a168 a181 a168a14a200 a184 a179a37a206 a161a37a165a124a164 a179 a165 a196a16a185 a202 a168 a181 a168a14a204a85a168 a181 a198a7a176a7a175a26a194a7a161a37a174a12a174 a112 a202 a168 a181 a168 a181 a168a14a200 a198a7a176 a205 a161 a183 a181 a168 a181 a168 a181 a168 a181 a161a37a162a142a201a7a165a124a161a37a174a12a174 a195 a202 a168 a181 a168 a181 a168 a181 a161a37a162a142a201a1a161a37a165 a179 a165 a112a43a112 a181 a168 a181 a168 a202 a168 a181 a189 a173a43a165 a179 a164a7a161a37a174a124a174 a139 a202 a168 a181 a168 a181 a168 a181 a189 a173a43a165 a179 a164 a180 a202 a168 a181 a168 a181 a168 a181 a178 a163a191a12a175a26a194 a112a72a195 a202 a168 a181 a168 a181 a168a14a200 a174 a179 a177a198a7a163a161a37a165 a185a14a180 a181 a168 a181 a168 a181 a168 a181 a173a43a175a69a191a12a165a124a161a37a174a124a174 a112a42a203 a181 a168 a181 a168 a188a187 a168 a181 a173a16a175a69a191 a179 a165 a185a14a180 a181 a168 a181 a168 a188a187 a168 a181 a178 a173a43a163a191a12a165a124a161a37a174a124a174 a185 a181 a168 a181 a168 a188a187 a168 a181 a178 a173a16a163a191a12a161a37a165 a112a43a112 a181 a168 a181 a168 a188a187 a168 a181 a162a142a173a43a165a124a161 a112 a192 a181 a168 a202 a168 a181 a168 a181 a174a40a191a104a173a16a177a177a163 a179 a164 a203 a181 a168 a202 a168 a181 a168a43a200 a175 a179a37a178 a180 a195 a181 a168 a181 a168 a181 a168 a181 a189 a176a7a177a177 a139 a182 a181 a168 a181 a168a14a204a85a168 a181 a189 a163a191a12a175a26a194 a196 a181 a168 a181 a168 a181 a168a14a200 a198 a179 a184 a196a43a192 a181 a168 a181 a168 a181 a168 a181 a194a75a161a37a164 a139 a180 a181 a168a43a204a55a168 a202 a168 a181 a165 a179a87a179 a174a40a191a12a161a37a165 a192 a202 a168 a181 a168 a181 a168 a202 a198 a179 a161 a112 a202 a168 a202 a168 a181 a168a14a200 a174a40a191a12a173 a184 a182 a181 a168 a202 a168 a181 a168 a181 a207 a156a22a208a75a156 a209a7a210a1a208a39a211 a158a24a165a166a180a137a181a171a167a111a238a156a191 a114 a71a7a68a72a66a81a70a42a71a7a64a9a83a22a80a14a60a46a91a81a80a43a70a89a67a37a80a14a80a87a91a126a60a46a73a22a66a81a60a46a67a89a62a65a60a82a212a55a60a81a83a22a64a65a62a65a67a37a79a82a213a3a62a121a68a72a79a126a68a72a79a46a80a14a62a121a70 a77a38a70a72a80a14a159a19a66a81a80a14a60a46a88a43a62a74a80a43a67a137a62a74a60a214a68a72a79a46a80a100a215a217a216a18a218a219a71a75a60a90a91a217a220a78a70a72a73a87a213a3a60a29a88a14a73a7a70a72a84a145a73a75a70a42a71a31a88a14a73a22a97a82a154a46a62a65a60a46a80a87a91 a71a75a60a46a91a221a68a72a79a46a80a43a62a65a70a100a84a81a70a72a73a87a86a37a80a43a88a43a68a72a62a65a73a22a60a222a73a22a60a9a68a72a73a146a211a223a64a74a71a75a60a81a83a22a66a46a71a75a83a22a80a43a67a219a224a40a225a117a226a117a225a158a73a75a97a111a71a75a60a46a62a74a71a7a60a227a147 a151 a226 a151 a70a72a80a14a60a81a88a16a79a44a147a82a212a115a226a228a216a19a84a90a71a75a60a81a62a65a67a37a79a227a147a41a216a46a226a228a216a18a64a65a73a39a92a1a80a14a60a81a80a7a229a42a230 a193 a97a99a80a14a71a75a60a46a67a63a73a22a60a81a80a153a73a75a70 a97a99a73a75a70a72a80a142a68a37a70a42a71a7a60a46a67a37a64a74a71a7a68a72a62a65a73a22a60a81a67a14a147a81a71a75a64a65a64a46a213a3a62a121a68a72a79a99a88a14a73a75a70a37a70a72a80a43a88a43a68a49a83a75a80a14a60a90a91a18a80a43a70a87a147a81a231a214a97a99a80a14a71a75a60a46a67a85a154a145a73a7a68a72a79 a83a22a80a43a60a90a91a81a80a16a70a37a134a104a88a43a73a75a70a37a70a72a80a14a88a43a68a82a71a7a60a90a91a76a62a65a60a46a88a43a73a75a70a37a70a72a80a14a88a43a68a126a68a37a70a42a71a7a60a46a67a37a64a74a71a7a68a72a62a65a73a22a60a81a67a14a147a78a232a29a60a46a73a95a68a37a70a42a71a7a60a46a67a37a64a74a71a7a134 a68a72a62a65a73a22a60a44a147a132a226a233a97a111a71a75a64a65a80a155a71a7a60a90a91a219a77a58a80a43a97a111a71a75a64a65a80a155a79a90a71a87a92a1a80a128a68a72a79a46a80a155a67a72a71a7a97a99a80a137a66a46a60a46a62a74a159a9a66a46a80a128a68a37a70a42a71a7a60a46a67a69a134 a64a74a71a7a68a72a62a65a73a22a60a44a147 a188a187 a154a145a73a7a68a72a79a52a83a22a80a14a60a46a91a81a80a43a70a37a134a12a88a14a73a7a70a37a70a72a80a14a88a43a68a5a71a75a60a46a91a76a80a87a159a9a66a90a71a7a64a78a68a37a70a42a71a75a60a81a67a37a64a74a71a7a68a72a62a65a73a22a60a81a67a14a147 a186a187 a83a22a80a43a60a90a91a81a80a16a70a37a134a104a88a43a73a75a70a37a70a72a80a14a88a43a68a78a71a7a60a90a91a82a80a14a159a19a66a46a71a75a64a19a68a37a70a42a71a75a60a81a67a37a64a93a71a39a68a72a62a65a73a22a60a46a67a14a147a9a68a72a79a81a80a49a64a74a71a7a68a37a68a72a80a43a70a55a79a46a71a39a92a19a62a65a60a46a83a132a71 a213a142a70a72a73a22a60a81a83a5a83a75a80a14a60a90a91a18a80a43a70a126a224a40a80a22a149a83a81a149a117a119a122a65a234a22a235a81a123a82a71a7a60a90a91a98a236a18a237a22a125a69a123a58a238a14a237a98a62a74a60a128a216a18a84a46a71a75a60a46a62a65a67a37a79a145a229a42a147a46a239a228a68a37a70a72a66a81a68a72a79 a213a142a71a7a67a5a60a81a73a75a68a99a71a87a92a75a71a75a62a65a64a74a71a75a154a81a64a74a80a63a224a124a71a75a64a65a64a49a68a72a79a18a70a72a80a14a80a95a216a18a64a65a73a39a92a1a80a14a60a46a80a111a64a65a62a65a154a81a70a42a71a39a70a37a148a135a91a81a62a65a88a43a68a72a62a65a73a75a60a90a71a7a70a72a62a65a80a14a67 a71a87a92a22a71a7a62a65a64a93a71a7a154a46a64a65a80a155a68a72a73a52a66a46a67a95a91a81a73a52a60a81a73a75a68a95a62a65a60a46a88a14a64a65a66a90a91a18a80a137a83a22a80a14a60a46a91a81a80a43a70a98a62a65a60a81a77a38a73a75a70a72a97a111a71a39a68a72a62a74a73a75a60a214a71a75a60a46a91 a68a72a79a46a80a228a240a138a241a132a242a18a243a142a212a55a244a117a243a214a64a65a80a43a94a18a62a65a88a14a73a75a60a137a91a81a73a9a80a14a67a3a60a81a73a75a68a61a88a14a73a22a60a9a68a42a71a7a62a74a60a95a68a72a79a46a80a14a67a37a80a132a60a81a73a22a66a81a60a46a67a16a229 a11a14a6a43a143a89a10a40a36a46a160a162a161a22a165a206a173a177a168a186a165a166a170a76a161a177a181a162a165a117a173a177a160a171a179a81a170a16a179a166a183a46a180a90a179a166a173a174a159a153a20a19a10a40a27a87a36a24a165a166a170 a184a146a245 a6a9a246a93a207a66a165a81a161a22a190a47a167a121a181a176a181a64a165a81a161 a15a18a17a19a2a18a20a22a21a24a23a26a25a7a27a192a165a156a170 a184 a4a7a6a9a8a64a221a186a198a88a223a111a181a171a181a157a179a166a173a174a159a137a167a7a168a42a161a72a167a121a167 a184 a161a46a190a52a167a7a168a174a167a115a168a174a167a4a173a174a165a156a160a171a170a137a167 a184 a220a128a160a176a170a137a203 a187a4a181a171a189 a184 a160a176a170a76a175a204a163a90a179a157a179a156a168a47a179a156a170a137a167a108a161a174a221a42a160a171a170a25a179a156a168 a184 a167a121a168a88a173a177a179a43a165a93a172a81a179a156a160 a184 a189a76a161a72a167a192a179a166a183a64a181a162a165a166a170a137a175a81a189a76a165a166a175a81a167a4a203 a161a177a163a66a167a108a187a4a160a176a208a66a187a206a195a86a170a76a179a117a190a29a181a176a167 a184 a175a156a167a156a198a206a252a137a179a81a168a45a167a4a201a137a165a166a182a16a163a137a181a171a167a156a207a90a179a81a170a137a167a25a179a166a183a115a173a174a159a137a167a16a255a29a179a156a182a109a165a166a203 a170a137a160a162a165a166a170a20a161a72a167a121a167 a184 a161a7a207a24a0a3a2a94a220a72a4a39a6a19a8a32a221a61a160a162a161a204a165a166a181a162a161a72a179a109a165a18a172a156a167a121a168a177a193a18a183a188a168a174a167a75a57a86a189a137a167a7a170a86a173a204a183a188a179a156a168a174a182a49a179a166a183 a173a177a159a76a167a61a172a81a167a7a168a174a180a31a17a132a0a164a220a42a23a69a6 a245 a25a93a221a130a207a139a165a156a170 a184 a173a174a159a137a167a7a168a174a167a4a183a188a179a81a168a177a167a111a182a109a165a156a170a157a193a206a172a81a167a7a168a174a180a76a165a166a181a90a187a4a179a156a170a137a203 a173a177a167a7a201a157a173a174a161a11a165a156a168a177a167a16a187a4a179a81a170a76a161a177a160a184 a167a7a168a174a167 a184 a180a157a193a147a173a174a159a137a167a103a161a177a193a139a161a54a173a174a167a7a182a202a183a188a168a174a179a156a182a71a173a177a159a137a167a16a180a90a167a7a175a81a160a176a170a137a203 a170a137a160a171a170a137a175a76a198a35a231a61a170a137a167a204a163a90a179a81a161a174a161a72a160a171a180a137a181a171a167a192a165a156a163a137a163a137a168a174a179a81a165a156a187a186a159a109a173a177a179a25a187a4a179a156a168a174a168a174a167a121a187a130a173a47a173a177a159a137a160a162a161a52a163a137a168a174a179a156a180a137a181a171a167a121a182 a160a162a161a90a173a177a179a111a172a81a167a7a168a174a160a176a183a188a193a29a173a177a159a76a165a166a173a150a173a177a159a76a167a35a161a72a167a121a167 a184 a161a64a167a7a201a157a173a177a168a186a165a156a187a130a173a174a167 a184 a183a188a168a174a179a156a182a215a173a174a159a137a167a35a180a137a160a171a181a171a160a171a170a137a175a156a189a66a165a166a181 a184 a160a162a187a130a173a174a160a171a179a156a170a76a165a156a168a177a193a109a159a66a165a93a172a156a167a43a179a81a170a137a181a171a193a18a170a76a179a156a182a16a160a171a170a76a165a166a181a27a182a16a167a121a165a166a170a76a160a176a170a76a175a81a161a22a180a157a193a147a187a186a159a137a167a121a187a186a195a157a160a171a170a137a175 a173a177a159a76a167a7a182a9a160a171a170 a184 a160a171a172a157a160a184 a189a76a165a166a181a171a181a171a193a20a160a171a170a215a165a196a181a171a160a171a180a137a168a186a165a166a168a174a193 a184 a160a162a187a130a173a174a160a176a179a81a170a76a165a166a168a174a193a166a198a114a199a194a167 a184 a160 a184 a170a137a179a156a173a35a173a174a165a156a195a156a167a29a173a174a159a137a160a162a161a35a165a166a163a137a163a76a168a177a179a86a165a156a187a186a159a64a207a166a173a174a168a177a193a157a160a171a170a137a175a45a173a174a179a11a195a156a167a121a167a7a163a25a173a177a159a76a167a192a165a166a182a16a179a81a189a137a170a86a173a35a179a166a183 a161a177a189a137a163a66a167a121a168a177a172a157a160a162a161a177a160a176a179a81a170a109a182a16a160a171a170a137a160a171a182a109a165a166a181a106a198 a101a33a102a40a101 a247a82a248a85a108a12a107a115a106a90a109a78a249a81a106a153a250a252a251a85a107a115a106a90a253a12a108a104a109a78a110 a223a111a180a66a161a72a179a81a181a176a189a137a173a177a167a43a168a186a165a117a173a174a159a137a167a7a168a61a173a177a159a66a165a166a170a200a168a177a167a121a181a171a165a166a173a177a160a171a172a156a167a109a220a128a170a137a179a156a168a174a182a109a165a166a181a171a160a171a216a7a167 a184 a221a47a183a188a168a174a167a75a57a86a189a137a167a7a170a137a203 a187a4a160a171a167a108a161a46a165a156a168a177a167a52a189a76a161a177a167 a184 a173a174a179a204a187a121a165a166a163a139a173a174a189a137a168a174a167a47a180a90a179a166a173a174a159a43a173a174a159a137a167 a184 a160a162a161a54a173a174a168a177a160a171a180a137a189a139a173a174a160a171a179a156a170a76a165a156a181a166a160a171a170a139a183a188a179a156a168a177a203 a182a109a165a117a173a174a160a171a179a156a170a206a165a156a170 a184 a173a177a159a137a167a192a168a177a167a121a181a176a160a162a165a156a180a137a160a171a181a176a160a176a173a54a193a61a179a166a183a90a173a177a159a76a165a166a173a115a160a171a170a139a183a188a179a156a168a174a182a109a165a117a173a174a160a176a179a81a170a109a220a188a180a76a165a81a161a72a167 a184 a179a156a170a206a161a177a165a156a182a16a163a137a181a171a167a35a161a72a160a171a216a7a167a93a221a186a198a42a234a111a170a76a187a7a167a7a168a177a173a174a165a166a160a171a170a86a173a54a193a192a160a162a161a46a167a4a201a139a163a137a181a171a160a162a187a4a160a176a173a177a181a171a193a29a168a174a167a7a163a137a168a174a167a121a161a177a167a7a170a86a173a174a167 a184 a165a156a161a192a165a16a187a4a181a162a165a156a161a174a161a29a187a7a165a156a181a176a181a171a167 a184 a219a16a57a81a189a76a167a121a161a72a173a177a160a171a179a156a170a76a165a156a180a137a181a171a167a130a222a186a198a88a248a56a170a140a173a177a159a137a160a162a161a29a182a109a165a156a170a137a170a137a167a7a168a121a207a137a179a156a170a76a167 a187a7a165a156a163a139a173a177a189a76a168a177a167a108a161a45a170a137a179a166a173a43a179a81a170a137a181a171a193a140a173a177a159a137a167a103a167a7a172a157a160 a184 a167a7a170a76a187a7a167a25a180a137a189a139a173a206a165a156a181a171a161a177a179a18a173a177a159a137a167a109a181a162a165a81a187a186a195a147a179a166a183 a167a7a172a157a160 a184 a167a121a170a76a187a4a167a156a198a24a252a137a179a81a168a42a167a4a201a137a165a166a182a16a163a137a181a171a167a156a207a93a160a176a183a32a165a61a170a76a179a156a189a137a170a138a254a48a165a166a163a137a163a90a167a121a165a156a168a174a161a24a160a171a170a138a50a61a183a188a167a121a182a25a203 a160a171a170a137a160a171a170a137a167a22a187a4a179a156a170a86a173a174a167a4a201a157a173a174a161a7a207a66a238a22a182a109a165a156a161a174a187a4a189a76a181a176a160a171a170a137a167a52a187a4a179a81a170a81a173a174a167a4a201a157a173a7a207a157a165a166a170 a184a128a255 a179a166a173a174a159a137a167a7a168a47a187a4a179a156a170a137a203 a173a177a167a7a201a157a173a174a161a29a190a29a160a176a173a177a159a140a170a137a179a16a165a93a172a117a165a166a160a171a181a162a165a166a180a76a181a176a167a192a175a156a167a7a170 a184 a167a7a168a29a160a171a170a139a183a188a179a81a168a177a182a109a165a166a173a177a160a171a179a156a170a64a207a81a173a177a159a137a167a43a175a156a167a7a170a137a203 a184 a167a121a168 a184 a160a171a161a72a173a177a168a174a160a171a180a137a189a139a173a174a160a176a179a81a170a25a179a166a183a55a254a114a160a162a161a115a182a16a179 a184 a167a121a181a176a167 a184 a165a156a161a22a252a137a168a174a167a75a57a86a189a137a167a121a170a76a187a4a193a64a220 a255 a207a121a50a139a207a171a238a108a221 a168a186a165a117a173a177a159a76a167a7a168a52a173a177a159a76a165a156a170a140a229a35a168a177a179a81a180a76a165a166a180a76a160a176a181a171a160a176a173a54a193a64a220a128a244a137a198a65a45a18a136a157a207a244a139a198a143a243a18a136a156a221a130a198 a158a22a159a137a167a18a181a171a167a121a172a156a167a7a181a52a179a166a183a204a187a4a179a156a170a137a208 a184 a167a7a170a66a187a4a167a5a160a176a170a212a173a177a159a137a167a140a179a156a180a66a161a72a167a121a168a177a172a81a167 a184a196a184 a160a162a161a72a173a177a168a174a160a176a180a76a189a139a203 a173a177a160a171a179a81a170a147a160a171a161a111a167a75a57a86a189a76a165a166a181a27a173a177a179a1a0a3a2a5a4a7a6a9a8a11a10a13a12a15a14a17a16a19a18a130a233a90a160a171a170a140a173a174a159a137a167a43a175a81a160a176a172a81a167a7a170a140a167a4a201a137a165a156a182a16a163a137a181a171a167a166a207 a173a177a159a76a167a45a187a7a179a156a170a139a208 a184 a167a7a170a76a187a7a167a61a160a162a161a20a0a21a2 a22 a22a24a23a26a25a24a23a28a27a30a29a32a31a34a33a35 a165a166a173a22a165a156a170a18a165a156a180a76a161a72a179a81a181a171a189a139a173a177a167a192a183a188a168a177a167a7a203 a57a86a189a137a167a7a170a66a187a4a193a109a179a156a183a52a238a108a244a139a198 questionable masculine feminine</definiens>
				<definiens id="1">a4 a4 a8 a4 a8 a8a7a211a22a211 a158a24a165a166a180a137a181a171a167a103a243a157a191a128a243a85a148a81a84a145a80a16a134a104a154a46a71a75a67a37a80a87a91a100a67a69a68a42a71a7a68a72a62a65a67a69a68a72a62a65a88a14a67a5a67a37a79a81a73a39a213a3a62a65a60a81a83a155a68a72a79a81a80a99a88a14a73a75a70a37a70a72a80a43a64a93a71a39a68a72a62a65a73a22a60 a154a145a80a43a68a104a213a49a80a14a80a14a60a137a73a75a60a46a80a43a134a12a64a65a80a43a68a37a68a72a80a43a70a117a67a37a66a81a96a41a94a18a80a14a67a158a71a75a60a46a91a128a83a75a70a42a71a7a97a99a97a111a71a7a68a72a62a65a88a87a71a75a64a227a83a22a80a14a60a46a91a81a80a43a70a158a62a65a60a100a156 a64a74a71a75a60a81a83a22a66a90a71a7a83a22a80a14a67 a252a137a179a156a181a171a181a171a179a117a190a29a160a171a170a137a175a249a173a177a159a76a167a121a161a177a167a185a179a81a180a76a161a177a167a7a168a174a172a93a165a166a173a177a160a171a179a156a170a66a161a4a207a212a190a52a167a185a187a7a179a156a170a76a161a177a160 a184 a167a7a168a174a167 a184 a165 a172a117a165a166a168a174a160a162a165a166a180a137a181a171a167a4a203a230a181a171a167a7a170a137a175a156a173a177a159a215a161a177a189a139a205a25a201a114a182a16a179 a184 a167a121a181a106a207a204a160a171a170a224a190a29a159a137a160a162a187a186a159a119a170a76a179a156a189a137a170a76a161a74a190a29a160a176a173a177a159 a170a137a179a99a168a174a167a7a181a171a160a162a165a166a180a137a181a171a167a52a187a4a179a156a170a86a173a174a167a4a201a157a173a174a161a88a180a90a179a156a168a174a168a174a179a117a190a94a182a16a179a156a168a174a167a22a175a156a167a121a170 a184 a167a7a168a115a160a176a170a137a183a188a179a156a168a174a182a109a165a117a173a177a160a171a179a81a170 a183a188a168a174a179a156a182a164a170a137a179a81a189a137a170a76a161a24a190a29a160a176a173a177a159a43a190a29a159a76a160a171a187a186a159a11a173a177a159a137a167a121a193a43a161a72a159a66a165a166a168a174a167a115a181a171a179a156a170a137a175a81a167a7a168a24a161a72a189a139a205a25a201a139a167a121a161a42a165a156a170 a184 a181a171a167a121a161a174a161a206a183a188a168a177a179a81a182a59a173a177a159a137a179a86a161a72a167a140a190a29a160a176a173a177a159a154a190a29a159a137a160a162a187a186a159a212a173a174a159a137a167a7a193a154a161a72a159a66a165a166a168a174a167a5a161a177a159a137a179a156a168a177a173a177a167a121a168a16a161a72a189a139a183a162a203 a208a137a201a139a167a121a161a7a198a254a158a22a159a137a160a162a161a103a160a162a161a109a167a108a165a156a161a177a160a171a181a176a193a79a160a171a182a16a163a137a181a171a167a7a182a16a167a7a170a86a173a174a167 a184 a189a76a161a72a160a171a170a137a175a79a161a72a189a139a205a25a201 a173a177a168a174a160a171a167 a182a16a179 a184 a167a7a181a162a161a42a165a166a170 a184 a173a186a165a166a195a157a160a171a170a137a175a45a165 a184 a172a117a165a166a170a86a173a186a165a166a175a156a167a52a179a166a183a90a173a177a159a76a167a192a187a4a181a162a165a156a161a174a161a42a187a4a179a81a170 a184 a160a176a173a177a160a171a179a156a170a66a165a166a181 a184 a160a162a161a72a173a177a168a174a160a176a180a76a189a139a173a177a160a171a179a156a170a99a182a16a179 a184 a167a121a181a157a180a86a193a99a189a66a161a72a160a171a170a137a175a61a173a177a159a137a167a228a57a86a189a137a167a108a161a54a173a174a160a176a179a81a170a76a165a166a180a76a181a176a167a115a182a109a165a156a161a174a161a46a165a81a161 a165a45a182a16a167a121a165a81a161a72a189a76a168a177a167a52a179a166a183a32a189a137a170a76a187a7a167a7a168a177a173a174a165a166a160a171a170a86a173a54a193a11a165a117a173 a184 a160a151a226a32a167a7a168a174a167a7a170a86a173a35a161a177a189a139a205a25a201a100a163a90a179a81a161a177a160a176a173a177a160a171a179a156a170a76a161a7a198 a101a33a102a16a15a55a102a40a101 a17a19a18a9a108a12a106a135a250a252a251a55a107a78a106a90a253a21a20 a248a56a170a137a160a176a173a177a160a162a165a166a181a171a181a171a193a166a207a64a165a166a181a171a181a42a170a137a179a156a189a76a170a76a161a11a165a166a168a174a167a100a160a176a170a86a173a174a168a177a179 a184 a189a76a187a7a167 a184 a160a171a170a74a173a174a159a137a167a25a173a177a168a174a160a171a167a100a165a156a170 a184 a173a177a159a76a167a7a160a171a168a27a187a4a181a162a165a81a161a177a161a64a187a7a179a156a170 a184 a160a176a173a174a160a176a179a81a170a76a165a166a181 a184 a160a162a161a72a173a177a168a174a160a171a180a137a189a139a173a177a160a171a179a81a170a76a161a32a165a166a168a174a167a42a165 a184a137a184 a167 a184 a173a177a179a111a167a108a165a156a187a186a159 a168a186a165a166a182a16a160a176a208a66a187a7a165a166a173a177a160a171a179a156a170a100a179a156a168a52a173a174a167a7a168a174a182a16a160a176a170a66a165a166a181a90a170a137a179 a184 a167a61a179a81a170a103a173a174a159a137a167a45a163a76a165a117a173a174a159a64a207a76a165a156a161a22a161a177a159a137a179a117a190a29a170 a160a171a170 a173a177a159a137a167a20a173a177a189a137a173a177a179a156a168a174a160a162a165a166a181a176a203a230a167a4a201a137a165a166a182a16a163a137a181a171a167a109a160a171a170a215a252a24a160a171a175a156a189a137a168a174a167a20a243a139a198a185a223a111a175a86a165a166a160a171a170a64a207a22a173a177a159a76a167a7a168a174a167 a165a166a168a174a167a111a173a54a190a52a179a25a187a186a159a137a179a156a160a162a187a4a167a108a161a4a207a86a190a29a159a137a167a4a173a174a159a137a167a7a168a22a173a174a179a206a189a66a161a72a167a61a173a54a193a157a163a66a167a7a203a106a180a76a165a81a161a72a167 a184 a161a72a173a174a165a117a173a174a160a162a161a54a173a174a160a171a187a121a161 a220a188a167a108a165a156a187a186a159 a190a52a179a156a168 a184 a159a76a165a81a161a109a165a194a182a109a165a156a161a174a161a25a187a4a179a156a170a86a173a174a168a177a160a171a180a137a189a139a173a174a160a171a179a156a170a212a167a22a57a81a189a66a165a166a181a29a173a174a179a48a238a5a179a81a170 a160a176a173a174a161a61a163a76a165a117a173a174a159a66a221a61a179a156a168a61a173a177a179a81a195a156a167a7a170a137a203a106a180a76a165a81a161a72a167 a184 a161a72a173a174a165a117a173a174a160a162a161a54a173a174a160a171a187a121a161a11a220a188a167a108a165a156a187a186a159a20a190a47a179a81a168 a184 a159a66a165a156a161a45a165 a187a4a179a81a170a86a173a177a168a174a160a176a180a76a189a139a173a177a160a171a179a156a170a20a167a75a57a86a189a76a165a156a181a88a173a177a179a140a173a174a159a137a167a109a170a157a189a137a182a100a180a66a167a121a168a99a179a166a183a29a179a139a187a7a187a4a189a76a168a177a168a174a167a7a170a76a187a7a167a121a161a45a160a171a170 a173a177a159a76a167a25a187a7a179a156a168a174a163a137a189a76a161a186a221a186a198a16a223a111a181a162a161a177a179a137a207a27a165a5a187a4a179a156a182a16a163a76a168a177a179a81a182a16a160a171a161a177a167a11a161a177a179a156a181a171a189a139a173a177a160a171a179a81a170a147a190a47a179a81a189a137a181 a184 a180a90a167 a173a177a179a154a190a52a167a7a160a171a175a156a159a86a173a109a173a174a159a137a167a196a187a4a179a156a170a86a173a174a167a4a201a157a173a177a189a76a165a156a181a204a187a7a181a162a165a156a161a174a161 a184 a160a162a161a72a173a177a168a174a160a176a180a76a189a139a173a177a160a171a179a156a170 a170a137a179a156a173a5a180a157a193 a173a177a159a76a167a204a170a157a189a137a182a100a180a90a167a7a168a22a179a166a183a24a179a157a187a121a187a4a189a137a168a174a168a174a167a7a170a76a187a7a167a121a161a47a160a176a170a18a173a177a159a76a167a45a187a7a179a156a168a174a163a137a189a76a161a7a207a139a180a137a189a139a173a111a180a157a193a16a173a177a159a76a167 a170a157a189a137a182a100a180a66a167a121a168a192a179a166a183a47a168a177a167a121a181a176a167a121a172a117a165a166a170a86a173a61a187a4a179a81a170a86a173a177a167a4a201a157a173a186a161a192a190a29a160a176a173a177a159a20a190a29a159a137a160a162a187a186a159a147a160a176a173a61a159a76a165a81a161a61a180a90a167a7a167a121a170 a161a177a167a7a167a7a170a154a220a162a183a188a179a81a168a61a167a7a201a139a165a156a182a16a163a137a181a171a167a166a207a64a165a109a190a52a179a156a168 a184 a173a177a159a66a165a117a173a99a179a139a187a7a187a4a189a76a168a174a161 a255 a173a174a160a176a182a16a167a108a161a29a183a188a168a174a179a156a182 a190a29a159a137a160a162a187a186a159a221a50a74a173a177a160a171a182a16a167a108a161a43a160a171a170a94a182a109a165a81a161a177a187a7a189a137a181a171a160a171a170a137a167a109a187a4a179a81a170a81a173a174a167a4a201a157a173a174a161a100a160a162a161a100a175a156a160a171a172a156a167a121a170a212a182a16a179a156a168a174a167 a190a52a167a7a160a171a175a156a159a86a173a16a173a177a159a66a165a166a170a215a165a196a190a52a179a156a168 a184 a179a139a187a7a187a4a189a76a168a177a168a174a160a171a170a137a175a35a47a212a173a177a160a171a182a16a167a121a161a25a183a188a168a174a179a156a182 a190a29a159a137a160a162a187a186a159 a173a54a190a29a160a162a187a4a167a204a160a171a170a18a182a109a165a81a161a177a187a7a189a137a181a171a160a176a170a76a167a192a187a4a179a81a170a81a173a174a167a4a201a157a173a174a161a186a221a186a198 a231a61a170a76a187a4a167a147a173a174a159a137a167a113a173a174a168a177a160a171a167a113a160a162a161a16a180a76a189a137a160a171a181a151a173a121a207a29a173a177a159a137a167a20a163a137a168a174a179a156a180a76a165a156a180a137a160a171a181a176a160a176a173a54a193a194a179a166a183a43a165a212a175a156a167a7a170a137a203 a184 a167a121a168a45a183a188a179a156a168a11a165a140a175a156a160a171a172a81a167a7a170a74a190a52a179a156a168 a184 a254a246a187a7a179a156a182a16a163a90a179a81a161a177a167 a184 a179a166a183a47a181a171a167a7a173a72a173a177a167a121a168a174a161a23a22 a27 a22a25a24 a33a66a33a117a33 a22a25a26 a160a162a161a11a187a4a179a81a182a16a163a137a189a139a173a174a167 a184 a165a166a181a171a179a81a170a137a175a5a173a177a159a137a167a109a163a66a165a117a173a177a159a79a187a4a179a156a168a174a168a174a167a121a161a177a163a66a179a81a170 a184 a160a171a170a137a175a18a173a177a179a153a254a246a180a157a193 a189a76a161a177a160a171a170a137a175a11a165a99a168a174a167a121a187a4a189a76a168a174a161a177a160a171a172a156a167a29a161a72a182a16a179a157a179a156a173a177a159a137a160a171a170a137a175a61a183a188a179a156a168a174a182a206a189a76a181a171a165a204a190a29a159a137a160a162a187a186a159a25a170a76a165a166a173a177a189a137a168a186a165a166a181a171a181a171a193 a173a174a165a156a195a156a167a108a161a61a165 a184 a172a117a165a166a170a86a173a174a165a156a175a156a167a11a179a156a183a35a173a177a159a137a167 a184 a160a162a161a72a173a177a168a174a160a176a180a76a189a139a173a177a160a171a179a156a170a66a165a166a181a64a168a174a167a7a163a137a168a174a167a121a161a177a167a7a170a86a173a174a165a166a173a177a160a171a179a156a170 a179a166a183a11a189a76a170a76a187a4a167a121a168a72a173a186a165a166a160a171a170a86a173a54a193a166a198a247a158a22a159a137a167a194a187a4a179a81a170 a184 a160a176a173a177a160a171a179a156a170a66a165a166a181a111a187a4a181a162a165a81a161a177a161a16a163a76a168a177a179a81a180a76a165a166a180a137a160a171a181a171a160a176a173a177a160a171a167a121a161 a175a156a160a171a172a81a167a7a170 a161a72a189a139a205a25a201a27a22 a26 a22 a26a29a28 a27 a33a117a33a66a33 a22a25a30a103a220a188a160a106a198a167a156a198a40a173a174a159a137a167a113a163a76a165a166a173a177a159 a160a171a170a79a173a174a159a137a167a147a173a174a168a177a160a171a167a140a160a162a161 a31a1a32a1a32 a16a107a2a33a22 a26 a2a34a22 a26a29a28 a27 a2 a33a66a33a117a33 a2a34a22a25a30a230a221a22a165a166a168a174a167a61a167a108a161a54a173a174a160a176a182a109a165a166a173a177a167 a184 a165a156a161a7a191 a35 a4a7a6a25a36a34a12a7a37a39a38a41a40a22a25a26a42a22a25a26a29a28 a27 a33a66a33a117a33 a22 a30a18 a29 a4 a26a44a43a46a45a5a47a14a48a50a49a52a51a1a49a52a51a54a53a41a55a57a56a58a56a58a56a49a52a59a25a60 a6a61a36a48a12a10a37a39a38a68a18a46a62 a4 a26a54a43a57a45a5a47a14a48a52a49 a51 a49 a51a1a53a41a55 a56a58a56a58a56a49 a59 a60 a6a236a8a11a10a96a12a15a14a68a16a19a18a64a63 a35 a4a7a6a25a36a34a12a10a37a39a38a41a40a22a25a26a42a22a25a26a42a28 a27 a33a66a33a117a33 a22 a30 a23a28a27 a18 a220a54a238a93a221 a158a22a159a137a167a61a168a177a167a108a187a4a189a137a168a186a161a72a160a171a179a81a170a100a187a121a165a166a170a103a161a72a173a177a179a81a163a16a167a7a160a176a173a177a159a137a167a121a168a47a165a166a173a47a168a174a179a86a179a156a173a115a181a171a167a7a172a81a167a7a181a106a207a156a190a29a159a137a167a121a168a177a167a192a165a156a170 c cc t</definiens>
			</definition>
</paper>

		<paper id="2015">
			<definition id="0">
				<sentence>A signature is a set of suffixes , any of which can be added to several roots to create a word .</sentence>
				<definiendum id="0">signature</definiendum>
				<definiens id="0">a set of suffixes , any of which can be added to several roots to create a word</definiens>
			</definition>
			<definition id="1">
				<sentence>Here , NULL means the empty suffix .</sentence>
				<definiendum id="0">NULL</definiendum>
				<definiens id="0">means the empty suffix</definiens>
			</definition>
			<definition id="2">
				<sentence>A trie is a tree representation of the distinct words with a character label on each branch .</sentence>
				<definiendum id="0">trie</definiendum>
				<definiens id="0">a tree representation of the distinct words with a character label on each branch</definiens>
			</definition>
			<definition id="3">
				<sentence>Linguistica applies a wide array of techniques including heuristics and the application of the principle of Minimum Description Length ( MDL ) to find the best division of words into roots and suffixes , as well as prefixes in some cases .</sentence>
				<definiendum id="0">Linguistica</definiendum>
				<definiendum id="1">Minimum Description Length</definiendum>
				<definiens id="0">applies a wide array of techniques including heuristics and the application of the principle of</definiens>
			</definition>
			<definition id="4">
				<sentence>With all these techniques , Linguistica seeks optimal breakpoints in each word .</sentence>
				<definiendum id="0">Linguistica</definiendum>
				<definiens id="0">seeks optimal breakpoints in each word</definiens>
			</definition>
			<definition id="5">
				<sentence>Recall is the proportion of distinct words from Tom Sawyer that are correctly divided into root and suffix .</sentence>
				<definiendum id="0">Recall</definiendum>
				<definiens id="0">the proportion of distinct words from Tom Sawyer that are correctly divided into root and suffix</definiens>
			</definition>
			<definition id="6">
				<sentence>HubMorph achieves the same performance as Linguistica on the words in Tom Sawyer .</sentence>
				<definiendum id="0">HubMorph</definiendum>
				<definiens id="0">achieves the same performance as Linguistica on the words in Tom Sawyer</definiens>
			</definition>
</paper>

		<paper id="4005">
			<definition id="0">
				<sentence>The Geologist’s Field Assitant requires the ability to make voice notes that can be stored and transmitted .</sentence>
				<definiendum id="0">Geologist’s Field Assitant</definiendum>
				<definiens id="0">requires the ability to make voice notes that can be stored and transmitted</definiens>
			</definition>
			<definition id="1">
				<sentence>Version WER FREJ AWER FACC xCPUrt ( % ) ( % ) ( % ) ( % ) ( % ) Baseline CFG Language Model Training 12.56 4.54 7.72 — 58.9 Test 9.5 3.25 7.5 25.5 57.5 Probabilistic CFG Language Model Training 9.97 5.57 4.6 — 19.4 Test 8.99 7.32 3.7 9.09 19.0 Table 2 : Comparing Baseline and Probabilistic CFG We will demonstrate a dialogue system that has an improved ability to discriminate between speech that is intended for different purposes , treating some as data objects to be saved , and others identified as being out-ofdomain .</sentence>
				<definiendum id="0">Version WER FREJ AWER FACC xCPUrt</definiendum>
				<definiens id="0">% ) Baseline CFG Language Model Training 12.56 4.54 7.72 — 58.9 Test 9.5 3.25 7.5 25.5 57.5 Probabilistic CFG Language Model Training 9.97 5.57 4.6 — 19.4 Test 8.99 7.32 3.7 9.09 19.0 Table 2 : Comparing Baseline and Probabilistic CFG We will demonstrate a dialogue system that has an improved ability to discriminate between speech that is intended for different purposes , treating some as data objects to be saved , and others identified as being out-ofdomain</definiens>
			</definition>
</paper>

		<paper id="3001">
			<definition id="0">
				<sentence>Let C ( w ) be a relation that maps a given occurrence of a word w to its semantic class C 2 C. Then , for any story D , we de ne the list of features Fi ( D ) that belong to class Ci as follows : Fi ( D ) = fw1 ; : : ; wn j8nj=1 ( wj 2 D ) ^ ( C ( wj ) = Ci ) g ( 2 ) where n = jFi ( D ) j. In other words , Fi ( D ) represents the list of all tokens in the story D that fall into the category Ci .</sentence>
				<definiendum id="0">C ( w )</definiendum>
				<definiendum id="1">Fi ( D )</definiendum>
				<definiens id="0">a relation that maps a given occurrence of a word</definiens>
			</definition>
			<definition id="1">
				<sentence>Thus , each story is now represented as a set of feature-lists of all the semantic-classes as shown below : D fF1 ( D ) ; : : : ; FjCj ( D ) g ( 3 ) For each semantic class Ci and story D , we de ne the class-speci c semantic language model Mi ( D ) as follows : P ( wjMi ( D ) ) = f ( w ; Fi ( D ) ) jF i ( D ) j + ( 1 ) f ( w ; Fi ( GE ) ) jF i ( GE ) j ( 4 ) where f ( w ; Fi ( D ) ) is the number of occurrences of a word w in a story D in the class Ci and GE is a general English collection , while is a smoothing parameter that lies between 0 and 1 .</sentence>
				<definiendum id="0">Fi</definiendum>
				<definiendum id="1">Fi</definiendum>
				<definiendum id="2">GE</definiendum>
				<definiens id="0">the number of occurrences of a word w in a story D in the class</definiens>
				<definiens id="1">a general English collection , while is a smoothing parameter that lies between 0 and 1</definiens>
			</definition>
			<definition id="2">
				<sentence>Thus , the class-speci c semantic language model Mi ( D ) is a smoothed probability distribution of words in class Ci of story D. This is analogous to the standard document language models used by IR researchers .</sentence>
				<definiendum id="0">class-speci c semantic language model Mi</definiendum>
			</definition>
			<definition id="3">
				<sentence>Given two stories D1 and D2 , the semantic class speci c likelihood of D2 with respect to D1 is given by : Li ( D2jD1 ) = ln ( P ( Fi ( D2 ) ) jMi ( D1 ) P ( F i ( D2 ) ) jMi ( GE ) ) = ln ( nY j=1 ( P ( wjjMi ( D1 ) ) P ( w jjMi ( GE ) ) ) f ( wj ; Fi ( D2 ) ) ) ( 5 ) where n = jFi ( D2 ) j. We compute the loglikelihood ratio instead of just the generative probability P ( D2jM ( D1 ) ) to overcome the tendency of the generative probability to favor shorter stories .</sentence>
				<definiendum id="0">n = jFi</definiendum>
			</definition>
			<definition id="4">
				<sentence>We compute the semantic-class-speci c loglikelihood scores for all classes and treat them as components of the feature vector x of the sample as shown below : xi ( D1 ; D2 ) = Li ( D2jD1 ) ( 7 ) We use a linear discriminant function that is a linear combination of the components of x for classi cation as shown in the following equation : g ( y ) = wT y ( 8 ) where y is the augmented feature vector given by y = [ 1 ; x ] T , w = [ w0 ; w1 ; : : ; wjCj ] T is the weight vector .</sentence>
				<definiendum id="0">y</definiendum>
				<definiendum id="1">] T , w</definiendum>
				<definiendum id="2">T</definiendum>
				<definiens id="0">a linear combination of the components of x for classi cation as shown in the following equation : g ( y )</definiens>
				<definiens id="1">the weight vector</definiens>
			</definition>
			<definition id="5">
				<sentence>The system’s performance is then evaluated using a topicweighted Detection Error Trade-off ( DET ) curve ( Martin et al. , 1997 ) that plots miss rate against false alarm over a large number of story pairs , at different values of decision-threshold .</sentence>
				<definiendum id="0">topicweighted Detection Error Trade-off</definiendum>
				<definiens id="0">Martin et al. , 1997 ) that plots miss rate against false alarm over a large number of story pairs</definiens>
			</definition>
			<definition id="6">
				<sentence>The training set consists of 7200 story pairs .</sentence>
				<definiendum id="0">training set</definiendum>
			</definition>
			<definition id="7">
				<sentence>However , somewhat surprisingly , the class N SV SA receives higher weight than the class P SO SL indicating that the former class contains more topical information than the latter .</sentence>
				<definiendum id="0">class N SV SA</definiendum>
				<definiens id="0">receives higher weight than the class P SO SL indicating that the former class contains more topical information than the latter</definiens>
			</definition>
			<definition id="8">
				<sentence>The smoothing parameters and the perceptron weights are set to the val1 2 5 10 20 40 60 80 90 .01 .02 .05 .1 .2 .5 1 2 5 10 20 40 60 80 90 Miss probability ( in % ) False Alarms probability ( in % ) Lambda = 0.2 Random Performance Perceptron weighted class-specific LM Perceptron weighted class-specific LM TW Min DET Norm ( Cost ) = 0.1200 Unigram Unigram TW Min DET Norm ( Cost ) = 0.1136 Figure 3 : Comparison of semantic LM and unigram performance on training set ues learnt on the training set .</sentence>
				<definiendum id="0">class-specific LM Perceptron weighted class-specific LM TW Min DET Norm</definiendum>
				<definiens id="0">semantic LM and unigram performance on training set ues learnt on the training set</definiens>
			</definition>
			<definition id="9">
				<sentence>We believe that semantic information is more critical in tasks such as New Event Detection which involves identifying the rst story that discusses a particular event .</sentence>
				<definiendum id="0">Event Detection</definiendum>
				<definiens id="0">involves identifying the rst story that discusses a particular event</definiens>
			</definition>
</paper>

		<paper id="3005">
			<definition id="0">
				<sentence>EFD is a bottomup , right-to-left parser , that needs no active edges .</sentence>
				<definiendum id="0">EFD</definiendum>
				<definiens id="0">a bottomup , right-to-left parser , that needs no active edges</definiens>
			</definition>
			<definition id="1">
				<sentence>The chart contains n a0 1 entries ( n is the number of words in the input sentence ) , each entry i holdingedges that have their right margin at position i. To ensure that unification is carried through internal Prolog unification , we encoded descriptions as Prolog terms for parsing TFSGs .</sentence>
				<definiendum id="0">n</definiendum>
				<definiens id="0">the number of words in the input sentence</definiens>
			</definition>
			<definition id="2">
				<sentence>Since types are used as index keys , this list is defined as La0 M a1a3a2a5a4 ta6 t a7 kM a8a3a9 a4a11a10 a8 , where kM is the index key for M , a10 is the unique most general type , and a7 is the type unification .</sentence>
				<definiendum id="0">a10</definiendum>
				<definiendum id="1">a7</definiendum>
				<definiens id="0">La0 M a1a3a2a5a4 ta6 t a7 kM a8a3a9 a4a11a10 a8 , where kM is the index key for M ,</definiens>
				<definiens id="1">the unique most general type , and</definiens>
			</definition>
</paper>

		<paper id="4015">
			<definition id="0">
				<sentence>The Phrasalator is a one-way device that can recognize a set of pre-defined phrases and play a recorded translation , [ 1 ] .</sentence>
				<definiendum id="0">Phrasalator</definiendum>
				<definiens id="0">a one-way device that can recognize a set of pre-defined phrases and play a recorded translation</definiens>
			</definition>
			<definition id="1">
				<sentence>This step streamlines expansion to new languages , and CMU has a long history in working with interlingua based translation systems .</sentence>
				<definiendum id="0">CMU</definiendum>
				<definiens id="0">a long history in working with interlingua based translation systems</definiens>
			</definition>
			<definition id="2">
				<sentence>The Arabic language poses a number of challenges for any speech translation system .</sentence>
				<definiendum id="0">Arabic language</definiendum>
				<definiens id="0">poses a number of challenges for any speech translation system</definiens>
			</definition>
</paper>

		<paper id="1022">
			<definition id="0">
				<sentence>In this way , the Logic Prover is a powerful tool in boosting the accuracy of the QA system .</sentence>
				<definiendum id="0">Logic Prover</definiendum>
				<definiens id="0">a powerful tool in boosting the accuracy of the QA system</definiens>
			</definition>
			<definition id="1">
				<sentence>Candidate answers returned by the Answer Extraction module are classified as open text due to the unpredictable nature of their grammatical structure .</sentence>
				<definiendum id="0">Candidate answers</definiendum>
				<definiens id="0">returned by the Answer Extraction module are classified as open text due to the unpredictable nature of their grammatical structure</definiens>
			</definition>
			<definition id="2">
				<sentence>The Axiom Builder converts the Logic Forms for the question , the glosses , and its candidate answers into axioms .</sentence>
				<definiendum id="0">Axiom Builder</definiendum>
				<definiens id="0">converts the Logic Forms for the question , the glosses , and its candidate answers into axioms</definiens>
			</definition>
			<definition id="3">
				<sentence>A text logic form ( LF ) is an intermediary step between syntactic parse and the deep semantic form .</sentence>
				<definiendum id="0">LF</definiendum>
				<definiens id="0">an intermediary step between syntactic parse and the deep semantic form</definiens>
			</definition>
			<definition id="4">
				<sentence>The predicate names consist of the base form of the word concatenated with the part of speech of the word .</sentence>
				<definiendum id="0">predicate names</definiendum>
				<definiens id="0">consist of the base form of the word concatenated with the part of speech of the word</definiens>
			</definition>
			<definition id="5">
				<sentence>Lexical chains : ( 1 ) game : n # 3 a5 HYPERNYM a5 recreation : n # 1 a5 HYPONYM a5 sport : n # 1 ( 2 ) originate in : v # 1 a5 HYPONYM a5 stem : v # 1a5 GLOSS a5 origin : n # 1 a5 GLOSS a5 be : v # 1 Q1403 : When was the internal combustion engine invented ?</sentence>
				<definiendum id="0">Lexical chains</definiendum>
			</definition>
			<definition id="6">
				<sentence>Using abduction , an axiom is built such that the head noun of the complex nominal in the question implies the remaining nouns in the complex nominal : all x1 ( mosaic nn ( x1 ) a5 internet nn ( x1 ) &amp; browser nn ( x1 ) ) An additional axiom is built such that all the nouns in the complex nominal imply a complex nominal : all x1 ( internet nn ( x1 ) &amp; browser nn ( x1 ) &amp; mosaic nn ( x1 ) a5 nn nnc ( x1 , x1 , x1 , x1 ) ) So as not to restrict the ordering of the nouns in the noun phrase from which the complex nominal is built , the same argument is used for each of the noun predicates in the complex nominal .</sentence>
				<definiendum id="0">x1 ( internet nn</definiendum>
				<definiens id="0">the nouns in the complex nominal imply a complex nominal : all</definiens>
			</definition>
			<definition id="7">
				<sentence>Hyperresolution is an inference rule that does multiple binary resolution steps in one , where binary resolution is an inference mechanism that looks for a positive literal in one clause and negative form of that same literal in another clause such that the two literals can be canceled , resulting in a newly inferred clause .</sentence>
				<definiendum id="0">Hyperresolution</definiendum>
				<definiendum id="1">binary resolution</definiendum>
				<definiens id="0">an inference rule that does multiple binary resolution steps in one</definiens>
				<definiens id="1">an inference mechanism that looks for a positive literal in one clause and negative form of that same literal</definiens>
			</definition>
			<definition id="8">
				<sentence>Answer : In particular , a program called Mosaic , developed by the National Center for Supercomputing Applications ( NCSA ) at the University of Illinois at Urbana Champaign , is gaining popularity as an easy to use point and click interface for searching portions of the Internet .</sentence>
				<definiendum id="0">Answer</definiendum>
				<definiens id="0">In particular , a program called Mosaic , developed by the National Center for Supercomputing Applications ( NCSA</definiens>
			</definition>
			<definition id="9">
				<sentence>ALF : In IN ( x1 , x28 ) &amp; particular JJ ( x29 ) &amp; program NN ( x1 ) &amp; call VB ( e1 , x27 , x30 ) &amp; Mosaic NN ( x2 ) &amp; develop VB ( e2 , x2 , x31 ) &amp; by IN ( e2 , x8 ) &amp; National NN ( x3 ) &amp; Center NN ( x4 ) &amp; for NN ( x5 ) &amp; Supercomputing NN ( x6 ) &amp; application NN ( x7 ) &amp; nn NNC ( x8 , x3 , x4 , x5 , x6 , x7 ) &amp; NCSA NN ( x9 ) &amp; at IN ( e2 , x15 ) &amp; University NN ( x10 ) &amp; of NN ( x11 ) &amp; Illinois NN ( x12 ) &amp; at NN ( x13 ) &amp; Urbana NN ( x14 ) &amp; nn NNC ( x15 , x10 , x11 , x12 , x13 , x14 ) &amp; Champaign NN ( x16 ) &amp; gain VB ( e3 , x1 , x17 ) &amp; popularity NN ( x17 ) &amp; as IN ( e3 , x32 ) &amp; easy JJ ( x33 ) &amp; use VB ( e4 , x34 , x26 ) &amp; point NN ( x18 ) &amp; and CC ( x26 , x18 , x21 ) &amp; click NN ( x19 ) &amp; interface NN ( x20 ) &amp; nn NNC ( x21 , x19 , x20 ) &amp; for IN ( x26 , e5 ) &amp; search VB ( e5 , x26x22 ) &amp; portion NN ( x22 ) &amp; of IN ( x22 , x23 ) &amp; Internet NN ( x23 ) Answer Axiom : exists e1 e2 e3 e4 e5 x1 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19 x2 x20 x21 x22 x23 x26 x27 x28 x3 x32 x33 x4 x5 x6 x7 x8 x9 ( in in ( e2 , x28 ) &amp; particular jj ( x28 ) &amp; program nn ( x1 ) &amp; call vb ( e1 , x27 , x1 ) &amp; mosaic nn ( x2 ) &amp; develop vb ( e2 , x8 , x2 ) &amp; by in ( e2 , x8 ) &amp; national nn ( x3 ) &amp; center nn ( x4 ) &amp; for nn ( x5 ) &amp; supercomputing nn ( x6 ) &amp; application nn ( x7 ) &amp; nn nnc ( x8 , x3 , x4 , x5 , x6 , x7 ) &amp; ncsa nn ( x9 ) &amp; at in ( x8 , x15 ) &amp; university nn ( x10 ) &amp; of nn ( x11 ) &amp; illinois nn ( x12 ) &amp; at nn ( x13 ) &amp; urbana nn ( x14 ) &amp; nn nnc ( x15 , x10 , x11 , x12 , x13 , x14 ) &amp; champaign nn ( x16 ) &amp; gain vb ( e3 , x2 , x17 ) &amp; popularity nn ( x17 ) &amp; as in ( e3 , x32 ) &amp; easy jj ( x33 ) &amp; use vb ( e4 , x9 , x2 ) &amp; point nn ( x18 ) &amp; and cc ( x26 , x18 , x21 ) &amp; click nn ( x19 ) &amp; interface nn ( x20 ) &amp; nn nnc ( x21 , x19 , x20 ) &amp; for in ( x26 , e5 ) &amp; search vb ( e5 , x2 , x22 ) &amp; portion nn ( x22 ) &amp; of in ( x22 , x23 ) &amp; internet nn ( x23 ) ) .</sentence>
				<definiendum id="0">Internet NN</definiendum>
				<definiens id="0">particular jj ( x28 ) &amp; program nn ( x1 ) &amp; call vb ( e1 , x27</definiens>
			</definition>
</paper>

		<paper id="1007">
			<definition id="0">
				<sentence>WordNet ( Miller 1999 ; Fellbaum 1998 ) , a lexical database which organizes words into synsets , sets of synonymous words , and specifies a number of relationships such as hypernym , synonym , meronym which can exist between the synsets in the lexicon , has been shown to be fruitful in the calculation of semantic similarity .</sentence>
				<definiendum id="0">WordNet</definiendum>
				<definiens id="0">organizes words into synsets , sets of synonymous words , and specifies a number of relationships such as hypernym , synonym , meronym which can exist between the synsets in the lexicon</definiens>
			</definition>
			<definition id="1">
				<sentence>In particular , sentence similarity was considered as a function which took as arguments a sentence s1 and a second sentence s2 and returned a value representing the semantic relevance of s1 in respect of s2 in the context of knowledge B , i.e. semantic-relevance ( s1 , s2 , B ) = n ∈a0 semantic-relevance ( s1 , s , B ) &lt; semanticrelevance ( s2 , s , B ) represents the fact that sentence s1 is less relevant than s2 in respect to the sentence s and the context B. In our experiments , B was taken to be the set of semantic relations given by WordNet .</sentence>
				<definiendum id="0">B )</definiendum>
				<definiens id="0">a function which took as arguments a sentence s1 and a second sentence s2 and returned a value representing the semantic relevance of s1 in respect of s2 in the context of knowledge B , i.e. semantic-relevance ( s1 , s2 , B ) = n ∈a0 semantic-relevance ( s1 , s , B ) &lt; semanticrelevance ( s2 , s ,</definiens>
			</definition>
			<definition id="2">
				<sentence>In other words , given two sets Q and P , where Q= { qw1 , qw2 , … , qwn } and P= { pw1 , pw2 , … , pwm } , the similarity between Q and P is given by 1 &lt; p &lt; n Argmaxm similarity ( qwp , pwm ) The function similarity ( w1 , w2 ) maps the stems of the two words w1 and w2 to a similarity measure m representing how semantically related the two words are ; similarity ( wi , wj ) &lt; similarity ( wi , wk ) represents the fact that the word wj is less semantically related than wk in respect to the word wi .</sentence>
				<definiendum id="0">Q=</definiendum>
				<definiendum id="1">w2 )</definiendum>
				<definiens id="0">maps the stems of the two words w1 and w2 to a similarity measure m representing how semantically related the two words</definiens>
			</definition>
			<definition id="3">
				<sentence>In particular , similarity ( w1 , w2 ) = 0 if w1∈ST ∨ w2∈ST , where ST is a set containing a number of stop-words ( e.g. “the” , “a” , “to” ) which are too common to be able to be usefully employed to estimate semantic similarity .</sentence>
				<definiendum id="0">ST</definiendum>
				<definiens id="0">a set containing a number of stop-words ( e.g. “the” , “a” , “to” ) which are too common to be able to be usefully employed to estimate semantic similarity</definiens>
			</definition>
			<definition id="4">
				<sentence>The information retrieval engine selects a subset of the available documents based on a number of keywords derived from the question at hand .</sentence>
				<definiendum id="0">information retrieval engine</definiendum>
				<definiens id="0">selects a subset of the available documents based on a number of keywords derived from the question at hand</definiens>
			</definition>
</paper>

		<paper id="1003">
			<definition id="0">
				<sentence>Pairwise MSA takes two sentences and a scoring function giving the similarity between words ; it determines the highest-scoring way to perform insertions , deletions , and changes to transform one of the sentences into the other .</sentence>
				<definiendum id="0">Pairwise MSA</definiendum>
				<definiens id="0">takes two sentences and a scoring function giving the similarity between words</definiens>
			</definition>
</paper>

		<paper id="1037">
			<definition id="0">
				<sentence>But Yahoo tends to use those publishers over and over again , leaving for each a trai ishing habit .</sentence>
				<definiendum id="0">Yahoo</definiendum>
				<definiens id="0">tends to use those publishers over and over again , leaving for each a trai ishing habit</definiens>
			</definition>
			<definition id="1">
				<sentence>Two methods are used : • topic signature ( Lin and Hovy , 2000 ) : a topic signature is a family of related terms { topic , signature } , where topic is the target concept and signature is a vecto related s. The topic in e formula is assigned with the domain e. To nstruct the set of related words , we consider N 2 N 3 N 1 e s E 2 E 3 E 1 Figure 3 .</sentence>
				<definiendum id="0">topic</definiendum>
				<definiendum id="1">signature</definiendum>
				<definiens id="0">a family of related terms { topic , signature }</definiens>
			</definition>
			<definition id="2">
				<sentence>Recall measures how well a summarizer retains original content .</sentence>
				<definiendum id="0">Recall</definiendum>
			</definition>
			<definition id="3">
				<sentence>Precision measures how well a system generates summaries .</sentence>
				<definiendum id="0">Precision</definiendum>
			</definition>
			<definition id="4">
				<sentence>SRECALL and SPRECISION are the strict recall and strict precision that take into consideration only units with full completeness in unit coverage .</sentence>
				<definiendum id="0">SPRECISION</definiendum>
				<definiens id="0">the strict recall and strict precision that take into consideration only units with full completeness in unit coverage</definiens>
			</definition>
			<definition id="5">
				<sentence>LRECALL and LPRECISION are the lenient recall and lenient precision that count units with partial and full completeness in unit coverage .</sentence>
				<definiendum id="0">LPRECISION</definiendum>
				<definiens id="0">the lenient recall and lenient precision that count units with partial and full completeness in unit coverage</definiens>
			</definition>
			<definition id="6">
				<sentence>Headline generation is another task that we can approach equipped with our large restructured web corpus .</sentence>
				<definiendum id="0">Headline generation</definiendum>
				<definiens id="0">large restructured web corpus</definiens>
			</definition>
</paper>

		<paper id="1023">
			<definition id="0">
				<sentence>Co-training ( Blum and Mitchell , 1998 ) is a multi-view weakly supervised algorithm that trains two classifiers that can help augment each other’s labeled data using two separate but redundant views of the data .</sentence>
				<definiendum id="0">Co-training</definiendum>
			</definition>
			<definition id="1">
				<sentence>Self-training is a single-view weakly supervised algorithm that has appeared in various forms in the literature .</sentence>
				<definiendum id="0">Self-training</definiendum>
				<definiens id="0">a single-view weakly supervised algorithm that has appeared in various forms in the literature</definiens>
			</definition>
			<definition id="2">
				<sentence>SPAN I if one NP spans the other ; else C. MAXIMALNP I if both NPs have the same maximal NP projection ; else C. SYNTAX I if the NPs have incompatible values for the BINDING , CONTRAINDICES , SPAN or MAXIMALNP constraints ; else C. INDEFINITE I if NPa5a6a3 is an indefinite and not appositive ; else C. PRONOUN I if NPa2a7a3 is a pronoun and NPa5a6a3 is not ; else C. EMBEDDED 1 Y if NPa2a7a3 is an embedded noun ; else N. TITLE I if one or both of the NPs is a title ; else C. Semantic WNCLASS C if the NPs have the same WordNet semantic class ; I if they don’t ; NA if the semantic class information for one or both NPs can not be determined .</sentence>
				<definiendum id="0">else N. TITLE I</definiendum>
				<definiens id="0">an indefinite and not appositive ; else C. PRONOUN I if NPa2a7a3 is a pronoun</definiens>
				<definiens id="1">an embedded noun ;</definiens>
				<definiens id="2">a title ; else C. Semantic WNCLASS C if the NPs have the same WordNet semantic class</definiens>
			</definition>
			<definition id="3">
				<sentence>ALIAS C if one NP is an alias of the other ; else I. Positional SENTNUM Distance between the NPs in terms of the number of sentences .</sentence>
				<definiendum id="0">ALIAS C</definiendum>
				<definiens id="0">an alias of the other ; else I. Positional SENTNUM Distance between the NPs in terms of the number of sentences</definiens>
			</definition>
			<definition id="4">
				<sentence>For co-training , self-training , and EM , the best results ( F-measure ) achieved by the algorithms and the corresponding parameter settings ( with views v , growth size g , pool size p , number of iterations i , and number of bags b ) are shown .</sentence>
				<definiendum id="0">EM</definiendum>
				<definiens id="0">F-measure ) achieved by the algorithms and the corresponding parameter settings ( with views v , growth size g , pool size p , number of iterations i , and number of bags b ) are shown</definiens>
			</definition>
			<definition id="5">
				<sentence>The output of FS-EM is a classifier that the weakly supervised learner learns from a35 and a36 using only the features in a44 a53a19a38a4a45a49a54a34a55 .</sentence>
				<definiendum id="0">FS-EM</definiendum>
			</definition>
			<definition id="6">
				<sentence>Input : a63 ( a supervised learning algorithm ) a64 ( a single-view weakly supervised learning algorithm ) a57 ( labeled data ) a58 ( unlabeled data ) a65 ( original feature set ) a59 ( true positive class prior ) a66 ( deviation threshold ) Initialize : a67a69a68a70a60a72a71a65 a71 , a65a74a73a76a75a78a77 a68a70a60a80a79 for a81 = 1 , ... , a67 : foreach a82a39a2 ina65 : use a64 to learn a classifier a83 froma57 and a58 using only a65a74a73a84a75a78a77a27a85a27a86 a82a39a2a88a87 with a63 as the underlying supervised learner use a83 to classify all instances ina57 a85 a58 a59 a2 : = probability that an instance ina57 a85 a58 is labeled as positive by a83 use a63 to train a classifier a83a74a89 on a58 usinga65 a73a76a75a78a77 a85a31a86 a82 a2 a87 only a90 a2 : = classification accuracy of a83 a89 ona57 a63a92a91a94a93a18a95a34a96 a90 a68a70a60 a86 a90 a2a97a71a84a71a59a92a2a92a98a99a59a100a71a84a101 a66 a87 if a63a92a91a102a93a19a95a34a96 a90a104a103a60a105a79 a106 a89 a68a70a60 argmaxa2a107a63a92a91a94a93a18a95a34a96 a90 else a106 a89a108a68a70a60 argmina2 a86 a71a59a92a2a100a98a99a59a100a71a84a87 a65 a89a110a109 a81a49a111a29a68a112a60a113a82 a2a115a114 a63 a89a110a109 a81a49a111a32a68a112a60 a90 a2a115a114 a116 a89a110a109 a81a49a111a29a68a112a60a105a59 a2a114 a65a74a73a76a75a78a77 a68a70a60 a65a74a73a76a75a78a77a31a85a27a86 a82 a2a117a114 a87 a65 a68a112a60 a65a119a118a120a86 a82 a2a117a114 a87 a121 a68a70a60 a86a32a122 a71 a109 a71 a116 a89a110a109 a122 a111a123a98a124a59a100a71a49a101 a66 a111a21a87 a125 a89 a68a70a60 max a86 a125 a71a84a63 a89 a109 a125 a111a21a126a127a63 a89 a109 a122 a111a129a128 a122a76a130 a125a74a131 a121 a87 a65a16a132 a2 a73a76a133a102a134 a68a112a60 a86a32a65 a89a109 a125 a111a108a71 a125 a101 a125 a89a100a87 use a64 to learn a classifier a83 a132 a2a73a76a133a102a134 froma57 and a58 using only a65a16a132 a2 a73a84a133a102a134 with a63 as the underlying supervised learner return a83 a132 a2a73a84a133a50a134 Figure 4 : The FS-EM algorithm .</sentence>
				<definiendum id="0">a67</definiendum>
				<definiens id="0">classify all instances ina57 a85 a58 a59 a2 : = probability that an instance ina57 a85 a58 is labeled as positive by a83 use a63 to train a classifier a83a74a89 on a58 usinga65 a73a76a75a78a77 a85a31a86 a82 a2 a87 only a90 a2 : = classification accuracy</definiens>
			</definition>
</paper>

		<paper id="2035">
			<definition id="0">
				<sentence>Winnow is a neuron-like network where several nodes are connected to a target node [ 4 , 5 ] .</sentence>
				<definiendum id="0">Winnow</definiendum>
				<definiens id="0">a neuron-like network where several nodes</definiens>
			</definition>
</paper>

		<paper id="2026">
			<definition id="0">
				<sentence>Within 12 hours of the announcement we had zoned page images from a CebuanoEnglish dictionary that was available commercially in Adobe Page Description Format ( PDF ) to identify each dictionary entry , performed optical character recognition , and parsed the entries to construct a bilingual term list .</sentence>
				<definiendum id="0">PDF )</definiendum>
				<definiens id="0">to identify each dictionary entry , performed optical character recognition , and parsed the entries to construct a bilingual term list</definiens>
			</definition>
			<definition id="1">
				<sentence>We took the mean reciprocal rank ( the inverse of the harmonic mean ) as a figure of merit for each configuration , and used a paired two-tailed a0 test ( with pa1 0.05 ) to assess the statistical significance of observed differences .</sentence>
				<definiendum id="0">reciprocal rank</definiendum>
				<definiens id="0">the inverse of the harmonic mean</definiens>
			</definition>
</paper>

		<paper id="2006">
			<definition id="0">
				<sentence>Example-Based Machine Translation ( EBMT ) is adaptable to new domains .</sentence>
				<definiendum id="0">Example-Based Machine Translation ( EBMT</definiendum>
				<definiens id="0">adaptable to new domains</definiens>
			</definition>
			<definition id="1">
				<sentence>TEL is split into two parts : a test set of 1,653 sentence pairs and a training set of 9,918 .</sentence>
				<definiendum id="0">TEL</definiendum>
				<definiens id="0">a test set of 1,653 sentence pairs and a training set of 9,918</definiens>
			</definition>
</paper>

		<paper id="2017">
			<definition id="0">
				<sentence>The reboot causes the host to discover all the devices det subj det subj aux pre det obj mod à la Suite réinitialisation , l ' hôte repère tous les périphériques after to the reboot the host locate all the peripherals 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 11 Figure 1 : A cohesion constraint violation Given an English sentence E = e1e2 : : : el and a French sentence F = f1f2 : : : fm , an alignment is a set of links between the words in E and F. An alignment can be represented as a binary relation A in [ 1 ; l ] [ 1 ; m ] .</sentence>
				<definiendum id="0">alignment</definiendum>
				<definiens id="0">a set of links between the words in E and F. An alignment can be represented as a binary relation A in [ 1</definiens>
			</definition>
			<definition id="1">
				<sentence>Given a head node eh and its modifier em , a head-modifier overlap occurs when : spanH ( eh ; TE ; A ) \spanP ( em ; TE ; A ) 6= ; Given two nodes em1 and em2 which both modify the same head node , a modifier-modifier overlap occurs when : spanP ( em1 ; TE ; A ) \spanP ( em2 ; TE ; A ) 6= ; Following ( Fox , 2002 ) , we say an alignment is cohesive with respect to TE if it does not introduce any headmodifier or modifier-modifier overlaps .</sentence>
				<definiendum id="0">TE ; A ) \spanP</definiendum>
				<definiendum id="1">A ) \spanP</definiendum>
				<definiens id="0">a head-modifier overlap occurs when : spanH ( eh ;</definiens>
			</definition>
</paper>

		<paper id="2025">
			<definition id="0">
				<sentence>Five binary dependency relationships decoded by our parser are used for parsing-based NE rule learning : ( i ) a Has_Predicate ( b ) : from logical subject a to verb b ; ( ii ) a Object_Of ( b ) : from logical object a to verb b ; ( iii ) a Has_Amod ( b ) : from noun a to its adjective modifier b ; ( iv ) a Possess ( b ) : from the possessive noun-modifier a to head noun b ; ( v ) a IsA ( b ) : equivalence relation ( including appositions ) from one NP a to another NP b. The concept-based seeds used in the experiments are : ( i ) he , she , his , her , him , man , woman for PER ; ( ii ) city , province , town , village for LOC ; ( iii ) company , firm , organization , bank , airline , army , committee , government , school , university for ORG .</sentence>
				<definiendum id="0">Object_Of</definiendum>
				<definiendum id="1">Has_Amod</definiendum>
				<definiendum id="2">IsA</definiendum>
				<definiens id="0">province , town , village for LOC ; ( iii ) company , firm , organization , bank , airline , army , committee , government , school , university for ORG</definiens>
			</definition>
</paper>

		<paper id="1010">
			<definition id="0">
				<sentence>The total decoding complexity of the search algorithm is the number of search iterations ( I ) times the number of search steps per search iteration ( S ) times the evaluation cost per search step ( E ) : a23a2a24 a3 a31 a1 a10 a1 a9 a48 We now show that the original implementation of the algorithm has a complexity of ( practically ) a0a2a1a4a3a52a51 a7 for a23a2a24 decoding , and a0a2a1 a3 a7 a7 for a23a1a0 decoding , if swap operations are restricted .</sentence>
				<definiendum id="0">total decoding complexity</definiendum>
				<definiens id="0">the number of search iterations ( I ) times the number of search steps per search iteration ( S ) times the evaluation cost per search step ( E ) : a23a2a24 a3 a31 a1 a10 a1 a9 a48</definiens>
			</definition>
			<definition id="1">
				<sentence>distance ( MSD ) and the maximum swap segment size ( MSSS ) ranging from 0 to 10 and evaluated the translations with the BLEU7 metric ( Papineni et al. , 2002 ) .</sentence>
				<definiendum id="0">MSD</definiendum>
				<definiendum id="1">MSSS</definiendum>
			</definition>
</paper>

		<paper id="1019">
			<definition id="0">
				<sentence>The phrase alignment sequence a18 a11a7 specifies a reordering of phrases into target language phrase order ; the words within the phrases remain in the source language order .</sentence>
				<definiendum id="0">phrase alignment sequence a18 a11a7</definiendum>
				<definiens id="0">specifies a reordering of phrases into target language phrase order ; the words within the phrases remain in the source language order</definiens>
			</definition>
			<definition id="1">
				<sentence>The segmentation process decomposes the source sentence a26 a27a7 into a phrase sequence a110a21 a112a11a7 .</sentence>
				<definiendum id="0">segmentation process</definiendum>
				<definiens id="0">decomposes the source sentence a26 a27a7 into a phrase sequence a110a21 a112a11a7</definiens>
			</definition>
			<definition id="2">
				<sentence>A lattice of possible alignments between a3 a5a7 and a26 a27a7 is then obtained by the finite state composition a2 a30 a23a25a112 a132 a122 a24 a122 a0 a122 a2 a122a4a3 a49 ( 21 ) where a3 is an acceptor for the target sentence a3 a5a7 .</sentence>
				<definiendum id="0">a3</definiendum>
			</definition>
			<definition id="3">
				<sentence>Model Alignment Metrics ( % ) Precision Recall AER IBM-4 F 88.9 89.8 10.8 IBM-4 E 89.2 89.4 10.7 IBM-4 a2a4a3a6a5 84.3 93.8 12.3 ATTM-C 64.2 63.8 36.2 ATTM-A 94.5 55.8 27.3 Table 1 : Alignment Performance on the French-toEnglish Hansards Alignment Task .</sentence>
				<definiendum id="0">Precision Recall AER</definiendum>
			</definition>
</paper>

		<paper id="2010">
</paper>

		<paper id="3007">
			<definition id="0">
				<sentence>O‘Shaughnessy ( O’Shaughnessy , 1993 ) observed in the corpus of ATIS that when speaker stopped in the middle of a word and resumed speaking with no changed or inserted words ( i.e. a repetition ) , the pause lasted 100-400 ms in 85 % of the examples ( with most of the remaining examples having pause of about 1 second duration ) .</sentence>
				<definiendum id="0">O‘Shaughnessy</definiendum>
				<definiens id="0">the corpus of ATIS that when speaker stopped in the middle of a word and resumed speaking with no changed or inserted words ( i.e. a repetition ) , the pause lasted 100-400 ms in 85 % of the examples</definiens>
			</definition>
			<definition id="1">
				<sentence>The frequency of these pulses determines the fundamental frequency of the laryngeal source and contributes to the perceived pitch of the produced sound .</sentence>
				<definiendum id="0">frequency of these pulses</definiendum>
				<definiens id="0">determines the fundamental frequency of the laryngeal source and contributes to the perceived pitch of the produced sound</definiens>
			</definition>
			<definition id="2">
				<sentence>OQ is defined as the ratio of the time in which the vocal folds are open to the total length of the glottal cycle .</sentence>
				<definiendum id="0">OQ</definiendum>
				<definiens id="0">the ratio of the time in which the vocal folds are open to the total length of the glottal cycle</definiens>
			</definition>
			<definition id="3">
				<sentence>a23a24a25a25a26a27 a5 a28a29a30 a12 a31a32a14 a33 a20 a2 a34 a31 a13 a34 a31 a30 a12 a13 a34 a31a35a12 a33 a28a29a30 a12 a31a32a14 a34 a31 ( 2 ) where a34a31 is the a24th interval and N is the number of the intervals of the point process .</sentence>
				<definiendum id="0">a34a31</definiendum>
				<definiendum id="1">N</definiendum>
				<definiens id="0">the number of the intervals of the point process</definiens>
			</definition>
			<definition id="4">
				<sentence>Studies have shown that the difference between these two harmonics ( and thus the OQ ) is a reliable way to measure the relative breathiness or creakiness of phonation ( Blankenship , 1997 ) .</sentence>
				<definiendum id="0">OQ )</definiendum>
			</definition>
</paper>

		<paper id="1009">
			<definition id="0">
				<sentence>It is well known how to efficiently minimize a deterministic finite-state automaton ( DFA ) , in the sense of constructing another DFA that recognizes the same language as the original but with as few states as possible ( Aho et al. , 1974 ) .</sentence>
				<definiendum id="0">DFA</definiendum>
			</definition>
			<definition id="1">
				<sentence>Expectation semirings ( Eisner , 2002 ) are used to handle bookkeeping when training the parameters of a probabilistic transducer .</sentence>
				<definiendum id="0">Expectation semirings</definiendum>
				<definiens id="0">used to handle bookkeeping when training the parameters of a probabilistic transducer</definiens>
			</definition>
			<definition id="2">
				<sentence>ε denotes the empty string .</sentence>
				<definiendum id="0">ε</definiendum>
				<definiens id="0">the empty string</definiens>
			</definition>
			<definition id="3">
				<sentence>Formally we know that states 1 and 3 are equivalent because F1 = F3 , where Fq denotes the suffix function of state q—the function defined by the automaton if the start state is taken to be q rather than 0 .</sentence>
				<definiendum id="0">Fq</definiendum>
			</definition>
			<definition id="4">
				<sentence>are not on any accepting path ( defined as a path whose weight is non-0 because it has no missing arcs and its last state is final ) .</sentence>
				<definiendum id="0">accepting path</definiendum>
			</definition>
			<definition id="5">
				<sentence>If F is a function , α is a string , and k is a weight , we use some natural notation for functions related to F : k ⊗F : ( k ⊗F ) ( γ ) def= k ⊗ ( F ( γ ) ) k\F : a function ( if one exists ) with k ⊗ ( k\F ) = F α−1F : ( α−1F ) ( γ ) def= F ( αγ ) ( standard notation ) In effect , k\F and α−1F drop output and input prefixes .</sentence>
				<definiendum id="0">k</definiendum>
				<definiens id="0">a function</definiens>
			</definition>
			<definition id="6">
				<sentence>( S ⊆ V is a clique of the graph iff ij ∈ E for all pairs i , j ∈ S. ) Determining the minimum number of cliques is NP-complete and inapproximable : that is , unless P=NP , we can not even find it within a factor of 2 or 3 or any other constant factor in polynomial time.5 Given such a graph , we reduce the clique problem to our problem .</sentence>
				<definiendum id="0">S ⊆ V</definiendum>
				<definiens id="0">a clique of the graph iff ij ∈ E for all pairs i</definiens>
			</definition>
			<definition id="7">
				<sentence>Each weight k is a string of n bits , 4A further wrinkle lies in deciding what and how to push ; in general semirings , it can be necessary to shift weights forward as well as backward along paths .</sentence>
				<definiendum id="0">weight k</definiendum>
				<definiens id="0">a string of n bits , 4A further wrinkle lies in deciding what and how to push</definiens>
			</definition>
			<definition id="8">
				<sentence>essary condition ( greedy factorization ) , and we now give a useful sufficient condition .</sentence>
				<definiendum id="0">essary condition</definiendum>
				<definiens id="0">greedy factorization )</definiens>
			</definition>
			<definition id="9">
				<sentence>Now define 14Suppose X is any residue of Fq , i.e. , we can write Fq = x ⊗ X. Then we can rewrite the identity Fq = λ ( Fq ) ⊗ ( λ ( Fq ) \Fq ) , using the shifting property , as x ⊗ X = x ⊗ λ ( X ) ⊗ ( λ ( Fq ) \Fq ) .</sentence>
				<definiendum id="0">14Suppose X</definiendum>
			</definition>
			<definition id="10">
				<sentence>λ ( F ) def= braceleftbigg F ( minsupport ( F ) ) ∈ K if F negationslash= 0 0 if F = 0 where support ( F ) denotes the set of input strings to which F assigns a non-0 weight .</sentence>
				<definiendum id="0">λ ( F ) def= braceleftbigg F ( minsupport</definiendum>
				<definiens id="0">the set of input strings to which F assigns a non-0 weight</definiens>
			</definition>
			<definition id="11">
				<sentence>Otherwise , minsupport ( Fq ) is the input string on the shortest such path , breaking ties lexicographically.19 λ ( Fq ) is simply the weight of that shortest path .</sentence>
				<definiendum id="0">Fq</definiendum>
				<definiens id="0">the input string on the shortest such path , breaking ties lexicographically.19 λ ( Fq ) is simply the weight of that shortest path</definiens>
			</definition>
			<definition id="12">
				<sentence>To push , we must compute λ ( Fq ) for each state q. This is easy because λ ( Fq ) is the weight of a single , minimumlength and hence acyclic path from q. ( Previous methods combined the weights of all paths from q , even if infinitely many . )</sentence>
				<definiendum id="0">Fq )</definiendum>
				<definiens id="0">the weight of a single , minimumlength and hence acyclic path from q. ( Previous methods combined the weights of all paths from q</definiens>
			</definition>
			<definition id="13">
				<sentence>The total time to compute our λ ( Fq ) values is therefore O ( |states|+t·|arcs| ) , where t is the maximum length of any arc’s weight .</sentence>
				<definiendum id="0">t</definiendum>
				<definiens id="0">the maximum length of any arc’s weight</definiens>
			</definition>
</paper>

		<paper id="1014">
			<definition id="0">
				<sentence>The resulting statistical parser achieves performance ( 89.1 % F-measure ) on the Penn Treebank which is only 0.6 % below the best current parser for this task , despite using a smaller vocabulary size and less prior linguistic knowledge .</sentence>
				<definiendum id="0">Penn Treebank</definiendum>
				<definiens id="0">despite using a smaller vocabulary size and less prior linguistic knowledge</definiens>
			</definition>
			<definition id="1">
				<sentence>Each parser action changes the stack and makes an associated specification of a characteristic of the parse tree .</sentence>
				<definiendum id="0">parser action</definiendum>
				<definiens id="0">changes the stack and makes an associated specification of a characteristic of the parse tree</definiens>
			</definition>
			<definition id="2">
				<sentence>The possible parser actions are the following , where a43 is a tag-word pair , a44 a3a20a45 are nonterminal labels , and a46 is a stack of zero or more node labels .</sentence>
				<definiendum id="0">a43</definiendum>
				<definiendum id="1">a46</definiendum>
				<definiens id="0">a stack of zero or more node labels</definiens>
			</definition>
			<definition id="3">
				<sentence>The neural network estimates the parameters a17a19a18 a0a31a11a34a32a0 a1 a3a14a5a7a5a7a5a33a3a20a0a31a11a35a15 a1a36a21 in two stages , first computing a representation of the derivation history a48 a18 a0 a1 a3a6a5a7a5a7a5a7a3a20a0a31a11a16a15 a1a37a21 and then computing a probability distribution over the possible decisions given that history .</sentence>
				<definiendum id="0">neural network</definiendum>
				<definiens id="0">estimates the parameters a17a19a18 a0a31a11a34a32a0 a1 a3a14a5a7a5a7a5a33a3a20a0a31a11a35a15 a1a36a21 in two stages , first computing a representation of the derivation history a48 a18 a0 a1 a3a6a5a7a5a7a5a7a3a20a0a31a11a16a15 a1a37a21 and then computing a probability distribution over the possible decisions given that history</definiens>
			</definition>
			<definition id="4">
				<sentence>A log-linear model ( also known as a maximum entropy model , and as the normalized exponential output function ) is used to estimate the probability distribution over the four types of decisions , shifting , projecting , attaching , and modifying .</sentence>
				<definiendum id="0">log-linear model</definiendum>
				<definiens id="0">a maximum entropy model , and as the normalized exponential output function ) is used to estimate the probability distribution over</definiens>
			</definition>
			<definition id="5">
				<sentence>As a simple example , in figure 1 , the prediction of the left corner terminal of the VP node ( step 4 ) and the decision that the S node is the root of the whole sentence ( step 9 ) are both dependent on the fact that the node on the top of the stack in each case has the label S ( chosen in step 3 ) .</sentence>
				<definiendum id="0">VP node</definiendum>
				<definiendum id="1">node</definiendum>
			</definition>
			<definition id="6">
				<sentence>The simplest model ( “SSN-Tags” ) includes no words in the vocabulary , relying completely on the information provided by the part-of-speech tags of the words .</sentence>
				<definiendum id="0">“SSN-Tags” )</definiendum>
			</definition>
			<definition id="7">
				<sentence>The first model ( head identification ) includes a fifth type of parser action , head attach , which is used to identify the head child of each node in the tree .</sentence>
				<definiendum id="0">head identification )</definiendum>
				<definiens id="0">includes a fifth type of parser action , head attach</definiens>
			</definition>
</paper>

		<paper id="2002">
			<definition id="0">
				<sentence>GPB extends standard backoff to general conditional probability tables where variables might be heterogeneous types , where no obvious natural ( temporal ) backoff order exists , and where multiple dynamic backoff strategies are allowed .</sentence>
				<definiendum id="0">GPB</definiendum>
				<definiens id="0">extends standard backoff to general conditional probability tables where variables might be heterogeneous types , where no obvious natural ( temporal ) backoff order exists , and where multiple dynamic backoff strategies are allowed</definiens>
			</definition>
			<definition id="1">
				<sentence>An FLM considers a word as a bundle of features , and GPB is a technique that generalized backoff to arbitrary conditional probability tables .</sentence>
				<definiendum id="0">FLM</definiendum>
				<definiendum id="1">GPB</definiendum>
				<definiens id="0">considers a word as a bundle of features , and</definiens>
				<definiens id="1">a technique that generalized backoff to arbitrary conditional probability tables</definiens>
			</definition>
			<definition id="2">
				<sentence>An FLM is a model over factors , i.e. , p ( f1 : Kt |f1 : Kt−1 : t−n ) , that can be factored as a product of probabilities of the form p ( f|f1 , f2 , ... , fN ) .</sentence>
				<definiendum id="0">FLM</definiendum>
				<definiens id="0">a model over factors</definiens>
			</definition>
			<definition id="3">
				<sentence>An individual FLM probability model can be seen as a directed graphical model over a set of N + 1 random variables , with child variable F and N parent variables F1 through FN ( if factors are words , then F = Wt and Fi = Wt−i ) .</sentence>
				<definiendum id="0">FLM probability model</definiendum>
				<definiens id="0">a directed graphical model over a set of N + 1 random variables , with child variable F</definiens>
			</definition>
			<definition id="4">
				<sentence>In the two parents case , this becomes : pGBO ( f|f1 , f2 ) = braceleftbigg d N ( f , f1 , f2 ) pML ( f|f1 , f2 ) if N ( f , f1 , f2 ) &gt; τ α ( f1 , f2 ) g ( f , f1 , f2 ) otherwise where dN ( f , f1 , f2 ) is a standard discount ( determining the smoothing method ) , pML is the maximum likelihood distribution , α ( f1 , f2 ) are backoff weights , and g ( f , f1 , f2 ) is an arbitrary non-negative backoff function of its three factor arguments .</sentence>
				<definiendum id="0">dN</definiendum>
				<definiendum id="1">pML</definiendum>
				<definiens id="0">a standard discount ( determining the smoothing method ) ,</definiens>
			</definition>
			<definition id="5">
				<sentence>As long as g is non-negative , the backoff weights are defined as follows : α ( f1 , f2 ) = 1 −summationtextf : N ( f , f1 , f2 ) &gt; τ dN ( f , f1 , f2 ) pML ( f|f1 , f2 ) summationtext f : N ( f , f1 , f2 ) &lt; =τ g ( f , f1 , f2 ) This equation is non-standard only in the denominator , where one may no longer sum over the factors f only with counts greater than τ .</sentence>
				<definiendum id="0">backoff weights</definiendum>
				<definiens id="0">non-standard only in the denominator , where one may no longer sum over the factors f only with counts greater than τ</definiens>
			</definition>
			<definition id="6">
				<sentence>Two of the backoff functions are ( in the three parents case ) : g ( f , f1 , f2 , f3 ) = pGBO ( f|flscript1 , flscript2 ) where ( lscript1 , lscript2 ) = argmax ( m1 , m2 ) ∈ { ( 1,2 ) , ( 1,3 ) , ( 2,3 ) } pGBO ( f|fm1 , fm2 ) ( call this g1 ) or alternatively , where ( lscript1 , lscript2 ) = argmax ( m1 , m2 ) ∈ { ( 1,2 ) , ( 1,3 ) , ( 2,3 ) } N ( f , fm1 , fm2 ) | { f : N ( f , fm1 , fm2 ) &gt; 0 } | ( call this g2 ) where N ( ) is the count function .</sentence>
				<definiendum id="0">N ( )</definiendum>
			</definition>
</paper>

		<paper id="4003">
			<definition id="0">
				<sentence>Dialog facilitates the process of tailoring the interaction to the dynamically changing needs of the user .</sentence>
				<definiendum id="0">Dialog</definiendum>
				<definiens id="0">facilitates the process of tailoring the interaction to the dynamically changing needs of the user</definiens>
			</definition>
</paper>

		<paper id="1004">
			<definition id="0">
				<sentence>These distributions are modeled using a maximum entropy formulation ( Berger et al. , 1996 ) , using training data which consists of human judgments of question answer pairs .</sentence>
				<definiendum id="0">maximum entropy formulation</definiendum>
				<definiens id="0">consists of human judgments of question answer pairs</definiens>
			</definition>
			<definition id="1">
				<sentence>The passage retrieval component selects , from a large text corpus , a small number of short passages from which answers are identified .</sentence>
				<definiendum id="0">passage retrieval component selects</definiendum>
				<definiens id="0">a small number of short passages from which answers are identified</definiens>
			</definition>
			<definition id="2">
				<sentence>Third , passages from agent 2 may contain additional occurrences of the correct answer , which boosts the system’s confidence in the answer through the redundancy measure.2 Our passage-level combination algorithm adds to the passages extracted by the knowledge-based agent the topranked passages from the statistical agent that contain candidate answers of the right type .</sentence>
				<definiendum id="0">answer</definiendum>
				<definiens id="0">boosts the system’s confidence in the answer through the redundancy measure.2 Our passage-level combination algorithm adds to the passages extracted by the knowledge-based agent the topranked passages from the statistical agent that contain candidate answers of the right type</definiens>
			</definition>
			<definition id="3">
				<sentence>An answer-level combination algorithm takes the top answer ( s ) from the individual answering agents and determines the overall best answer ( s ) .</sentence>
				<definiendum id="0">answer-level combination algorithm</definiendum>
				<definiens id="0">takes the top answer ( s ) from the individual answering agents and determines the overall best answer ( s )</definiens>
			</definition>
			<definition id="4">
				<sentence>We thus configured a version of our knowledge-based agent to make use of three available text corpora,6 the AQUAINT corpus ( news articles from 1998-2000 ) , the TREC corpus ( news articles from 1988-1994 ) ,7 and a subset of the Encyclopedia Britannica .</sentence>
				<definiendum id="0">AQUAINT corpus</definiendum>
				<definiens id="0">( news articles from 1998-2000 ) , the TREC corpus ( news articles from 1988-1994 ) ,7 and a subset of the Encyclopedia Britannica</definiens>
			</definition>
</paper>

		<paper id="1008">
</paper>

		<paper id="2008">
			<definition id="0">
				<sentence>The FrameNet project seeks to annotate a large subset of the British National Corpus with semantic information .</sentence>
				<definiendum id="0">FrameNet project</definiendum>
				<definiens id="0">seeks to annotate a large subset of the British National Corpus with semantic information</definiens>
			</definition>
			<definition id="1">
				<sentence>We use the YASMET ME package ( Och , 2002 ) to train an approximation of the model below : P ( r| pt , voice , position , target , gf , h ) Here r indicates the element type , pt the phrase type , gf the grammatical function , h the head word , and target the target predicate .</sentence>
				<definiendum id="0">YASMET ME package</definiendum>
				<definiens id="0">an approximation of the model below : P ( r| pt , voice , position , target , gf , h</definiens>
			</definition>
</paper>

		<paper id="1020">
			<definition id="0">
				<sentence>7 DUC 2002 uses a length adjusted version of coverage metric C� , where C� = α*C + ( 1-α ) *B. B is the brevity and α is a parameter reflecting relative importance ( DUC 2002 ) .</sentence>
				<definiendum id="0">C�</definiendum>
			</definition>
			<definition id="1">
				<sentence>N-gram precision in BLEU is computed as follows : ∑∑ ∑ ∑ ∈∈− ∈∈− − − = } { } { ) ( ) ( CandidatesCCgramn CandidatesCCgramn clip n gramnCount gramnCount p ( 2 ) Where Count clip ( n-gram ) is the maximum number of ngrams co-occurring in a candidate translation and a reference translation , and Count ( n-gram ) is the number of n-grams in the candidate translation .</sentence>
				<definiendum id="0">Count clip</definiendum>
				<definiens id="0">the number of n-grams in the candidate translation</definiens>
			</definition>
			<definition id="2">
				<sentence>To prevent very short translations that try to maximize their precision scores , BLEU adds a brevity penalty , BP , to the formula : ) 3 ( 1 | ) |/||1 (       ≤ &gt; = − rcife rcif BP cr Where |c| is the length of the candidate translation and |r| is the length of the reference translation .</sentence>
				<definiendum id="0">BLEU</definiendum>
				<definiendum id="1">|c|</definiendum>
				<definiendum id="2">|r|</definiendum>
				<definiens id="0">translations that try to maximize their precision scores</definiens>
				<definiens id="1">adds a brevity penalty , BP , to the formula : ) 3 ( 1 | ) |/||1</definiens>
				<definiens id="2">the length of the candidate translation and</definiens>
				<definiens id="3">the length of the reference translation</definiens>
			</definition>
			<definition id="3">
				<sentence>For summaries by analogy , we can express equation ( 1 ) in terms of n-gram matches following equation ( 2 ) : ) 5 ( ) ( ) ( } { } { ∑∑ ∑ ∑ ∈∈− ∈∈− − − = UnitsModelCCgramn UnitsModelCCgramn match n gramnCount gramnCount C Where Count match ( n-gram ) is the maximum number of n-grams co-occurring in a peer summary and a model unit and Count ( n-gram ) is the number of n-grams in the model unit .</sentence>
				<definiendum id="0">Count match</definiendum>
				<definiendum id="1">n-gram )</definiendum>
				<definiens id="0">the number of n-grams in the model unit</definiens>
			</definition>
			<definition id="4">
				<sentence>The x-axis is the human ranking and the y-axis gives the corresponding Ngram ( 1,4 ) rankings for summaries of difference sizes .</sentence>
				<definiendum id="0">x-axis</definiendum>
				<definiens id="0">the human ranking and the y-axis gives the corresponding Ngram ( 1,4 ) rankings for summaries of difference sizes</definiens>
			</definition>
			<definition id="5">
				<sentence>The straight line ( AvgC ) is the human ranking and n marks summaries of different sizes .</sentence>
				<definiendum id="0">straight line</definiendum>
				<definiendum id="1">AvgC</definiendum>
				<definiens id="0">the human ranking and n marks summaries of different sizes</definiens>
			</definition>
			<definition id="6">
				<sentence>The Ngram ( 1,4 ) n score is a weighted average of variable length n-gram matches .</sentence>
				<definiendum id="0">Ngram ( 1,4 ) n score</definiendum>
			</definition>
			<definition id="7">
				<sentence>Various Ngram ( i , j ) rank/score correlations for 4 different statistics ( without stopwords ) : Spearman rank order coefficient correlation ( Spearman ρ ) , linear regression t-test ( LR t ) , Pearson product moment coefficient of correlation ( Pearson ρ ) , and coefficient of determination ( CD ) .</sentence>
				<definiendum id="0">Various Ngram</definiendum>
				<definiens id="0">correlations for 4 different statistics ( without stopwords ) : Spearman rank order coefficient correlation ( Spearman ρ ) , linear regression t-test ( LR t ) , Pearson product moment coefficient of correlation ( Pearson ρ ) , and coefficient of determination ( CD )</definiens>
			</definition>
			<definition id="8">
				<sentence>BLEU : a Method for Automatic Evaluation of Machine Translation .</sentence>
				<definiendum id="0">BLEU</definiendum>
			</definition>
</paper>

		<paper id="1015">
			<definition id="0">
				<sentence>1 Introduction Word Sense Disambiguation ( WSD ) is an important subtask that is necessary for accomplishing most natural language processing tasks including machine translation and information retrieval .</sentence>
				<definiendum id="0">Word Sense Disambiguation ( WSD )</definiendum>
				<definiens id="0">an important subtask that is necessary for accomplishing most natural language processing tasks including machine translation and information retrieval</definiens>
			</definition>
			<definition id="1">
				<sentence>Let X ( x ) be the set of clues for determining the sense of a first-language target word x. That is , X ( x ) = { x�| ( x , x� ) ∈R X } , where R X denotes the collection of pairs of related words extracted from a corpus of the first language .</sentence>
				<definiendum id="0">X ( x )</definiendum>
				<definiendum id="1">R X</definiendum>
				<definiens id="0">the set of clues for determining the sense of a first-language target word x. That is , X ( x ) = { x�| ( x</definiens>
				<definiens id="1">the collection of pairs of related words extracted from a corpus of the first language</definiens>
			</definition>
			<definition id="2">
				<sentence>That is , Y ( x , x� ( j ) ) = { ( y , y� ) | ( y , y� ) ∈R Y , ( x , y ) ∈D , ( x� ( j ) , y� ) ∈D } , where R Y denotes the collection of pairs of related words extracted from a corpus of the second language , and D denotes a bilingual dictionary , i.e. , a collection of pairs consisting of a first-language word and a second-language word that are translations of one another .</sentence>
				<definiendum id="0">R Y</definiendum>
				<definiendum id="1">D</definiendum>
				<definiens id="0">the collection of pairs of related words extracted from a corpus of the second language , and</definiens>
				<definiens id="1">a bilingual dictionary</definiens>
				<definiens id="2">a collection of pairs consisting of a first-language word and a second-language word that are translations of one another</definiens>
			</definition>
			<definition id="3">
				<sentence>, ( , , , ) ( , maxmax ) , ( , , , ) ( , max ) ( , ) ( ) , , ( ) , ( ) ) , ( , ( Y ) , ( ) , ( ) ) , ( , ( ) , (           ⋅= ∈ ∈ ∈ ∈ kxSy'yjx'xA ixSy'yjx'xA jx'xMIjx'ixSC kxSy jx'xy'yk ixSy jx'xYy'y This is where MI ( x , x� ( j ) ) is the mutual information of x and x� ( j ) , and A ( ( x , x� ( j ) ) , ( y , y� ) , S ( x , i ) ) , the plausibility of alignment of ( x , x� ( j ) ) with ( y , y� ) suggesting S ( x , i ) , is defined as the weighted sum of the correlations between the sense and the common related words , i.e. , ( ) ( ) . )</sentence>
				<definiendum id="0">x� ( j ) )</definiendum>
				<definiendum id="1">y� ) , S ( x , i ) )</definiendum>
				<definiendum id="2">y� ) suggesting S</definiendum>
				<definiendum id="3">i.e. , ( )</definiendum>
				<definiens id="0">, , ) ( , maxmax ) , ( , , , ) ( , max ) ( , ) ( ) , , ( ) , ( ) ) , ( , ( Y ) , ( ) , ( ) ) , ( , ( ) , (           ⋅= ∈ ∈ ∈ ∈ kxSy'yjx'xA ixSy'yjx'xA jx'xMIjx'ixSC kxSy jx'xy'yk ixSy jx'xYy'y This is where MI ( x ,</definiens>
				<definiens id="1">the mutual information of x and x� ( j ) , and A ( ( x , x� ( j ) ) , ( y ,</definiens>
				<definiens id="2">the plausibility of alignment of ( x , x� ( j ) ) with ( y ,</definiens>
				<definiens id="3">the weighted sum of the correlations between the sense and the common related words</definiens>
			</definition>
			<definition id="4">
				<sentence>The initial set of senses is given as Σ ( x ) = { { x , y 1 } , { x , y 2 } , � , { x , y N } } where x is a target word in the first language , and y 1 , y 2 , � , and y N are translation equivalents of x in the second-language .</sentence>
				<definiendum id="0">x</definiendum>
				<definiens id="0">a target word in the first language , and y 1 , y 2 , � , and y N are translation equivalents of x in the second-language</definiens>
			</definition>
			<definition id="5">
				<sentence>Thus Σ A ( x ) consists of senses of the target word x that are relevant to the corpus .</sentence>
				<definiendum id="0">( x )</definiendum>
				<definiens id="0">consists of senses of the target word x that are relevant to the corpus</definiens>
			</definition>
			<definition id="6">
				<sentence>The σ is a predetermined threshold for similarity , which is introduced to avoid noisy pairs of senses being merged .</sentence>
				<definiendum id="0">σ</definiendum>
			</definition>
			<definition id="7">
				<sentence>The dendrogram consists of translation equivalents that are included in active senses in the final cycle .</sentence>
				<definiendum id="0">dendrogram</definiendum>
				<definiens id="0">consists of translation equivalents that are included in active senses in the final cycle</definiens>
			</definition>
			<definition id="8">
				<sentence>The recall of senses is the proportion of senses with ratios not less than a threshold that are successfully extracted , and it varies with change of the threshold .</sentence>
				<definiendum id="0">recall of senses</definiendum>
				<definiens id="0">the proportion of senses with ratios not less than a threshold that are successfully extracted , and it varies with change of the threshold</definiens>
			</definition>
			<definition id="9">
				<sentence>The F-measure indicates how well the set of active senses coincides with the set of sense definitions in the standard senses inventory .</sentence>
				<definiendum id="0">F-measure</definiendum>
			</definition>
			<definition id="10">
				<sentence>[ Target word ] Resulting dendrogram ( English equivalent other than target word ) [ association ] ┌────関係 &lt; KANKEI &gt; ┌──┴────交際 &lt; KOUSAI &gt; ┤ ┌─提携 &lt; TEIKEI &gt; │┌────┴─関連 &lt; KANREN &gt; └┤┌─────共同 &lt; KYOUDOU &gt; └┤┌────連合 &lt; RENGOU &gt; └┤┌───組合 &lt; KUMIAI &gt; └┤┌──協会 &lt; KYOUKAI &gt; └┤┌──会 &lt; KAI &gt; └┴─団体 &lt; DANTAI &gt; ( relation ) ( friendship ) ( cooperation ) ( relation ) ( cooperation ) ( federation ) ( society ) ( society ) ( society ) ( organization ) [ bar ] ┌────売り場 &lt; URIBA &gt; ┌─┤┌─カウンター &lt; KAUNTAA &gt; │ └┴────バー &lt; BAA &gt; ┤ ┌────障害 &lt; SHOUHEKI &gt; │┌─┴────格子 &lt; KOUSHI &gt; └┤┌─────法曹 &lt; HOUSOU &gt; └┤┌───弁護士 &lt; BENGOSHI &gt; └┴────法廷 &lt; HOUTEI &gt; ( shop ) ( counter ) ( saloon ) ( obstacle ) ( lattice ) ( legal profession ) ( lawyer ) ( law court ) [ discipline ] ┌─訓練 &lt; KUNREN &gt; ┌─┴─学科 &lt; GAKKA &gt; ┌┤ ┌─学問 &lt; GAKUMON &gt; ┤└─┴─教科 &lt; KYOUKA &gt; │┌───秩序 &lt; CHITSUJO &gt; └┤ ┌─規制 &lt; KISEI &gt; │┌┴─懲罰 &lt; CHOUBATSU &gt; └┤┌─統制 &lt; TOUSEI &gt; └┴─規律 &lt; KIRITSU &gt; ( training ) ( subject of study ) ( learning ) ( subject of study ) ( order ) ( regulation ) ( punishment ) ( control ) ( order ) [ measure ] ┌──尺度 &lt; SHAKUDO &gt; ┌───┤┌──量 &lt; RYOU &gt; │ └┴─指数 &lt; SHISUU &gt; ┤ ┌────手段 &lt; SHUDAN &gt; │┌┴────対策 &lt; TAISAKU &gt; └┤ ┌───基準 &lt; KIJUN &gt; └─┤┌──法令 &lt; HOUREI &gt; └┤┌─議案 &lt; GIAN &gt; └┴─法案 &lt; HOUAN &gt; ( gauge ) ( quantity ) ( index ) ( means ) ( counter plan ) ( standard ) ( law ) ( bill ) ( bill ) [ promotion ] ┌─────登用 &lt; TOUYOU &gt; ┌─┴─────昇進 &lt; SHOUSHIN &gt; ┤┌────売り込み &lt; URIKOMI &gt; └┤┌─プロモーション ││ &lt; PUROMOUSHON &gt; └┴─────宣伝 &lt; SENDEN &gt; ( elevation ) ( advancement ) ( sale ) ( advertising campaign ) ( advertisement ) [ traffic ] ┌──商業 &lt; SHOUGYOU &gt; ┌┤┌─取引 &lt; TORIHIKI &gt; ┤└┴─売買 &lt; BAIBAI &gt; │┌──通 &lt; TSUUKOU &gt; └┤┌─交通 &lt; KOUTSUU &gt; └┴─ &lt; UNYU &gt; ( commerce ) ( trade ) ( bargain ) ( passage ) ( transport ) ( transport ) Figure 4 .</sentence>
				<definiendum id="0">Resulting dendrogram</definiendum>
				<definiens id="0">target word ) [ association ] ┌────関係 &lt; KANKEI &gt; ┌──┴────交際 &lt; KOUSAI &gt; ┤ ┌─提携 &lt; TEIKEI &gt; │┌────┴─関連 &lt; KANREN &gt; └┤┌─────共同 &lt; KYOUDOU &gt; └┤┌────連合 &lt; RENGOU &gt; └┤┌───組合 &lt; KUMIAI &gt; └┤┌──協会 &lt; KYOUKAI &gt; └┤┌──会 &lt; KAI &gt; └┴─団体</definiens>
				<definiens id="1">] ┌────売り場 &lt; URIBA &gt; ┌─┤┌─カウンター &lt; KAUNTAA &gt; │ └┴────バー &lt; BAA &gt; ┤ ┌────障害 &lt; SHOUHEKI &gt; │┌─┴────格子 &lt; KOUSHI &gt; └┤┌─────法曹 &lt; HOUSOU &gt; └┤┌───弁護士 &lt; BENGOSHI &gt; └┴────法廷 &lt; HOUTEI &gt; ( shop ) ( counter ) ( saloon ) ( obstacle ) ( lattice ) ( legal profession ) ( lawyer ) ( law court ) [ discipline ] ┌─訓練 &lt; KUNREN &gt; ┌─┴─学科 &lt; GAKKA &gt; ┌┤ ┌─学問 &lt; GAKUMON &gt; ┤└─┴─教科 &lt; KYOUKA &gt; │┌───秩序 &lt; CHITSUJO &gt; └┤ ┌─規制 &lt; KISEI &gt; │┌┴─懲罰 &lt; CHOUBATSU &gt; └┤┌─統制 &lt; TOUSEI &gt; └┴─規律 &lt; KIRITSU &gt; ( training ) ( subject of study ) ( learning ) ( subject of study ) ( order ) ( regulation ) ( punishment ) ( control ) ( order ) [ measure ] ┌──尺度 &lt; SHAKUDO &gt; ┌───┤┌──量 &lt; RYOU &gt; │ └┴─指数 &lt; SHISUU &gt; ┤ ┌────手段 &lt; SHUDAN &gt; │┌┴────対策 &lt; TAISAKU &gt; └┤ ┌───基準 &lt; KIJUN &gt; └─┤┌──法令 &lt; HOUREI &gt; └┤┌─議案 &lt; GIAN &gt; └┴─法案 &lt; HOUAN &gt; ( gauge ) ( quantity ) ( index ) ( means ) ( counter plan ) ( standard ) ( law ) ( bill ) ( bill ) [ promotion ] ┌─────登用 &lt; TOUYOU &gt; ┌─┴─────昇進 &lt; SHOUSHIN &gt; ┤┌────売り込み &lt; URIKOMI &gt; └┤┌─プロモーション ││ &lt; PUROMOUSHON &gt; └┴─────宣伝 &lt; SENDEN &gt; ( elevation ) ( advancement ) ( sale ) ( advertising campaign ) ( advertisement ) [ traffic ] ┌──商業 &lt; SHOUGYOU &gt; ┌┤┌─取引 &lt; TORIHIKI &gt; ┤└┴─売買 &lt; BAIBAI &gt; │┌──通 &lt; TSUUKOU &gt; └┤┌─交通 &lt; KOUTSUU &gt; └┴─ &lt; UNYU &gt;</definiens>
			</definition>
</paper>

		<paper id="4004">
			<definition id="0">
				<sentence>Sean Colbath , Francis Kubala BBN Technologies , 10 Moulton Street , Cambridge , MA 02138 scolbath @ bbn.com , fkubala @ bbn.com The TAP-XL Automated Analyst’s Assistant is an application designed to help an Englishspeaking analyst write a topical report , culling information from a large inflow of multilingual , multimedia data .</sentence>
				<definiendum id="0">TAP-XL Automated Analyst’s Assistant</definiendum>
			</definition>
			<definition id="1">
				<sentence>The analytical portion of TAP-XL is a distributed , component-based system .</sentence>
				<definiendum id="0">TAP-XL</definiendum>
			</definition>
			<definition id="2">
				<sentence>The TAP Connector uses industry-standard web protocols to communicate between a requester and a provider , allowing distributed computation across the Internet with unpredictable data flows and latencies .</sentence>
				<definiendum id="0">TAP Connector</definiendum>
				<definiens id="0">uses industry-standard web protocols to communicate between a requester</definiens>
			</definition>
</paper>

		<paper id="2014">
</paper>

		<paper id="1026">
			<definition id="0">
				<sentence>Rules used in the sentence condensation transfer system include the optional deletion of all intersective adjuncts ( e.g. , He slept in the bed .</sentence>
				<definiendum id="0">Rules</definiendum>
				<definiens id="0">used in the sentence condensation transfer system include the optional deletion of all intersective adjuncts ( e.g. , He slept in the bed</definiens>
			</definition>
			<definition id="1">
				<sentence>The data for estimation consists of pairs of original sentences y and goldstandard summarized f-structures s which were manually selected from the transfer output for each sentence .</sentence>
				<definiendum id="0">The data for estimation</definiendum>
				<definiens id="0">consists of pairs of original sentences y and goldstandard summarized f-structures s which were manually selected from the transfer output for each sentence</definiens>
			</definition>
			<definition id="2">
				<sentence>These rules delete the adjunct of the first conjunct ( for testing ) , the adjunct of the second conjunct ( by the end of the year ) , the rest of the second conjunct ( Leary hopes to set requirements for a full system ) , and the conjunction itself ( and ) .</sentence>
				<definiendum id="0">Leary</definiendum>
				<definiens id="0">hopes to set requirements for a full system</definiens>
			</definition>
			<definition id="3">
				<sentence>The standard metrics of precision , recall , and F-score from statistical parsing can be used as evaluation metrics for measuring matching quality : Precision measures the number of matching structural items in the parses of the system output and the gold standard , out of all structural items in the system output’s parse ; recall measures the number of matches , out of all items in the gold standard’s parse .</sentence>
				<definiendum id="0">Precision</definiendum>
				<definiendum id="1">recall</definiendum>
				<definiens id="0">measures the number of matching structural items in the parses of the system output and the gold standard</definiens>
			</definition>
			<definition id="4">
				<sentence>2 corresponds to 23 dependency relations , the first 14 of which are shared with the reduced f-structure chosen by the stochastic disambiguation system : tense ( be:0 , pres ) , mood ( be:0 , indicative ) , subj ( be:0 , prototype:2 ) , xcomp ( be:0 , ready:1 ) , stmt_type ( be:0 , declarative ) , vtype ( be:0 , copular ) , subj ( ready:1 , prototype:2 ) , adegree ( ready:1 , positive ) , atype ( ready:1 , predicative ) , det ( prototype:2 , a:7 ) , num ( prototype:2 , sg ) , pers ( prototype:2 , 3 ) , det_form ( a:7 , a ) , det_type ( a:7 , indef ) , adjunct ( be:0 , for:12 ) , obj ( for:12 , test:14 ) , adv_type ( for:12 , vpadv ) , psem ( for:12 , unspecified ) , ptype ( for:12 , semantic ) , num ( test:14 , sg ) , pers ( test:14 , 3 ) , pform ( test:14 , for ) , vtype ( test:14 , main ) .</sentence>
				<definiendum id="0">obj</definiendum>
				<definiens id="0">shared with the reduced f-structure chosen by the stochastic disambiguation system : tense ( be:0 , pres ) , mood ( be:0 , indicative )</definiens>
			</definition>
			<definition id="5">
				<sentence>Testset II consists of another randomly extracted 32 sentence pairs from the same domain , prepared in the same way .</sentence>
				<definiendum id="0">Testset II</definiendum>
				<definiens id="0">consists of another randomly extracted 32 sentence pairs from the same domain , prepared in the same way</definiens>
			</definition>
</paper>

		<paper id="1021">
</paper>

		<paper id="5001">
</paper>

		<paper id="1016">
			<definition id="0">
				<sentence>The core loop involves removing an edge from the agenda and combining that edge with edges already in the chart to create new edges .</sentence>
				<definiendum id="0">core loop</definiendum>
				<definiens id="0">involves removing an edge from the agenda and combining that edge with edges already in the chart to create new edges</definiens>
			</definition>
			<definition id="1">
				<sentence>In practice , of course , precomputing TRUE would not be feasible.3 3Note that our ideal estimate is not P ( e|s ) like the ideal FOM , rather it is P ( Tg , e ) /P ( Te ) ( where Tg , e is a best parse of the goal g among those which contain e , and Te is a best parse of e over the yield of e ) .</sentence>
				<definiendum id="0">Tg , e</definiendum>
				<definiendum id="1">Te</definiendum>
				<definiens id="0">a best parse of the goal g among those which contain e , and</definiens>
				<definiens id="1">a best parse of e over the yield of e )</definiens>
			</definition>
			<definition id="2">
				<sentence>S1XLR includes both the left and right tags , but merges the number of words to the left and right.4 As the summaries become richer , the estimates become sharper .</sentence>
				<definiendum id="0">S1XLR</definiendum>
				<definiens id="0">includes both the left and right tags , but merges the number of words to the left and right.4 As the summaries become richer , the estimates become sharper</definiens>
			</definition>
			<definition id="3">
				<sentence>On the other extreme , a constant projection gives NULL ( if any rewrite has probability 1 ) .</sentence>
				<definiendum id="0">NULL (</definiendum>
				<definiens id="0">if any rewrite has probability 1 )</definiens>
			</definition>
			<definition id="4">
				<sentence>O-TRIE is a deterministic right-branching trie encoding ( Leermakers , 1992 ) with weights pushed left ( Mohri , 1997 ) .</sentence>
				<definiendum id="0">O-TRIE</definiendum>
			</definition>
			<definition id="5">
				<sentence>I-tries are as in Charniak et al. ( 1998 ) , where NP→ DT JJ NN becomes NP → XDT JJ NN and XDT JJ → DT JJ , and correspond to dropping the portion of an Earley dotted rule after the dot.7 O-tries , as in Leermakers ( 1992 ) , turn NP→ DT JJ NN into NP → XNP→ · NN NN and XNP→ · NN → DT JJ , and correspond to 6We chose the data set used by Charniak and coauthors , so as to facilitate comparison with previous work .</sentence>
				<definiendum id="0">I-tries</definiendum>
				<definiendum id="1">O-tries</definiendum>
				<definiens id="0">NP→ DT JJ NN becomes NP → XDT JJ NN and XDT JJ → DT JJ , and correspond to dropping the portion of an Earley dotted rule after the dot.7</definiens>
				<definiens id="1">correspond to 6We chose the data set used by Charniak and coauthors</definiens>
			</definition>
</paper>

		<paper id="1034">
			<definition id="0">
				<sentence>TREC is a workshop series designed to encourage research on text retrieval for realistic applications by providing large test collections , uniform scoring procedures , and a forum for organizations interested in comparing results .</sentence>
				<definiendum id="0">TREC</definiendum>
				<definiens id="0">a workshop series designed to encourage research on text retrieval for realistic applications by providing large test collections , uniform scoring procedures</definiens>
			</definition>
			<definition id="1">
				<sentence>Human assessors read each string and decided whether the string actually did contain an answer to the question .</sentence>
				<definiendum id="0">Human assessors</definiendum>
				<definiens id="0">read each string and decided whether the string actually did contain an answer to the question</definiens>
			</definition>
			<definition id="2">
				<sentence>Known as Big Muddy , the Mississip Mississippi is the longest river in the US the Mississippi is the longest river in the US , the Mississippi is the longest river ( Mississippi ) has brought the Mississippi to its lowest ipes .</sentence>
				<definiendum id="0">Mississip Mississippi</definiendum>
				<definiendum id="1">Mississippi</definiendum>
				<definiens id="0">the longest river in the US , the</definiens>
			</definition>
			<definition id="3">
				<sentence>In Life on the Mississippi , Mark Twain wrote t Southeast ; Mississippi ; Mark Twain ; officials began Known ; Mississippi ; US , ; Minnesota ; Gulf Mexico Mud Island , ; Mississippi ; '' The ; -history , ; Memphis Figure 1 : Correct text snippets for What river in the US is known as the Big Muddy ?</sentence>
				<definiendum id="0">Mississippi ;</definiendum>
				<definiens id="0">the Mississippi , Mark Twain wrote t Southeast ; Mississippi ; Mark Twain ; officials began Known ; Mississippi ; US , ; Minnesota ; Gulf Mexico Mud Island , ;</definiens>
			</definition>
			<definition id="4">
				<sentence>Precision of recognizing no answer is the ratio of the number of times NIL was returned and correct to the number of times it was returned ; recall is the ratio of the number of times NIL was returned and correct to the number of times it was correct ( 46 ) .</sentence>
				<definiendum id="0">recall</definiendum>
				<definiens id="0">the ratio of the number of times NIL was returned and correct to the number of times it was returned</definiens>
				<definiens id="1">the ratio of the number of times NIL was returned and correct to the number of times it was correct ( 46 )</definiens>
			</definition>
</paper>

		<paper id="4017">
</paper>

		<paper id="1028">
			<definition id="0">
				<sentence>The paradigmatic shallowparsing problem is NP chunking , which nds the nonrecursive cores of noun phrases called base NPs .</sentence>
				<definiendum id="0">NP chunking</definiendum>
				<definiens id="0">nds the nonrecursive cores of noun phrases called base NPs</definiens>
			</definition>
			<definition id="1">
				<sentence>The approximated diagonal term Hf for feature f has the form Hf = Ef ( Y ; xk ) 2 X i 0 @ X y ; y0 Mi [ y ; y0 ] Z ( x ) f ( Y ; xk ) 1 A 2 If this approximation is semide nite , which is trivial to check , its inverse is an excellent preconditioner for early iterations of CG training .</sentence>
				<definiendum id="0">semide nite</definiendum>
			</definition>
			<definition id="2">
				<sentence>Limited-memory BFGS ( L-BFGS ) is a second-order method that estimates the curvature numerically from previous gradients and updates , avoiding the need for an exact Hessian inverse computation .</sentence>
				<definiendum id="0">Limited-memory BFGS ( L-BFGS )</definiendum>
				<definiens id="0">a second-order method that estimates the curvature numerically from previous gradients and updates , avoiding the need for an exact Hessian inverse computation</definiens>
			</definition>
			<definition id="3">
				<sentence>More precisely , for each training instance the method computes a weight update t+1 = t + F ( yk ; xk ) F ( ^yk ; xk ) ( 3 ) in which ^yk is the Viterbi path ^yk = arg max y t F ( y ; xk ) Like the familiar perceptron algorithm , this algorithm repeatedly sweeps over the training instances , updating the weight vector as it considers each instance .</sentence>
				<definiendum id="0">vector</definiendum>
				<definiens id="0">in which ^yk is the Viterbi path ^yk = arg max y t F ( y ; xk ) Like the familiar perceptron algorithm , this algorithm repeatedly sweeps over the training instances , updating the weight</definiens>
			</definition>
			<definition id="4">
				<sentence>We use the following factored representation for features f ( yi 1 ; yi ; x ; i ) = p ( x ; i ) q ( yi 1 ; yi ) ( 4 ) where p ( x ; i ) is a predicate on the input sequence x and current position i and q ( yi 1 ; yi ) is a predicate on pairs of labels .</sentence>
				<definiendum id="0">p ( x ; i )</definiendum>
				<definiendum id="1">yi )</definiendum>
				<definiens id="0">a predicate on pairs of labels</definiens>
			</definition>
			<definition id="5">
				<sentence>The null hypothesis is that the disagreements ( correct vs. incorrect ) are due to chance .</sentence>
				<definiendum id="0">null hypothesis</definiendum>
				<definiens id="0">the disagreements ( correct vs. incorrect ) are due to chance</definiens>
			</definition>
</paper>

		<paper id="1030">
			<definition id="0">
				<sentence>A discourse structure is a tree whose leaves correspond to elementary discourse units ( edu ) s , and whose internal nodes correspond to contiguous text spans ( called discourse spans ) .</sentence>
				<definiendum id="0">discourse structure</definiendum>
			</definition>
			<definition id="1">
				<sentence>Therefore , our Training section consists of a set of 5809 triples of the form a36 a2a33a37a38a2a4a3a22a5a8a7a10a9a6a11a12a7a14a13a14a11a12a15a39a16a20a18a20a18a6a21a35a2a20a24a29a37a40a25a26a13a14a2a27a11a29a28a20a30a34a16a32a2a27a18a4a15a39a16a20a18a20a18a6a21a35a2a20a24a40a41 which are used to train the parameters of the statistical models .</sentence>
				<definiendum id="0">Training section</definiendum>
				<definiens id="0">consists of a set of 5809 triples of the form a36 a2a33a37a38a2a4a3a22a5a8a7a10a9a6a11a12a7a14a13a14a11a12a15a39a16a20a18a20a18a6a21a35a2a20a24a29a37a40a25a26a13a14a2a27a11a29a28a20a30a34a16a32a2a27a18a4a15a39a16a20a18a20a18a6a21a35a2a20a24a40a41 which are used to train the parameters of the statistical models</definiens>
			</definition>
			<definition id="2">
				<sentence>Our Test section consists of a set of 946 triples of a similar form , which are used to evaluate the performance of our discourse parser .</sentence>
				<definiendum id="0">Test section</definiendum>
			</definition>
			<definition id="3">
				<sentence>Discourse segmentation is the process in which a given text is broken into non-overlapping segments called elementary discourse units ( edus ) .</sentence>
				<definiendum id="0">Discourse segmentation</definiendum>
				<definiens id="0">the process in which a given text is broken into non-overlapping segments called elementary discourse units ( edus )</definiens>
			</definition>
			<definition id="4">
				<sentence>Our statistical approach to sentence segmentation uses two components : a statistical model which assigns a probability to the insertion of a discourse boundary after each word in a sentence , and a segmenter , which uses the probabilities computed by the model for inserting discourse boundaries .</sentence>
				<definiendum id="0">segmenter</definiendum>
				<definiens id="0">assigns a probability to the insertion of a discourse boundary after each word in a sentence</definiens>
			</definition>
			<definition id="5">
				<sentence>The rst component is the parsing model , which assigns a probability to every potential candidate parse tree .</sentence>
				<definiendum id="0">rst component</definiendum>
				<definiens id="0">assigns a probability to every potential candidate parse tree</definiens>
			</definition>
			<definition id="6">
				<sentence>A tuple is of the form a129a70a130a13a38a37a40a123a131a37a119a132a32a133 , and denotes a discourse relation a129 that holds between the discourse span that contains edus a13 through a123 , and the discourse span that contains edus a123a135a134a58a66 througha132 .</sentence>
				<definiendum id="0">tuple</definiendum>
				<definiens id="0">the form a129a70a130a13a38a37a40a123a131a37a119a132a32a133 , and denotes a discourse relation a129 that holds between the discourse span that contains edus a13 through a123 , and the discourse span that contains edus a123a135a134a58a66 througha132</definiens>
			</definition>
			<definition id="7">
				<sentence>The rst baseline ( a174a170a66a4a112a170a147 ) uses punctuation to determine when to insert a boundary ; because commas are often used to indicate breaks inside long sentences , a174a113a66a27a112a170a147 inserts discourse boundaries after each comma .</sentence>
				<definiendum id="0">rst baseline</definiendum>
				<definiens id="0">uses punctuation to determine when to insert a boundary ; because commas are often used to indicate breaks inside long sentences , a174a113a66a27a112a170a147 inserts discourse boundaries after each comma</definiens>
			</definition>
</paper>

		<paper id="2032">
			<definition id="0">
				<sentence>LSA learns from cooccurrence of words in collections of texts .</sentence>
				<definiendum id="0">LSA</definiendum>
				<definiens id="0">learns from cooccurrence of words in collections of texts</definiens>
			</definition>
			<definition id="1">
				<sentence>LSA is based on Single Value Decomposition ( SVD ) , a mathematical technique that causes the semantic space to be arranged so as to reflect the major associative patterns in the data , and ignores the smaller , less important influences .</sentence>
				<definiendum id="0">LSA</definiendum>
				<definiens id="0">a mathematical technique that causes the semantic space to be arranged so as to reflect the major associative patterns in the data , and ignores the smaller , less important influences</definiens>
			</definition>
			<definition id="2">
				<sentence>DIAG is a corpus of computer mediated tutoring dialogues between a tutor and a student who is diagnosing a fault in a mechanical system with the DIAG tutoring system ( Towne , 1997 ) .</sentence>
				<definiendum id="0">DIAG</definiendum>
			</definition>
			<definition id="3">
				<sentence>The Spanish CallHome annotation augments a basic tag such as statement along several dimensions , such as whether the statement describes a psychological state of the speaker .</sentence>
				<definiendum id="0">Spanish CallHome annotation</definiendum>
				<definiens id="0">augments a basic tag such as statement along several dimensions</definiens>
			</definition>
			<definition id="4">
				<sentence>CallHome37 maintains some subcategorizations , e.g. whether a question is yes/no or rhetorical .</sentence>
				<definiendum id="0">CallHome37</definiendum>
				<definiens id="0">maintains some subcategorizations</definiens>
			</definition>
</paper>

		<paper id="4009">
			<definition id="0">
				<sentence>WordFreak is a natural language annotation tool that has been designed to be easy to extend to new domains and tasks .</sentence>
				<definiendum id="0">WordFreak</definiendum>
				<definiens id="0">a natural language annotation tool that has been designed to be easy to extend to new domains and tasks</definiens>
			</definition>
			<definition id="1">
				<sentence>These include sentence detectors , POS taggers , parsers , and coreference revolvers .</sentence>
				<definiendum id="0">POS</definiendum>
				<definiens id="0">taggers , parsers , and coreference revolvers</definiens>
			</definition>
			<definition id="2">
				<sentence>The confidence measure can be used for active learning or just to assist in the correction of the automatic annotator .</sentence>
				<definiendum id="0">confidence measure</definiendum>
				<definiens id="0">active learning or just to assist in the correction of the automatic annotator</definiens>
			</definition>
</paper>

		<paper id="2027">
			<definition id="0">
				<sentence>A Dynamic Bayesian network ( DBN ) is a Bayesian network unwrapped in time , such that it can represent dependencies between variables at adjacent positions ( see figure ) .</sentence>
				<definiendum id="0">Dynamic Bayesian network</definiendum>
				<definiendum id="1">DBN</definiendum>
				<definiens id="0">a Bayesian network unwrapped in time</definiens>
			</definition>
</paper>

		<paper id="3009">
			<definition id="0">
				<sentence>Text segmentation can be defined as the automatic identification of boundaries between distinct textual units ( segments ) in a textual document .</sentence>
				<definiendum id="0">Text segmentation</definiendum>
				<definiens id="0">the automatic identification of boundaries between distinct textual units ( segments ) in a textual document</definiens>
			</definition>
			<definition id="1">
				<sentence>Most approaches to story segmentation use either Information Extraction techniques ( cue phrase extraction ) , techniques based on lexical cohesion analysis or a combination of both ( Reynar 1998 ; Beeferman et al. 1999 ) .</sentence>
				<definiendum id="0">Information Extraction</definiendum>
			</definition>
			<definition id="2">
				<sentence>Lexical cohesion is one element of a broader linguistic device called cohesion which is describe as the textual quality responsible for making the elements of a text appear unified or connected .</sentence>
				<definiendum id="0">Lexical cohesion</definiendum>
				<definiens id="0">one element of a broader linguistic device called cohesion which is describe as the textual quality responsible for making the elements of a text appear unified or connected</definiens>
			</definition>
			<definition id="3">
				<sentence>Lexical chains are defined as groups of semantically related words that represent the lexical cohesive structure of a text e.g. { flower , petal , rose , garden , tree } .</sentence>
				<definiendum id="0">Lexical chains</definiendum>
				<definiens id="0">groups of semantically related words that represent the lexical cohesive structure of a text e.g. { flower , petal , rose , garden , tree }</definiens>
			</definition>
			<definition id="4">
				<sentence>This idea is based on a simple heuristic proposed by Justeson and Katz ( Justeson , Katz 1995 ) , which involves scanning part-of-speech tagged texts for patterns of adjacent tags that commonly match proper noun phrases like ‘White House aid’ , ‘PLO leader Yasir Arafat’ , and WordNet noun phrases like ‘red wine’ or ‘act of god’ .</sentence>
				<definiendum id="0">WordNet noun phrases</definiendum>
				<definiens id="0">involves scanning part-of-speech tagged texts for patterns of adjacent tags that commonly match proper noun phrases</definiens>
			</definition>
			<definition id="5">
				<sentence>Our boundary detection algorithm is a variation on one devised by Okumara and Honda ( Okumara , Honda 1994 ) and is based on the following observation : ‘Since lexical chain spans ( i.e. start and end points ) represent semantically related units in a text , a high concentration of chain begin and end points between two adjacent textual units is a good indication of a boundary point between two distinct news stories’ We define boundary strength w ( n , n+1 ) between each pair of adjacent textual unit in our test set , as the sum of the number of lexical chains whose span ends at paragraph n and the number of chains that begin their span at paragraph n+1 .</sentence>
				<definiendum id="0">boundary detection algorithm</definiendum>
				<definiens id="0">a good indication of a boundary point between two distinct news stories’ We define boundary strength w ( n , n+1</definiens>
				<definiens id="1">the sum of the number of lexical chains whose span ends at paragraph n and the number of chains that begin</definiens>
			</definition>
			<definition id="6">
				<sentence>The simplest measure of lexical density , as defined by Halliday ( 1995 ) , is the ‘the number of lexical items ( content words ) as a portion of the number of running words ( grammatical words ) ’ .</sentence>
				<definiendum id="0">simplest measure of lexical density</definiendum>
				<definiendum id="1">Halliday ( 1995</definiendum>
				<definiens id="0">the ‘the number of lexical items ( content words ) as a portion of the number of running words ( grammatical words ) ’</definiens>
			</definition>
</paper>

		<paper id="1005">
			<definition id="0">
				<sentence>a56 is the total number of layers in the parse tree .</sentence>
				<definiendum id="0">a56</definiendum>
				<definiens id="0">the total number of layers in the parse tree</definiens>
			</definition>
			<definition id="1">
				<sentence>The FST compactly represents sound-to-letter mappings , with weights on the arcs encoding mapping probabilities along with subword structure .</sentence>
				<definiendum id="0">FST compactly</definiendum>
				<definiens id="0">represents sound-to-letter mappings , with weights on the arcs encoding mapping probabilities along with subword structure</definiens>
			</definition>
			<definition id="2">
				<sentence>Generally , a0 is represented by a cascade of FST compositions : a0 a43 a36a2a1a4a3a5a1a4a6a7a1a9a8 ( 1 ) where a36 contains diphone label mappings , a3 applies phonological rules , a6 maps the lexicon to phonemic pronunciations , and a8 is the language model .</sentence>
				<definiendum id="0">a8</definiendum>
				<definiens id="0">represented by a cascade of FST compositions : a0 a43 a36a2a1a4a3a5a1a4a6a7a1a9a8 ( 1 ) where a36 contains diphone label mappings , a3 applies phonological rules , a6 maps the lexicon to phonemic pronunciations , and</definiens>
				<definiens id="1">the language model</definiens>
			</definition>
			<definition id="3">
				<sentence>This first stage outputs a lattice in the form of an FST , which contains , at the output labels , an unknown word label for the spoken name part of the utterance and letter hypotheses which are useful for the later stages .</sentence>
				<definiendum id="0">FST</definiendum>
				<definiens id="0">contains , at the output labels , an unknown word label for the spoken name part of the utterance and letter hypotheses which are useful for the later stages</definiens>
			</definition>
			<definition id="4">
				<sentence>a11 preserves the acoustic and language model scores of the first stage .</sentence>
				<definiendum id="0">a11</definiendum>
			</definition>
			<definition id="5">
				<sentence>The resultant FST ( a10 a16 ) is a pruned lattice that embeds all the necessary language information to generate letter hypotheses from phonetic sequences .</sentence>
				<definiendum id="0">FST</definiendum>
				<definiens id="0">a pruned lattice that embeds all the necessary language information to generate letter hypotheses from phonetic sequences</definiens>
			</definition>
			<definition id="6">
				<sentence>a10 a25 a43a27a3a5a1a4a6 a30 a1a4a11 ( 5 ) Waveform `` knupp K N U P P '' Sound-to-Letter FST ( F ) Intermediate Stage : Language Model &amp; ANGIE FST Compositions ANGIE Column Bigram FST ( A ) Subword Trigram Language Model ( T ) Sound-Letter FST Creation Letters Only FST Creation FST Concatenation Sound-to-Letter Recognizer Unknown Word &amp; Letter Recognizer Hypotheses `` knupp K N U P P '' FST ( F2 ) FST ( F1 ) FST ( I ) FST ( I ) Letter FST ( I ) &lt; unk &gt; k n p pm e b &lt; unk &gt; Acoustic Measurements Acoustic Models Figure 2 : A schematic illustrating the multi-stage speak and spell recognition procedure .</sentence>
				<definiendum id="0">Letter FST</definiendum>
				<definiens id="0">F ) Intermediate Stage : Language Model &amp; ANGIE FST Compositions ANGIE Column Bigram FST ( A ) Subword Trigram Language Model ( T ) Sound-Letter FST Creation Letters Only FST Creation FST Concatenation Sound-to-Letter Recognizer Unknown Word &amp; Letter Recognizer Hypotheses</definiens>
				<definiens id="1">A schematic illustrating the multi-stage speak and spell recognition procedure</definiens>
			</definition>
			<definition id="7">
				<sentence>Again , the FST contains two portions , for processing each half of the speak and spell waveform .</sentence>
				<definiendum id="0">FST</definiendum>
				<definiens id="0">contains two portions , for processing each half of the speak and spell waveform</definiens>
			</definition>
			<definition id="8">
				<sentence>Test Set A contains words that are present in ANGIE’s 100K training vocabulary with 416 items of which 387 are unique ; Test Set B contains words that are previously unseen in any of the training data , with 219 items of which 157 are unique .</sentence>
				<definiendum id="0">Test Set A</definiendum>
			</definition>
</paper>

		<paper id="1032">
			<definition id="0">
				<sentence>Each cell in the table represent the joint frequency a40a15a41a43a42a45a44a41a47a46 a7a8a48a50a49a52a51a54a53a28a55a57a56a59a58 a39 a11a61a60a63a62 , where a48a50a49a52a51a54a53 is the maximum number of co-occurrences .</sentence>
				<definiendum id="0">a48a50a49a52a51a54a53</definiendum>
				<definiens id="0">the maximum number of co-occurrences</definiens>
			</definition>
			<definition id="1">
				<sentence>The co-occurrence frequency of two words a21 a9 and a21 a14 , denoted by a189 a40a15a41 a64 a44a41 a66 , is the number of documents where the words co-occur .</sentence>
				<definiendum id="0">co-occurrence frequency</definiendum>
				<definiens id="0">the number of documents where the words co-occur</definiens>
			</definition>
</paper>

		<paper id="1029">
			<definition id="0">
				<sentence>Chart ( a ) shows the percentage of constituents with various values of sc ( number of constituents starting at the position ) for string positions with commas ( square points ) and without ( diamond points ) .</sentence>
				<definiendum id="0">Chart</definiendum>
				<definiens id="0">the percentage of constituents with various values of sc ( number of constituents starting at the position ) for string positions with commas ( square points ) and without ( diamond points )</definiens>
			</definition>
			<definition id="1">
				<sentence>Chart ( b ) shows the corresponding pattern for values of ec ( number of constituents ending ) .</sentence>
				<definiendum id="0">Chart</definiendum>
				<definiens id="0">the corresponding pattern for values of ec ( number of constituents ending )</definiens>
			</definition>
</paper>

		<paper id="4007">
			<definition id="0">
				<sentence>The CROSSMARC architecture consists of the following main processing stages : a7 Collection of domain-specific web pages , involving two sub-stages : domain-specific web crawling ( focused crawling ) for the identification of web sites that are of relevance to the particular domain ( e.g. retailers of electronic products ) .</sentence>
				<definiendum id="0">CROSSMARC architecture</definiendum>
				<definiens id="0">consists of the following main processing stages : a7 Collection of domain-specific web pages , involving two sub-stages : domain-specific web crawling ( focused crawling ) for the identification of web sites that are of relevance to the particular domain ( e.g. retailers of electronic products</definiens>
			</definition>
			<definition id="1">
				<sentence>As shown in Figure 1 , the CROSSMARC multi-agent architecture includes agents for web page collection ( crawling agent , spidering agent ) , information extraction , data storage and data presentation .</sentence>
				<definiendum id="0">CROSSMARC multi-agent architecture</definiendum>
			</definition>
			<definition id="2">
				<sentence>The Crawling Agent defines a schedule for invoking the focused crawler which is Edmonton , May-June 2003 Demonstrations , pp .</sentence>
				<definiendum id="0">Crawling Agent</definiendum>
				<definiens id="0">defines a schedule for invoking the focused crawler which is Edmonton , May-June 2003 Demonstrations , pp</definiens>
			</definition>
			<definition id="3">
				<sentence>The Spidering Agent is an autonomous software component , which retrieves sites to spider from the blackboard and locates interesting web pages within them by traversing their links .</sentence>
				<definiendum id="0">Spidering Agent</definiendum>
			</definition>
			<definition id="4">
				<sentence>The Information Extraction Agent retrieves pages stored on the blackboard by the Spidering Agent , invokes the Information Extraction system ( through IERI ) for each language and writes the extracted facts ( or error messages ) on the blackboard .</sentence>
				<definiendum id="0">Information Extraction Agent</definiendum>
				<definiens id="0">retrieves pages stored on the blackboard by the Spidering Agent , invokes the Information Extraction system ( through IERI ) for each language and writes the extracted facts ( or error messages</definiens>
			</definition>
</paper>

		<paper id="3010">
			<definition id="0">
				<sentence>We adopt the Cooperative Model as the overall frame of sentence interpretation , which incorporates two mainly used language processing approaches : the Finite State Model and the Statistical Learning Model .</sentence>
				<definiendum id="0">Cooperative Model</definiendum>
			</definition>
			<definition id="1">
				<sentence>Topmost-Level Information Frame In the definition , &lt; semantic-object &gt; consists of &lt; i-form &gt; : = ( ^mood &lt; mood &gt; ^sem &lt; semantic-object &gt; ) three types : question , action and proposition .</sentence>
				<definiendum id="0">Topmost-Level Information Frame</definiendum>
				<definiens id="0">&lt; i-form &gt; : = ( ^mood &lt; mood &gt; ^sem &lt; semantic-object &gt; ) three types : question , action and proposition</definiens>
			</definition>
			<definition id="2">
				<sentence>The Cooperative Model ( CM ) combines two commonly-used methods in natural language processing , Finite State Model ( FSM ) and Statistical Learning Model ( SLM ) .</sentence>
				<definiendum id="0">Cooperative Model ( CM )</definiendum>
			</definition>
			<definition id="3">
				<sentence>The Single Model builds only one complex Finite State Machine that incorporates all the sentence patterns and slot-value pairs .</sentence>
				<definiendum id="0">Single Model</definiendum>
				<definiens id="0">builds only one complex Finite State Machine that incorporates all the sentence patterns and slot-value pairs</definiens>
			</definition>
			<definition id="4">
				<sentence>who is driving the car ( &lt; i &gt; ^mood interrogative ^sem &lt; t0 &gt; ) ( &lt; t0 &gt; ^type question ^q-slot agent ^prop &lt; t1 &gt; ) ( &lt; t1 &gt; ^type action ^event drive ^patient car ^time present ) $ phrase1 = what is $ agent doing ; $ phrase2 = [ and|how about ] ( you|me| [ the ] $ vehicle| $ agent ) ; … $ agent = he|she| $ people-name| [ the ] ( $ person_civ | $ person_mil| $ squad ) ; $ vehicle = ambulance | car | humvee | helicopter |medevac ; … In our domain , we can view P ( W ) as a constant and transform Formula 3.1 to Formula 3.2 as follows : P ( M ) *M ) |P ( WmaxargW ) |P ( Mmaxarg mm = ( 3.2 ) We created the training sentences and case frames by running full range of variation on Finite State Machine described in Section 3.1.2 .</sentence>
				<definiendum id="0">P ( M ) *M ) |P ( WmaxargW ) |P</definiendum>
			</definition>
			<definition id="5">
				<sentence>Let C ( m i ) be the number of times the meaning item m i appears the training set , we obtain P ( M ) as follows : ∑ = = n j 1 j i i ) C ( m ) C ( m ) P ( m ( 3.3 ) This can be easily obtained by counting all the meaning items of all the information frames in the training set .</sentence>
				<definiendum id="0">C ( m i )</definiendum>
				<definiens id="0">counting all the meaning items of all the information frames in the training set</definiens>
			</definition>
			<definition id="6">
				<sentence>In the naïve Bayes learning approach , P ( W|M ) stands for the probability of words appearing under given meanings .</sentence>
				<definiendum id="0">P ( W|M )</definiendum>
				<definiens id="0">the probability of words appearing under given meanings</definiens>
			</definition>
</paper>

		<paper id="3002">
			<definition id="0">
				<sentence>Prosody is an important factor in how humans interpret speech .</sentence>
				<definiendum id="0">Prosody</definiendum>
				<definiens id="0">an important factor in how humans interpret speech</definiens>
			</definition>
			<definition id="1">
				<sentence>L x represents the computed log likehood of the allophone label x in the Untied allophone set , and W x represents the frequency of that x. W x , where x is representative of any of the six types of prosodically labeled monophones , is computed by the following formula : W x = num x / TOTAL where num x represents the number of examples of the token x , and TOTAL is the sum of all the different phoneme tokens being taken into account for the computation of WA of some set of phonemes .</sentence>
				<definiendum id="0">W x</definiendum>
				<definiendum id="1">num x</definiendum>
				<definiendum id="2">TOTAL</definiendum>
				<definiens id="0">the frequency of that x. W x , where x is representative of any of the six types of prosodically labeled monophones , is computed by the following formula : W x</definiens>
			</definition>
</paper>

		<paper id="1024">
			<definition id="0">
				<sentence>Therefore , the squeezing operation , which implements a limited form of lexically driven alignment similar to that exploited by MSA algorithms , leads to FSAs that have a larger number of paths and paraphrases .</sentence>
				<definiendum id="0">squeezing operation</definiendum>
				<definiens id="0">implements a limited form of lexically driven alignment similar to that exploited by MSA algorithms , leads to FSAs that have a larger number of paths and paraphrases</definiens>
			</definition>
			<definition id="1">
				<sentence>Out of 3217 lexical paraphrases that are learned by our system , only 493 ( 15.3 % ) are WordNet synonyms , which suggests that paraphrasing is a much richer and looser relation than synonymy .</sentence>
				<definiendum id="0">WordNet synonyms</definiendum>
				<definiens id="0">a much richer and looser relation than synonymy</definiens>
			</definition>
			<definition id="2">
				<sentence>To better calibrate this result , we compare it with the average entropy of 6 corresponding machine translation outputs ( ent ( MTS ) ) , which were also made available by LDC in conjunction with the same corpus .</sentence>
				<definiendum id="0">ent ( MTS ) )</definiendum>
				<definiens id="0">were also made available by LDC in conjunction with the same corpus</definiens>
			</definition>
</paper>

		<paper id="2037">
			<definition id="0">
				<sentence>The general version of the F-measure is F a0 a6a8a7a10a9a12a11 a1a14a13 RP a7 a9 P a11 R where a7 is a parameter signifying the relative importance of recall and precision .</sentence>
				<definiendum id="0">a7</definiendum>
				<definiens id="0">a parameter signifying the relative importance of recall and precision</definiens>
			</definition>
</paper>

		<paper id="4013">
			<definition id="0">
				<sentence>Figure 1 : system architecture First , the system takes the narrative description of the scenario of interest as an English query , and the Translation module ( off-the-shelf IBM King of Translation system ) generates a Japanese query .</sentence>
				<definiendum id="0">Translation module</definiendum>
				<definiens id="0">system architecture First , the system takes the narrative description of the</definiens>
				<definiens id="1">off-the-shelf IBM King of Translation system ) generates a Japanese query</definiens>
			</definition>
			<definition id="1">
				<sentence>Pre-CODIE asks the user to assign each placeholder in the patterns to one of the slots in the template .</sentence>
				<definiendum id="0">Pre-CODIE</definiendum>
				<definiens id="0">asks the user to assign each placeholder in the patterns to one of the slots in the template</definiens>
			</definition>
			<definition id="2">
				<sentence>Finally , the Extraction module performs the pattern matching with slot-assigned patterns to each text in the relevant document set and generates a filled Japanese template , which is translated slot-by-slot into English for the user .</sentence>
				<definiendum id="0">Extraction module</definiendum>
				<definiens id="0">performs the pattern matching with slot-assigned patterns to each text in the relevant document set and generates a filled Japanese template , which is translated slot-by-slot into English for the user</definiens>
			</definition>
</paper>

		<paper id="4002">
			<definition id="0">
				<sentence>ABSTRACT Alias-i ThreatTrackers are an advanced information access application designed around the needs of analysts working through a large daily data feed .</sentence>
				<definiendum id="0">ABSTRACT Alias-i ThreatTrackers</definiendum>
				<definiens id="0">an advanced information access application designed around the needs of analysts working through a large daily data feed</definiens>
			</definition>
			<definition id="1">
				<sentence>Alias-i ThreatTrackers are an advanced information access application designed around the needs of analysts working through a large daily data feed .</sentence>
				<definiendum id="0">Alias-i ThreatTrackers</definiendum>
				<definiens id="0">an advanced information access application designed around the needs of analysts working through a large daily data feed</definiens>
			</definition>
</paper>

		<paper id="1012">
			<definition id="0">
				<sentence>In the following , we will show how the semantic coherence measurement can be applied to estimate how well a given speech recognition hypothesis ( SRH ) fits with respect to the existing knowledge representation , thereby providing a mechanism that increases the robustness and reliability of dialogue systems .</sentence>
				<definiendum id="0">SRH</definiendum>
				<definiens id="0">the semantic coherence measurement can be applied to estimate how well a given speech recognition hypothesis</definiens>
			</definition>
			<definition id="1">
				<sentence>Recognition Hypotheses While a simple one-best hypothesis interface between automatic speech recognition ( ASR ) and natural language understanding ( NLU ) suffices for restricted dialogue systems , more complex systems either operate on n-best lists as ASR ) output or convert ASR word graphs ( Oerder and Ney , 1993 ) into n-best lists , given the distribution of acoustic and language model scores ( Schwartz and Chow , 1990 ; Tran et al. , 1996 ) .</sentence>
				<definiendum id="0">Recognition Hypotheses While</definiendum>
				<definiens id="0">a simple one-best hypothesis interface between automatic speech recognition ( ASR ) and natural language understanding ( NLU ) suffices for restricted dialogue systems</definiens>
			</definition>
			<definition id="2">
				<sentence>In the view of the ontology employed herein , Role is the most general class in the ontology and represents a role that any entity or process can perform .</sentence>
				<definiendum id="0">Role</definiendum>
				<definiens id="0">the most general class in the ontology and represents a role that any entity or process can perform</definiens>
			</definition>
			<definition id="3">
				<sentence>The ensuing distance between two concepts a1 a9 and a1a26a25 is , then , defined as the minimum score derived between a1a10a9 and a1 a25 , i.e. : a0 a34 a1 a9a18 a1a26a25 a39 a1 a38a2a1 a12 a34 a28 a41a22a39 a33 a1 a24 a18a4a3 a18 a4 a4 a4 a18a29a38 The algorithm selects from the set of all paths between two concepts the one with the smallest weight , i.e. the cheapest .</sentence>
				<definiendum id="0">ensuing distance</definiendum>
				<definiendum id="1">a1a26a25</definiendum>
				<definiens id="0">the minimum score derived between a1a10a9 and a1 a25 , i.e. : a0 a34 a1 a9a18 a1a26a25 a39 a1 a38a2a1 a12 a34 a28 a41a22a39 a33 a1 a24 a18a4a3 a18 a4 a4 a4 a18a29a38 The algorithm selects from the set of all paths between two concepts the one with the smallest weight</definiens>
			</definition>
			<definition id="4">
				<sentence>Additionally , we performed an inverse linear transformation of the scores ( which range from 1 to a0 a31a31a6 a8 ) , so that the output produced by ONTOSCORE is a score on the scale from 0 to 1 , where higher scores indicate greater coherence .</sentence>
				<definiendum id="0">ONTOSCORE</definiendum>
				<definiens id="0">a score on the scale from 0 to 1</definiens>
			</definition>
			<definition id="5">
				<sentence>Word graphs : An efficient interface between continuousspeech recognition and language understanding .</sentence>
				<definiendum id="0">Word graphs</definiendum>
			</definition>
			<definition id="6">
				<sentence>The n-best algorithm : an efficient and exact procedure for finding the n most likely sentence hypotheses .</sentence>
				<definiendum id="0">n-best algorithm</definiendum>
			</definition>
</paper>

		<paper id="4006">
			<definition id="0">
				<sentence>QCS has been developed as a modular development framework , and thus facilitates the inclusion of new technologies targeting these three IR tasks .</sentence>
				<definiendum id="0">QCS</definiendum>
				<definiens id="0">a modular development framework</definiens>
			</definition>
			<definition id="1">
				<sentence>QCS is a software tool and development framework for efficient , organized , and streamlined IR from generic document sets .</sentence>
				<definiendum id="0">QCS</definiendum>
				<definiens id="0">a software tool and development framework for efficient , organized</definiens>
			</definition>
			<definition id="2">
				<sentence>11-12 Proceedings of HLT-NAACL 2003 Figure 1 : The interface to the QCS system includes 1 ) an input section for the query and choice of document set , 2 ) a navigation section with links to clustered documents ( Q : top documents retrieved for the query and their scores , C : documents from which summary sentences were drawn and the sentence indices , S : links to multiple or single document summaries ) , and 3 ) an output viewing section , which here contains the default output of multiple document summaries for the topic clusters .</sentence>
				<definiendum id="0">C</definiendum>
				<definiendum id="1">S</definiendum>
				<definiens id="0">top documents retrieved for the query and their scores</definiens>
				<definiens id="1">documents from which summary sentences were drawn and the sentence indices ,</definiens>
			</definition>
</paper>

		<paper id="2030">
			<definition id="0">
				<sentence>CarmelTC is a rule learning text classification approach that bases its predictions both on features extracted from CARMEL’s deep a1 This research was supported by the ONR , Cognitive Science Division under grant number N00014-0-1-0600 and by NSF grant number 9720359 to CIRCLE .</sentence>
				<definiendum id="0">CarmelTC</definiendum>
			</definition>
			<definition id="1">
				<sentence>Thus , CarmelTC uses the same set of training data , but unlike the other approaches , it uses its training data in two separate parts , namely one to train the Rainbow models it uses to produce the Rainbow prediction that is part of the vector representation it builds for each text and one to train the decision trees .</sentence>
				<definiendum id="0">CarmelTC</definiendum>
				<definiens id="0">uses the same set of training data , but unlike the other approaches , it uses its training data in two separate parts</definiens>
			</definition>
</paper>

		<paper id="5006">
</paper>

		<paper id="5007">
</paper>

		<paper id="2003">
			<definition id="0">
				<sentence>Queries submitted to Google were composed of N-grams that occur most frequently in the switchboard training corpus , e.g. “I never thought I would” , “I would think so” , etc .</sentence>
				<definiendum id="0">Queries</definiendum>
				<definiens id="0">submitted to Google were composed of N-grams that occur most frequently in the switchboard training corpus</definiens>
			</definition>
			<definition id="1">
				<sentence>The baseline Switchboard model gave test set perplexity of 96 , which is reduced to 87 with a standard mixture CTS and BN data , reduced further to 83 by adding the web data , and to a best case of 82 with class-dependent interpolation and the added web data .</sentence>
				<definiendum id="0">BN</definiendum>
			</definition>
			<definition id="2">
				<sentence>Recognition experiments show a significant reduction in WER ( 1.3-2.3 % absolute ) due to additional training data and class-based interpolation .</sentence>
				<definiendum id="0">Recognition experiments</definiendum>
				<definiens id="0">% absolute ) due to additional training data and class-based interpolation</definiens>
			</definition>
</paper>

		<paper id="3004">
			<definition id="0">
				<sentence>Word sense discrimination is the process of grouping or clustering together instances of written text that include similar usages of a given target word .</sentence>
				<definiendum id="0">Word sense discrimination</definiendum>
				<definiens id="0">the process of grouping or clustering together instances of written text that include similar usages of a given target word</definiens>
			</definition>
			<definition id="1">
				<sentence>Second order co–occurrences are words that occur with co-occurrences of the target word .</sentence>
				<definiendum id="0">Second order co–occurrences</definiendum>
				<definiens id="0">words that occur with co-occurrences of the target word</definiens>
			</definition>
			<definition id="2">
				<sentence>The standard distribution of the SENSEVAL-2 data consists of 8,611 training instances and 4,328 test instances .</sentence>
				<definiendum id="0">standard distribution of the SENSEVAL-2 data</definiendum>
			</definition>
			<definition id="3">
				<sentence>Precision is defined as the number of instances that are clustered correctly divided by the number of instances clustered , while recall is the number of instances clustered correctly over the total number of instances .</sentence>
				<definiendum id="0">Precision</definiendum>
				<definiendum id="1">recall</definiendum>
				<definiens id="0">the number of instances that are clustered correctly divided by the number of instances clustered</definiens>
				<definiens id="1">the number of instances clustered correctly over the total number of instances</definiens>
			</definition>
</paper>

		<paper id="2018">
</paper>

		<paper id="1031">
			<definition id="0">
				<sentence>Ui is a small cache holding a subset of U at step i. L is the manually labeled seed data .</sentence>
				<definiendum id="0">Ui</definiendum>
				<definiens id="0">a small cache holding a subset of U at step i. L is the manually labeled seed data</definiens>
			</definition>
			<definition id="1">
				<sentence>LiA and LiB are the labeled training examples for A and B at step i. Initialize : L0A←L0B ←L. M0A←Train ( A , L0A ) M0B ←Train ( B , L0B ) Loop : Ui←Add unlabeled sentences from U. MiA and MiB parse the sentences in Ui and assign scores to them according to their scoring functions fA and fB .</sentence>
				<definiendum id="0">LiB</definiendum>
				<definiens id="0">Ui←Add unlabeled sentences from U. MiA and MiB parse the sentences in Ui and assign scores to them according to their scoring functions fA and fB</definiens>
			</definition>
			<definition id="2">
				<sentence>The scoring function attempts to quantify the correctness of the parses produced by each parser .</sentence>
				<definiendum id="0">scoring function</definiendum>
				<definiens id="0">attempts to quantify the correctness of the parses produced by each parser</definiens>
			</definition>
			<definition id="3">
				<sentence>For each method , a sentence ( as labeled by the teacher parser ) is selected if : • above-n ( Sabove-n ) : the score of the teacher’s parse ( using its scoring function ) ≥ n. • difference ( Sdiff-n ) : the score of the teacher’s parse is greater than the score of the student’s parse by some threshold n. • intersection ( Sint-n ) : the score of the teacher’s parse is in the set of the teacher’s n percent highestscoring labeled sentences , and the score of the student’s parse for the same sentence is in the set of the student’s n percent lowest-scoring labeled sentences .</sentence>
				<definiendum id="0">Sabove-n )</definiendum>
				<definiendum id="1">Sdiff-n )</definiendum>
				<definiendum id="2">Sint-n )</definiendum>
				<definiens id="0">the score of the teacher’s parse is in the set of the teacher’s n percent highestscoring labeled sentences , and the score of the student’s parse for the same sentence is in the set of the student’s n percent lowest-scoring labeled sentences</definiens>
			</definition>
			<definition id="4">
				<sentence>The evaluation metric is the Parseval F-score over labeled constituents : F-score = 2×LR×LPLR+LP , where LP and LR are labeled precision and recall rate , respectively .</sentence>
				<definiendum id="0">evaluation metric</definiendum>
				<definiens id="0">the Parseval F-score over labeled constituents : F-score = 2×LR×LPLR+LP , where LP and LR are labeled precision and recall rate , respectively</definiens>
			</definition>
</paper>

		<paper id="2038">
</paper>

		<paper id="2007">
</paper>

		<paper id="1036">
			<definition id="0">
				<sentence>The best class-label hmax ( S ) for S is the node hmax ∈H with the highest total affinity score summed over all the members of S , so hmax is the node which gives the maximum score max h∈H summationdisplay w∈S α ( w , h ) .</sentence>
				<definiendum id="0">S</definiendum>
				<definiens id="0">the node hmax ∈H with the highest total affinity score summed over all the members of S</definiens>
			</definition>
			<definition id="1">
				<sentence>( So each c ∈ C is a possible sense of w. ) Then α ( w , h ) = max c∈C ( w ) braceleftbigg f ( dist ( c , h ) ) if h ∈ H ( c ) −g ( w , c ) if h /∈ H ( c ) , ( 2 ) This implies that the ‘preferred-sense’ of w with respect to the possible subsumer h is the sense closest to h. In practice , our class-labelling algorithm implements this preference by computing the affinity score α ( c , h ) for all c ∈ C ( w ) and only using the best match .</sentence>
				<definiendum id="0">C</definiendum>
				<definiendum id="1">braceleftbigg f</definiendum>
				<definiens id="0">a possible sense of w. ) Then α ( w , h ) = max c∈C ( w )</definiens>
				<definiens id="1">the affinity score α ( c , h ) for all c ∈ C ( w ) and only using the best match</definiens>
			</definition>
</paper>

		<paper id="2024">
			<definition id="0">
				<sentence>We close with discussion of our evaluation , which measures how well the highest probability path in the model can be used to regenerate the sequence of references .</sentence>
				<definiendum id="0">probability path</definiendum>
				<definiens id="0">measures how well the highest</definiens>
			</definition>
			<definition id="1">
				<sentence>Name-external premodifiers are modifiers that do not constitute part of the name , such as “Irish flutist” in “Irish flutist James Galway” .</sentence>
				<definiendum id="0">Name-external premodifiers</definiendum>
				<definiens id="0">modifiers that do not constitute part of the name</definiens>
			</definition>
			<definition id="2">
				<sentence>A coreference chain consists of all the mentions of an entity within a document .</sentence>
				<definiendum id="0">coreference chain</definiendum>
				<definiens id="0">consists of all the mentions of an entity within a document</definiens>
			</definition>
			<definition id="3">
				<sentence>Human writers seek more style , so even statistically highly unlikely realizations can be used by a human writer .</sentence>
				<definiendum id="0">Human writers</definiendum>
				<definiens id="0">seek more style , so even statistically highly unlikely realizations can be used by a human writer</definiens>
			</definition>
</paper>

		<paper id="1033">
			<definition id="0">
				<sentence>In this work , we incorporate appropriate multiword feature templates so that such facts can be learned and used automatically by 1Rather than subscripting all variables with a position index , we use a hopefully clearer relative notation , where t0 denotes the current position and t−n and t+n are left and right context tags , and similarly for words .</sentence>
				<definiendum id="0">t0</definiendum>
				<definiens id="0">the current position and t−n and t+n are left and right context tags , and similarly for words</definiens>
			</definition>
			<definition id="1">
				<sentence>When building probabilistic models for tag sequences , we often decompose the global probability of sequences using a directed graphical model ( e.g. , an HMM ( Brants , 2000 ) or a conditional Markov model ( CMM ) ( Ratnaparkhi , 1996 ) ) .</sentence>
				<definiendum id="0">HMM</definiendum>
				<definiens id="0">When building probabilistic models for tag sequences</definiens>
			</definition>
</paper>

		<paper id="2004">
			<definition id="0">
				<sentence>For the last four years , TREC has included a question answering activity , wherein commercial and academic groups from around the world can evaluate systems designed to retrieve answers to questions , rather than simply documents from queries ( Voorhees , 2002 ) .</sentence>
				<definiendum id="0">TREC</definiendum>
				<definiens id="0">has included a question answering activity , wherein commercial and academic groups from around the world can evaluate systems designed to retrieve answers to questions</definiens>
			</definition>
			<definition id="1">
				<sentence>This is defined as follows : a2a4a3a6a5a8a7a9a11a10a13a12a15a14a16a7a18a17 a19 a20a21 a22a24a23 a9a25a10a26a12a27a14a29a28a31a30a33a32 a9a25a10a26a12a27a14a29a28a31a30a33a32a34a17 # correct answers up to rank a30 a30 where a35 is the total number of answers in the evaluation set .</sentence>
				<definiendum id="0">a35</definiendum>
				<definiens id="0">follows : a2a4a3a6a5a8a7a9a11a10a13a12a15a14a16a7a18a17 a19 a20a21 a22a24a23 a9a25a10a26a12a27a14a29a28a31a30a33a32 a9a25a10a26a12a27a14a29a28a31a30a33a32a34a17 # correct answers up to rank a30 a30 where</definiens>
				<definiens id="1">the total number of answers in the evaluation set</definiens>
			</definition>
			<definition id="2">
				<sentence>For our purposes , each answer consists of the answer string and an identifier for an associated document .</sentence>
				<definiendum id="0">answer</definiendum>
				<definiens id="0">consists of the answer string and an identifier for an associated document</definiens>
			</definition>
</paper>

		<paper id="4012">
			<definition id="0">
				<sentence>Leximancer is a software system for performing conceptual analysis of text data in a largely language independent manner .</sentence>
				<definiendum id="0">Leximancer</definiendum>
				<definiens id="0">a software system for performing conceptual analysis of text data in a largely language independent manner</definiens>
			</definition>
			<definition id="1">
				<sentence>† Machine Learning removes much of the need to revise thesauri as the domain vocabulary evolves .</sentence>
				<definiendum id="0">† Machine Learning</definiendum>
				<definiens id="0">removes much of the need to revise thesauri as the domain vocabulary evolves</definiens>
			</definition>
</paper>

		<paper id="2023">
			<definition id="0">
				<sentence>A pseudoword is a composite comprised of two or more words chosen at random ; the individual occurrences of the original words within a text are replaced by their conflation .</sentence>
				<definiendum id="0">pseudoword</definiendum>
			</definition>
			<definition id="1">
				<sentence>Pseudowords are a useful mechanism for evaluating the impact of word sense ambiguity in many NLP applications .</sentence>
				<definiendum id="0">Pseudowords</definiendum>
			</definition>
			<definition id="2">
				<sentence>Abbreviations are real ambiguous words , but they are also artificial in a sense .</sentence>
				<definiendum id="0">Abbreviations</definiendum>
				<definiens id="0">real ambiguous words , but they are also artificial in a sense</definiens>
			</definition>
</paper>

		<paper id="4010">
			<definition id="0">
				<sentence>Open domain question answering is a complex , multifaceted task , where question type , information availability , user needs , and a combination of text processing techniques ( statistical , NLP , etc. ) must be combined dynamically to determine the optimal answer .</sentence>
				<definiendum id="0">Open domain question answering</definiendum>
				<definiens id="0">information availability , user needs , and a combination of text processing techniques ( statistical , NLP</definiens>
			</definition>
</paper>

		<paper id="2013">
			<definition id="0">
				<sentence>Therefore , HPA is a task to extract phrase pairs that satisfy the above two conditions .</sentence>
				<definiendum id="0">HPA</definiendum>
				<definiens id="0">a task to extract phrase pairs that satisfy the above two conditions</definiens>
			</definition>
</paper>

		<paper id="2029">
			<definition id="0">
				<sentence>The Answer Term ( ATerm ) is the Answer given by the KM corpus .</sentence>
				<definiendum id="0">Answer Term ( ATerm )</definiendum>
			</definition>
			<definition id="1">
				<sentence>The Suffix Tree algorithm obtains the counts of all sub-strings of the sentence .</sentence>
				<definiendum id="0">Suffix Tree algorithm</definiendum>
				<definiens id="0">obtains the counts of all sub-strings of the sentence</definiens>
			</definition>
			<definition id="2">
				<sentence>For these experiments we use the Maximum Entropy formulation ( Della Pietra et al. , 1995 ) and model the distribution ( Ittycheriah , 2001b ) , a12a14a13a16a15a18a17a19a21a20a23a22a25a24a27a26a29a28a31a30a21a12a14a13a16a15a18a17a32a18a20a33a19a21a20a34a22a25a24a35a12a14a13a36a32a21a17a19a21a20a33a22a25a24 ( 1 ) The patterns derived above are used as features to model the distribution a37a39a38a41a40a43a42a44a46a45a48a47a49a45a48a50a52a51 , which predicts the “correctness” of the configuration of the question , a47 , the predicted answer tag , a44 , and the answer candidate , a50 .</sentence>
				<definiendum id="0">Maximum Entropy formulation</definiendum>
				<definiens id="0">predicts the “correctness” of the configuration of the question , a47 , the predicted answer tag , a44 , and the answer candidate</definiens>
			</definition>
			<definition id="3">
				<sentence>The Rank column indicates the number of questions answered by the QA systems with that particular rank .</sentence>
				<definiendum id="0">Rank column</definiendum>
				<definiens id="0">indicates the number of questions answered by the QA systems with that particular rank</definiens>
			</definition>
</paper>

		<paper id="4014">
</paper>

	</volume>
