<?xml version="1.0" encoding="UTF-8"?>
	<volume id="E83">

		<paper id="1032">
			<definition id="0">
				<sentence>The parsing system consists of the two closely cooperating parts : a syntactic analyser and a sem ( nntlc interpreter .</sentence>
				<definiendum id="0">parsing system</definiendum>
				<definiens id="0">consists of the two closely cooperating parts : a syntactic analyser and a sem ( nntlc interpreter</definiens>
			</definition>
			<definition id="1">
				<sentence>The syntactic analyser manages the vocabulary , where infle×ional forms of words are kept .</sentence>
				<definiendum id="0">syntactic analyser</definiendum>
				<definiens id="0">manages the vocabulary , where infle×ional forms of words are kept</definiens>
			</definition>
			<definition id="2">
				<sentence>The semantic interpreter consists of the two main parts : a constant controlling part , working on the basis of a very general pattern adjustment , and compatible experts algorithms , where the knowledge of the system in the field of conversation has been coded .</sentence>
				<definiendum id="0">semantic interpreter</definiendum>
			</definition>
			<definition id="3">
				<sentence>The amplifier represents the intensional part of the data base .</sentence>
				<definiendum id="0">amplifier</definiendum>
			</definition>
			<definition id="4">
				<sentence>Sci. , 1979 Gro~z , B. , Haas , N. , Hendrix , G. , T { obbs , J. , Martin , P. , Moore , R. , Robinson , J. , Rosenschein , S. , DIALOGIC : A Core Natural Language Processing System , Proceedings of the 9th Int .</sentence>
				<definiendum id="0">DIALOGIC</definiendum>
				<definiens id="0">1979 Gro~z , B. , Haas , N. , Hendrix , G. , T { obbs , J. , Martin , P. , Moore , R. , Robinson , J. , Rosenschein , S. ,</definiens>
				<definiens id="1">A Core Natural Language Processing System</definiens>
			</definition>
			<definition id="5">
				<sentence>Berlin , 1978 Kochut , K. , Towards the Elastic ATN Implementation , in L.Bolc /ed/ The Design of Interpreters , Compilers , and Editors for Augmented Transition Networks , Springer-Verlag , Berlin , Heidelberg , New York , Tokyo , 1983 Konrad , E. , Formale Semantic yon Datenbenksprachen , T\ [ ~ , Berlin , 1976 Landsbergen , J. , Adaptation of Montague Grammar to the Requirements of Parsing , reprint from MC Tract 136 , Formal Methods in the Study of Language , J.A.G Groendijk , T.M.V. Jassen , M.B.J. Stokhof /ads/ 1981 Marcus , M.M. , ATheory of Syntactic Recognition for Natural Language , The MIT Press , Cambridge Ma , 1980 Martin , W.A. , Church , K.N. , Patil , R.S. , Preliminary Analysis of a BreadthFirst Parsing Method , MIT Laboratory Comp .</sentence>
				<definiendum id="0">Elastic ATN Implementation</definiendum>
				<definiendum id="1">J.A.G Groendijk , T.M.V. Jassen</definiendum>
				<definiens id="0">1980 Martin , W.A. , Church , K.N. , Patil , R.S. , Preliminary Analysis of a BreadthFirst Parsing Method , MIT Laboratory Comp</definiens>
			</definition>
</paper>

		<paper id="1024">
			<definition id="0">
				<sentence>- '' ' -- '' -ze'*~ p6jdzie do ( 25 ) `` Jan zapewni~ Plotra , kina '' `` ~ __ - # ' ( R 8 ( 26 ) ( 27 ) ( 28 ) `` John promised Peter , that will go to the movies '' ) The pronoun or zero pronoun subject in the main sentence can be coreferential with the non-pronoun subject of the embedded clause which precedes the main sentence ( admissible coreference ) , but can not be Coreferential with the non-pronoun subject of the embedded clause following the main sentence ( obligatory non-coreference ) .</sentence>
				<definiendum id="0">main sentence</definiendum>
				<definiens id="0">pronoun or zero pronoun subject in the main sentence can be coreferential with the non-pronoun subject of the embedded clause which precedes the main sentence ( admissible coreference</definiens>
			</definition>
</paper>

		<paper id="1028">
			<definition id="0">
				<sentence>We-first describe the methods , showing how they make grammatical generation possible .</sentence>
				<definiendum id="0">We-first</definiendum>
				<definiens id="0">describe the methods , showing how they make grammatical generation possible</definiens>
			</definition>
			<definition id="1">
				<sentence>For this purpose , Nigel employs a formal inquiry language in which an inquiry is an expression containing an inquiry operator and a sequence of operands .</sentence>
				<definiendum id="0">Nigel</definiendum>
				<definiens id="0">employs a formal inquiry language in which an inquiry is an expression containing an inquiry operator and a sequence of operands</definiens>
			</definition>
			<definition id="2">
				<sentence>Term sets are collections of lexical items created in a special way which insures that they are appropriate , in denotation , : cmnotation , and information content , for their intended use .</sentence>
				<definiendum id="0">Term sets</definiendum>
				<definiens id="0">collections of lexical items created in a special way which insures that they are appropriate , in denotation , : cmnotation , and information content , for their intended use</definiens>
			</definition>
			<definition id="3">
				<sentence>A Term is a single lexical item selected from a term set .</sentence>
				<definiendum id="0">Term</definiendum>
				<definiens id="0">a single lexical item selected from a term set</definiens>
			</definition>
			<definition id="4">
				<sentence>Obtain a symbol ( WITHUS ) representing the accompaniment knowledge to be expressed &lt; decomposition &gt; complete development of the head term 18 .</sentence>
				<definiendum id="0">WITHUS</definiendum>
			</definition>
			<definition id="5">
				<sentence>Obtain a symbol ( ONWEDNESDAYMORN ) : eprasenting the time constraint to be expressed &lt; decomposition &gt; resume developing the determiner 170 21 .</sentence>
				<definiendum id="0">ONWEDNESDAYMORN</definiendum>
				<definiens id="0">eprasenting the time constraint to be expressed &lt; decomposition &gt; resume developing the determiner 170 21</definiens>
			</definition>
			<definition id="6">
				<sentence>Obtain a symbol ( SELF ) representing the speaker &lt; decomposition &gt; 27 .</sentence>
				<definiendum id="0">Obtain a symbol ( SELF )</definiendum>
				<definiens id="0">representing the speaker &lt; decomposition &gt; 27</definiens>
			</definition>
			<definition id="7">
				<sentence>Obtain a symbol ( PUBLIC ) representing the hearer of the entire nominal group &lt; decomposition &gt; 28 .</sentence>
				<definiendum id="0">PUBLIC</definiendum>
				<definiens id="0">representing the hearer of the entire nominal group &lt; decomposition &gt; 28</definiens>
			</definition>
</paper>

		<paper id="1017">
			<definition id="0">
				<sentence>II LIFTR AND SENDR ACTIONS Two important actions ( indeed it is difficult to write a grammar of any substantial subset of English without them ) defined by Woods ( 1970 ) , namely LIFTR and SENDR , present implementation difficulties in an island parsing interpreter .</sentence>
				<definiendum id="0">II LIFTR AND SENDR ACTIONS Two important actions</definiendum>
				<definiens id="0">difficult to write a grammar of any substantial subset of English without them ) defined by Woods ( 1970 ) , namely LIFTR and SENDR , present implementation difficulties in an island parsing interpreter</definiens>
			</definition>
			<definition id="1">
				<sentence>This list of states ( 'left-states ' ) is the intersection of the states to the left of each action which uses any of the collected registers .</sentence>
				<definiendum id="0">list of states</definiendum>
				<definiens id="0">the intersection of the states to the left of each action which uses any of the collected registers</definiens>
			</definition>
</paper>

		<paper id="1006">
			<definition id="0">
				<sentence>The UTTER ( for `` Unmarked Text Transcription by Expert Rule '' ) system maps English text onto a phoneme string , which is then used as an input to the dlphone speech synthesis system .</sentence>
				<definiendum id="0">UTTER</definiendum>
				<definiens id="0">Unmarked Text Transcription by Expert Rule '' ) system maps English text onto a phoneme string</definiens>
			</definition>
			<definition id="1">
				<sentence>A notable exception is the MIT speech synthesis system fAllen81\ ] which is llngulstlcally-based , but not solely phoneme-based .</sentence>
				<definiendum id="0">notable exception</definiendum>
			</definition>
			<definition id="2">
				<sentence>A transcription rule consists of a decision tree which , when invoked , is traversed on the basis of the feature values of the word or cluster under consideration .</sentence>
				<definiendum id="0">transcription rule</definiendum>
				<definiens id="0">consists of a decision tree which , when invoked , is traversed on the basis of the feature values of the word or cluster under consideration</definiens>
			</definition>
			<definition id="3">
				<sentence>In UTTER 's version of WES , WES uses no more than two Roman alphabet characters to specify a phoneme .</sentence>
				<definiendum id="0">WES</definiendum>
				<definiens id="0">uses no more than two Roman alphabet characters to specify a phoneme</definiens>
			</definition>
			<definition id="4">
				<sentence>The cluster rule returns the proper pronunciation for this particular cluster and adds it ( in terms of a WES phoneme string ) to the output .</sentence>
				<definiendum id="0">cluster rule</definiendum>
				<definiens id="0">returns the proper pronunciation for this particular cluster and adds it ( in terms of a WES phoneme string ) to the output</definiens>
			</definition>
			<definition id="5">
				<sentence>One of the unique features of UTTER is the possibility of creating `` mlnl-lmplementatlons '' of UTTER for use on evermore popular micro computers .</sentence>
				<definiendum id="0">UTTER</definiendum>
				<definiens id="0">the possibility of creating `` mlnl-lmplementatlons '' of</definiens>
			</definition>
</paper>

		<paper id="1019">
			<definition id="0">
				<sentence>I. GLP , A GENERAL LINGUISTIC PROCESSOR GLP ( Goerz 1981 , 1982a , b ) is a multistrategy chart-parser , which has special features for the analysis of fragmentary and defective input data as it is the case with speech .</sentence>
				<definiendum id="0">GENERAL LINGUISTIC PROCESSOR GLP</definiendum>
				<definiens id="0">a multistrategy chart-parser , which has special features for the analysis of fragmentary and defective input data as it is the case with speech</definiens>
			</definition>
			<definition id="1">
				<sentence>GLP receives word hypotheses from the Speech System 's blackboard , which have been produced by the word hypothesizer , inserts appropriate word edges into its chart , extracts their quality scores and attaches derived priority scores to the resp .</sentence>
				<definiendum id="0">GLP</definiendum>
				<definiens id="0">receives word hypotheses from the Speech System 's blackboard , which have been produced by the word hypothesizer , inserts appropriate word edges into its chart , extracts their quality scores and attaches derived priority scores to the resp</definiens>
			</definition>
			<definition id="2">
				<sentence>In this case of a failure GLP constructs an incomplete phrase hypothesis out of the available information including the pattern which characterizes the missing word ( s ) .</sentence>
				<definiendum id="0">GLP</definiendum>
				<definiens id="0">constructs an incomplete phrase hypothesis out of the available information including the pattern which characterizes the missing word ( s )</definiens>
			</definition>
			<definition id="3">
				<sentence>INCREMENTAL PARSING Incremental parsing is a salient feature of GLP .</sentence>
				<definiendum id="0">INCREMENTAL PARSING Incremental parsing</definiendum>
				<definiens id="0">a salient feature of GLP</definiens>
			</definition>
			<definition id="4">
				<sentence>There is no distinct setup phase ; GLP starts to work as soon as it receives the first ( some ten ) word hypotheses with a sufficient quality score .</sentence>
				<definiendum id="0">GLP</definiendum>
				<definiens id="0">starts to work as soon as it receives the first ( some ten ) word hypotheses with a sufficient quality score</definiens>
			</definition>
			<definition id="5">
				<sentence>Although we have not yet analyzed GGP 's parsing complexity in general , some limiting factors for chart parsing are well known by investigations on 112 the context free case by Sheil ( 1976 ) : The number of steps is o~ O ( nD ) , the space requirements of 0 ( n 2 ) independent of the parsing strategy , where n is the length of the input sentence .</sentence>
				<definiendum id="0">n</definiendum>
				<definiens id="0">the length of the input sentence</definiens>
			</definition>
</paper>

		<paper id="1027">
			<definition id="0">
				<sentence>The parameters are variables like PROCESS , GOAL , TEMPOo , and POLARITY for which conceptual values are identified in the generation of every grammatical unit .</sentence>
				<definiendum id="0">POLARITY</definiendum>
				<definiens id="0">variables like PROCESS , GOAL , TEMPOo , and</definiens>
			</definition>
			<definition id="1">
				<sentence>which inserts a function into the structure being built , Expand , which specifies a constituency relation between a function and one or more daughters , Order , which order two grammatical functions , and Conflate , which states that two functions , say SUBJECT and AGENT , describe the same constituent .</sentence>
				<definiendum id="0">Conflate</definiendum>
				<definiens id="0">specifies a constituency relation between a function and one or more daughters , Order , which order two grammatical functions , and</definiens>
			</definition>
			<definition id="2">
				<sentence>In our example , the concept WREN is the paragraph topic and we get an active clause with a ¢onflation of ACTOR and SUBJECT , i.e. , ACTOR/SUBJECT .</sentence>
				<definiendum id="0">WREN</definiendum>
			</definition>
			<definition id="3">
				<sentence>Mood is the interpersonal part of clause grammar that expresses the role the speaker adopts and the role ( s ) he gives to the addressee in terms of speech act .</sentence>
				<definiendum id="0">Mood</definiendum>
				<definiens id="0">the interpersonal part of clause grammar that expresses the role the speaker adopts and the role ( s ) he gives to the addressee in terms of speech act</definiens>
			</definition>
			<definition id="4">
				<sentence>Finite Indicative i Imperative KEY TO GRAPHIC NOTATION Entry condition : `` Finite '' Feature options : `` Indicative '' and `` Indicative '' Figure 1 : The moodsysteminEnglish £59 The feature Indicative is the entry condition to the system of IndicativeMood where the options are Declarativ @ and Interroaativ¢ .</sentence>
				<definiendum id="0">Indicative</definiendum>
				<definiens id="0">the entry condition to the system of IndicativeMood where the options are Declarativ @ and Interroaativ¢</definiens>
			</definition>
</paper>

		<paper id="1029">
			<definition id="0">
				<sentence>... ; LINK=^NODE ; NODE=record NAME : FEATURE ; VALUE : boolean ; FATHER , NEXT_BROTHER : LINK ; FIRST_SON , ALTERNAT : LINK ; end ; FEATURE NETWORK : array ( FEATURE ) of LINK ; Each NODE represents s feature identified by its NAME ; the ALTERNATE pointer allows the connection in a Circular list of mutually exclusive features as in SHRLDU ( Winograd,72 ) .</sentence>
				<definiendum id="0">NODE=record NAME</definiendum>
				<definiendum id="1">VALUE</definiendum>
				<definiendum id="2">ALTERNAT</definiendum>
				<definiendum id="3">NODE</definiendum>
				<definiens id="0">s feature identified by its NAME</definiens>
			</definition>
			<definition id="1">
				<sentence>A THOUGHT is a frame like structure within which new data are interpreted in terms of concepts acquired through previous experience ( Minsky , '75 ) , ( Schank , Abelson , '77 ) .</sentence>
				<definiendum id="0">THOUGHT</definiendum>
				<definiens id="0">a frame like structure within which new data are interpreted in terms of concepts acquired through previous experience</definiens>
			</definition>
			<definition id="2">
				<sentence>The coordinates of an indefinite point P are given in the form : COORD K OF P ( REFERRED_TO A ) =H where K is a group of possible coordinates , H a set of values for these coordinates and A is the THOUGHT of the object to which the reference system used is connected .</sentence>
				<definiendum id="0">K</definiendum>
				<definiens id="0">a group of possible coordinates</definiens>
			</definition>
			<definition id="3">
				<sentence>John gives a blow to Mary ) although two nuclei are present ( d~ &amp; colpo ) , nevertheless the correct interpretation is `` Giovanni colpisce Maria '' ( John hits Mary ) , instead of `` Giovanni trasferisce il possesso dell'oggetto colpo a Maria '' ( John tansfers the ownership of the object 'blow ' to Mary ) ! ! !</sentence>
				<definiendum id="0">John</definiendum>
				<definiens id="0">gives a blow to Mary ) although two nuclei are present ( d~ &amp; colpo )</definiens>
			</definition>
</paper>

		<paper id="1012">
			<definition id="0">
				<sentence>The TFA properties of CA ( also on its multiple occurrence inside a sentence ) should be taken into account also in the translation of CA expressions into a calculus of intensional logic because they are directly correlated to the scope properties thereof .</sentence>
				<definiendum id="0">TFA</definiendum>
				<definiens id="0">properties of CA ( also on its multiple occurrence inside a sentence</definiens>
			</definition>
			<definition id="1">
				<sentence>The grammar of FGD consists of the generative component in the form of a dependency grammar , which generates underlying ( tectogrammatical ) representations ( henceforth , TRs ) of sentences in the form of linear formulas ( which can be rendered also in the shane of rooted and projective dependency trees ) , and of the transductive component , by means of which TRs are translated , step by step , onto the lower levels of FGD .</sentence>
				<definiendum id="0">grammar of FGD</definiendum>
				<definiens id="0">consists of the generative component in the form of a dependency grammar , which generates underlying ( tectogrammatical ) representations ( henceforth , TRs ) of sentences in the form of linear formulas ( which can be rendered also in the shane of rooted and projective dependency trees ) , and of the transductive component , by means of which TRs are translated , step by step , onto the lower levels of FGD</definiens>
			</definition>
			<definition id="2">
				<sentence>75 occurring in the focus of a sentence ( i.e. also in a topicless sentence ) obey the scale of the underlying basic ordering of complementations , or systemic ordering ( i.e. ordering of all types of complementations on their occurrence in a topicless sentence ) .</sentence>
				<definiendum id="0">systemic ordering</definiendum>
			</definition>
			<definition id="3">
				<sentence>C. Exemplification By way of illustration of TRs of sentences in FGD , let us observe the surface sentence 1 and one of its TRs ( namely the one where the Actor is contextually bound ) captured by a ( simplified ) linear notation and indicated as TR l , where act stands for Actor , art for Attitude , loc for Location , b is a superscript indicating contextual boundness , the slash denotes the boundness juncture of a sentence , and the brackets correspond in a certain way to the edges of the dependency tree .</sentence>
				<definiendum id="0">slash</definiendum>
				<definiens id="0">Actor , art for Attitude , loc for Location , b is a superscript indicating contextual boundness , the</definiens>
				<definiens id="1">the boundness juncture of a sentence , and the brackets correspond in a certain way to the edges of the dependency tree</definiens>
			</definition>
			<definition id="4">
				<sentence>TR 7 ( ( Terryb ) act ( proVablyb ) ~tt runb-fut / ( Brooklyn ) lo c ) B. Includin~ Negation into Complementation of A-~tude On the basis of the observed coincidence in the behaviour of negstion and CA in the underlying TFA structure of a sentence , we propose that negation and CA should be collapsed , i.e. that negation should be generated as a case of CA ( by means of CA ) .</sentence>
				<definiendum id="0">Terryb ) act</definiendum>
			</definition>
			<definition id="5">
				<sentence>and which can be divided into several groujs ; the expressions belonging to the single groups are supposed to be differentiated primarily by their mutual ordering , which dictates their scope properties and whose violation yields ungran~naticality ( cf. IV ) .</sentence>
				<definiendum id="0">mutual ordering</definiendum>
			</definition>
</paper>

		<paper id="1010">
			<definition id="0">
				<sentence>Initialization is co~aonly used to i ) raise lexical features to a higher level where they are used for tests ( ex. : subject-verb agreement ) , ii ) pass possible antecedents to lower levels where a gap may be detected in an embedded clause .</sentence>
				<definiendum id="0">Initialization</definiendum>
				<definiens id="0">subject-verb agreement ) , ii</definiens>
			</definition>
			<definition id="1">
				<sentence>D ( DET * ) ) If location is NIL , the current co ( , ~ponent is meant , otherwise the form LOCATE specifies the path leading to the radix to which the new \ [ , air is to be ADDed .</sentence>
				<definiendum id="0">LOCATE</definiendum>
				<definiens id="0">specifies the path leading to the radix to which the new \ [ , air is to be ADDed</definiens>
			</definition>
			<definition id="2">
				<sentence>LOCATE works exactly in the same way , but returns a pointer to a Liven radix .</sentence>
				<definiendum id="0">LOCATE</definiendum>
				<definiens id="0">works exactly in the same way , but returns a pointer to a Liven radix</definiens>
			</definition>
			<definition id="3">
				<sentence>Analysis of ( 17 ) will therefore proceed as follows ; • when the relative pronoun `` quale '' is encountered , the for ; n ( FIND ( HEAD ) ( AND ( Et\ ] ( FINDVAL ( HEAD GEN ) T T ~ : D ) ( FINDVAL ( DET GEN ) T CL T ) ) ( EQ ( FINDVAL ( HEAD N~ ) r T ND ) ( FINDVAL ( bET N~ ) r CL T ) ) ) T T ) no substantial difference exists in comparison with the traditional register access .</sentence>
				<definiendum id="0">FIND ( HEAD )</definiendum>
				<definiens id="0">DET GEN ) T CL T ) ) ( EQ ( FINDVAL ( HEAD N~ ) r T ND ) ( FINDVAL ( bET N~ ) r CL T ) ) ) T T ) no substantial difference exists in comparison with the traditional register access</definiens>
			</definition>
			<definition id="4">
				<sentence>In the discussed complex cases the access to the CGII is a known function of the length of the list , i.e. of the depth of embedding of tlle current level .</sentence>
				<definiendum id="0">CGII</definiendum>
				<definiens id="0">a known function of the length of the list</definiens>
			</definition>
</paper>

		<paper id="1030">
			<definition id="0">
				<sentence>X : the old opera y : to the old opera ; straight ahead , yes .</sentence>
				<definiendum id="0">X</definiendum>
				<definiens id="0">the old opera y : to the old opera</definiens>
			</definition>
</paper>

		<paper id="1014">
			<definition id="0">
				<sentence>Within linguistics , as documented e.g. by Moore ~ Carling ( 1982 ) , the ChomsMyan paradi~ is hy now widely rejected .</sentence>
				<definiendum id="0">Within linguistics</definiendum>
				<definiendum id="1">ChomsMyan paradi~</definiendum>
			</definition>
			<definition id="1">
				<sentence>There is no reason to expect a person at any age to cease to improve his knowledge of his mother-tongue , or to expect different members of a speech-community to formulate identical internalized grammars ; and understanding an individual utterance is a process which a person can 86 execute to any desired degree of thoroughness -we stop trying to improve our understanding of a particular sample of language not because we reach a natural stopping-place but because we judge that the returns from further effort are likely to be less than the resources invested .</sentence>
				<definiendum id="0">individual utterance</definiendum>
				<definiens id="0">no reason to expect a person at any age to cease to improve his knowledge of his mother-tongue , or to expect different members of a speech-community to formulate identical internalized grammars</definiens>
			</definition>
</paper>

		<paper id="1011">
			<definition id="0">
				<sentence>In a famous study the hungarian mathematician Polya , 1945 put forth the thesis that heuristics is one of the most important psychological driving mechanisms behind mathematical or scientific progress .</sentence>
				<definiendum id="0">heuristics</definiendum>
				<definiens id="0">one of the most important psychological driving mechanisms behind mathematical or scientific progress</definiens>
			</definition>
			<definition id="1">
				<sentence>The big balloon labelled `` The Closed Cat '' represents a program that recognizes closed word classes such as prepositions , conjunctions , pronouns , auxiliaries , and so on .</sentence>
				<definiendum id="0">Closed Cat</definiendum>
				<definiens id="0">a program that recognizes closed word classes such as prepositions , conjunctions , pronouns , auxiliaries , and so on</definiens>
			</definition>
			<definition id="2">
				<sentence>68 Of the various programs SMURF , NOMFRAS and IFIGEN are extensively tested ( and , of course , The Closed Cat , which is a simple lexical lookup system ) , and various examples of analyses of these programs will be demonstrated in the next section .</sentence>
				<definiendum id="0">Closed Cat</definiendum>
				<definiens id="0">a simple lexical lookup system</definiens>
			</definition>
			<definition id="3">
				<sentence>Periods used to indicate abbreviations are Just taken away and the abbreviation itself is contracted to one graphic word , if necessary ; thus `` t.ex . ''</sentence>
				<definiendum id="0">Periods</definiendum>
				<definiens id="0">used to indicate abbreviations are Just taken away and the abbreviation itself is contracted to one graphic word</definiens>
			</definition>
			<definition id="4">
				<sentence>The Closed Cat ( CC ) has the important role to mark words belonging to some well defined closed categories of words .</sentence>
				<definiendum id="0">Closed Cat ( CC )</definiendum>
			</definition>
			<definition id="5">
				<sentence>It makes a rather intricate morphological analysis word-by-word In running text ( i.e. SMURF analyzes each word in itself , disregarding the context it appears in ) .</sentence>
				<definiendum id="0">i.e. SMURF</definiendum>
				<definiens id="0">analyzes each word in itself , disregarding the context it appears in )</definiens>
			</definition>
			<definition id="6">
				<sentence>IFIGEN ( Infinitive Generator ) is another rather straightforward Finite State Pattern Matcher ( developed by Gunnel K~llgren ) .</sentence>
				<definiendum id="0">IFIGEN ( Infinitive Generator )</definiendum>
			</definition>
			<definition id="7">
				<sentence>Somewhat simplified it can be represented by the following diagram ( remember the conventions for upper and lower case ) : IFIGEN parsing diagram ( simplified ) : Aux n &gt; Adv ) o ATT -- A # ( C ) CV - ( A/I ) T # I where '~ux '' and `` Adv '' are categories recognized by The Closed Cat ( tagged `` g '' and `` a '' , respectively ) , and `` nXn '' are structures recognized by either NOMFRAS or , in the case of personal pronouns , by CC ( It should he worth mentioning that the class of auxiliaries in Swedish is more open than the corresponding word class in English ; besides the `` ordinary '' VARA ( `` to be '' ) , HA ( `` to have '' ) and the modalsy , there is a fuzzy class of seml-auxillarles llke BORJA ( `` begin '' ) and others ; IFIGEN makes use of about 20 of these in the present version . )</sentence>
				<definiendum id="0">ATT</definiendum>
				<definiendum id="1">Closed Cat</definiendum>
				<definiens id="0">the following diagram ( remember the conventions for upper and lower case ) : IFIGEN parsing diagram ( simplified ) : Aux n &gt; Adv ) o</definiens>
			</definition>
			<definition id="8">
				<sentence>ATT is an infinitive marker ( equivalent to `` to '' ) in quite exactly 50 % of its occurences ( the other 50 % it is a subordinating conjunction ) .</sentence>
				<definiendum id="0">ATT</definiendum>
				<definiens id="0">an infinitive marker</definiens>
			</definition>
</paper>

		<paper id="1013">
			<definition id="0">
				<sentence>VI CSDC RULES Constraints for determining the grammaticalness of constructions involving coordinating conjunctions have been suggested by linguists , among which are ( Ross 67 ) 's CSC ( Coordinate Structure Constraint ) , ( Schachter 77 ) 's CCC ( Coordinate Constituent Constraint ) , ( Williams 78 ) 's Across-theBoard ( ATB ) Convention , and ( Gazdar @ l ) 's nontransformational treatment of coordinate structures using the conception of 'derived categories ' .</sentence>
				<definiendum id="0">VI CSDC RULES Constraints for</definiendum>
				<definiens id="0">determining the grammaticalness of constructions involving coordinating conjunctions have been suggested by linguists , among which are ( Ross 67 ) 's CSC ( Coordinate Structure Constraint ) , ( Schachter 77 ) 's CCC ( Coordinate Constituent Constraint</definiens>
			</definition>
			<definition id="1">
				<sentence>( NLg~ER SINGLE ) ( QUANTIFIER SG ) ( DETERMINER ( ( DETI ONE ) ) ) ( AGENT AND ( ( MAN ... ) ( NUMBER SINGLE ) ( QUANTIFIER SG ) ( DETERMINER ( ( DETIONE ) ) ) ( ATTRIBUTE ( ( PREP ( PREP WITH ) ) ( ( CHILD ... ) ( NUMBER ... ) ( ( woMAN ... ) while Ex7 ( and the more general case of ExS ) should be analysed roughly as : ( AGENT ( tMAN ... ) ( NUMBER SINGLE ) ( QU~ITIFIER SG ) ( DETERMINER ( ( DETI ONE ) ) ) ( ATTRIBUTE ( ( PREP ( PREP WITH ) ) AND ( ( CHILD ... ) ( NUMBER ... ) ... ) ( ( wo~ ... ) NPs whose head noun semantic nrimitives are the same should be preferred when deciding the scope of the two conjuncts coordinated by `` and '' .</sentence>
				<definiendum id="0">QUANTIFIER SG ) ( DETERMINER</definiendum>
				<definiendum id="1">ATTRIBUTE</definiendum>
				<definiens id="0">AGENT AND ( ( MAN ... ) ( NUMBER SINGLE ) ( QUANTIFIER SG ) ( DETERMINER ( ( DETIONE ) ) ) ( ATTRIBUTE ( ( PREP ( PREP WITH ) ) ( ( CHILD ... )</definiens>
				<definiens id="1">the same should be preferred when deciding the scope of the two conjuncts coordinated by `` and ''</definiens>
			</definition>
			<definition id="2">
				<sentence>( ATTRIBUTE ( ( PREP ( PREP WITH ) ) ( ( TELESCOPE ... ) ) ) SUBJ ) ( ( TELESCOPE ... ) NP-IN-NMODS ) ) After the excution of the arc ( ( PUSH NP ) ( NPSTART ) ) , RIGHT-PHRASE has been found .</sentence>
				<definiendum id="0">ATTRIBUTE ( ( PREP ( PREP WITH ) ) (</definiendum>
			</definition>
			<definition id="3">
				<sentence>For the third case ( LEFT-WORD is a transitive verb and the object slot is empty , Exs lh and 15 ) , right clause will be built first , with or without copying the subject from LEFT-PART depending on whether a subject can be found in RIGHT-PART .</sentence>
				<definiendum id="0">LEFT-WORD</definiendum>
				<definiens id="0">a transitive verb and the object slot is empty , Exs lh</definiens>
			</definition>
</paper>

		<paper id="1026">
			<definition id="0">
				<sentence>The general end of any RM is to make sense of the situation to which it applies .</sentence>
				<definiendum id="0">RM</definiendum>
			</definition>
			<definition id="1">
				<sentence>Third , there is the processing unit of the RH which carries out the operations/processes determined by the cask formulator .</sentence>
				<definiendum id="0">RH</definiendum>
				<definiens id="0">carries out the operations/processes determined by the cask formulator</definiens>
			</definition>
			<definition id="2">
				<sentence>TARLUS is a system whose main task is to interpret stories of a certain kind , in particular by recognizing so-called hyperevents implicitly described in text , ( e.g. , by recognizing that certain actions of a person described in text can be qualified as robbery or stealing ) .</sentence>
				<definiendum id="0">TARLUS</definiendum>
				<definiens id="0">a system whose main task is to interpret stories of a certain kind</definiens>
			</definition>
</paper>

		<paper id="1002">
</paper>

		<paper id="1005">
			<definition id="0">
				<sentence>The program , or Phonological Processor ( hence FP ) maps into prosodic structures the phonological rules of Italian .</sentence>
				<definiendum id="0">Phonological Processor</definiendum>
				<definiens id="0">( hence FP ) maps into prosodic structures the phonological rules of Italian</definiens>
			</definition>
			<definition id="1">
				<sentence>The FP divides all words into two main classes : lexical words or open class words , and functional words or closed class words , the latter ones are dealt with by a table lookup and destressed .</sentence>
				<definiendum id="0">FP</definiendum>
				<definiens id="0">divides all words into two main classes : lexical words or open class words</definiens>
			</definition>
			<definition id="2">
				<sentence>These conditions are as follows : CONDITIONS A. determined by intrinsic characteristics of the functioning of memory and of the articulatory apparatus which impose restrictions on the length of an IG length is defined in terms of the number of constituents , i.e. PWs , to be packed into an IG ; this number could vary with the speaking rate and other performance parameters which are strictly related to temporal and spatial limitations of the language faculty ; CONOITIONS B. determined by the need to transmit into an IG chunks of conceptual and semantic information concluded in itself and related to the rules of the internal grammar .</sentence>
				<definiendum id="0">CONOITIONS B.</definiendum>
				<definiens id="0">CONDITIONS A. determined by intrinsic characteristics of the functioning of memory and of the articulatory apparatus which impose restrictions on the length of an IG length</definiens>
				<definiens id="1">determined by the need to transmit into an IG chunks of conceptual and semantic information concluded in itself</definiens>
			</definition>
			<definition id="3">
				<sentence>DELNONTE R. ( 1982 ) , An Automatic Text-to-Speech Prosodic Translator for the Synthesis of Italian , Fortschritte der Akustik , FASE-DAGA , Goettingen , 1021o1026 .</sentence>
				<definiendum id="0">Automatic Text-to-Speech Prosodic Translator</definiendum>
			</definition>
			<definition id="4">
				<sentence>KAPLAN R. , RRESNAN J. ( 1981 ) , Lexical Functional Grammar : a FormaJ System for Grammatical Representation , in J.Bresnen ( ed ) , The Rental Representation of GraMaticai Relations , HIT Press , Cambridge Mass .</sentence>
				<definiendum id="0">Representation</definiendum>
				<definiens id="0">1981 ) , Lexical Functional Grammar : a FormaJ System for Grammatical</definiens>
			</definition>
</paper>

		<paper id="1015">
			<definition id="0">
				<sentence>Q. : PYLON R. : PYLON is a part of tWINI : b1ILL , V &amp; NE and GFINERATOR .</sentence>
				<definiendum id="0">PYLON</definiendum>
				<definiens id="0">a part of tWINI : b1ILL , V &amp; NE and GFINERATOR</definiens>
			</definition>
			<definition id="1">
				<sentence>~he addition of facet information , as we have pointed out , gives rise to more informative definitions , in that the user can see how a term is differentiated from other terms in the immediate environment , for example : Q. : FLANGE R. : FLANGE is a component of FLANGED FITIENG , and is related to STEF~ FIANGE by material , to DETACHABLE FLANGE by property , to CONNECTING FLANGE by method of connection , to BOSSED FLANGE by shape and to FLAT FACED FLANGE by flange face configuration Q. : STEEL FLANGE R. : ST~L FLANGE is a type of FLANGE distinguished by material .</sentence>
				<definiendum id="0">FLANGE</definiendum>
				<definiendum id="1">ST~L FLANGE</definiendum>
				<definiens id="0">a component of FLANGED FITIENG , and is related to STEF~ FIANGE by material , to DETACHABLE FLANGE by property</definiens>
				<definiens id="1">a type of FLANGE distinguished by material</definiens>
			</definition>
			<definition id="2">
				<sentence>The usefulness of more refined terminological relationships is shown by the following examples : KEY is a part of KEYBOARD WI~k-~ .</sentence>
				<definiendum id="0">KEY</definiendum>
			</definition>
			<definition id="3">
				<sentence>T. is a part of CAR RADIO is a part of CAR F~GIN\ ] &lt; is a part of CAR where the standard 'part of ' relationship proves inadequate .</sentence>
				<definiendum id="0">T.</definiendum>
				<definiens id="0">a part of CAR RADIO is a part of CAR F~GIN\ ] &lt; is a part of CAR where the standard 'part of ' relationship proves inadequate</definiens>
			</definition>
			<definition id="4">
				<sentence>Therefore , we introduce subdivisions of the partitive relationskip , which generate the following outputs : K~ , \ [ is an atomic part of KEYBOARD ( i.e. the latter consists wholly of the former ) .</sentence>
				<definiendum id="0">partitive relationskip</definiendum>
				<definiendum id="1">KEYBOARD</definiendum>
				<definiens id="0">generate the following outputs : K~ , \ [ is an atomic part of</definiens>
			</definition>
			<definition id="5">
				<sentence>Further , the content file record , which contains Information on character strings , could be expanded to hold the types of information found in traditional term bank records , e.g. grammatical class , context , author , date of entry , sources , etc .</sentence>
				<definiendum id="0">content file record</definiendum>
				<definiens id="0">contains Information on character strings</definiens>
			</definition>
</paper>

		<paper id="1031">
			<definition id="0">
				<sentence>HAM-ANS is a large German natural language dialog system of both considerable depth and breadth which presently provides access to three different application classes , namely an expert system ( hotel reservation situation ) , a database system ( fishery data ) and a scene analysis system ( traffic scene ) .</sentence>
				<definiendum id="0">HAM-ANS</definiendum>
			</definition>
			<definition id="1">
				<sentence>Thls geometrical scene description consists of a combination of automatically generated outputs oF the scene analysis processes ( insofar as this is presently possible ) and a number of manual augmentations .</sentence>
				<definiendum id="0">Thls geometrical scene description</definiendum>
				<definiendum id="1">insofar</definiendum>
				<definiens id="0">consists of a combination of automatically generated outputs oF the scene analysis processes</definiens>
			</definition>
			<definition id="2">
				<sentence>The logic-oriented semantic representation languages SURF and DEEP are the central representation formalisms used in HAM-ANS .</sentence>
				<definiendum id="0">DEEP</definiendum>
				<definiens id="0">the central representation formalisms used in HAM-ANS</definiens>
			</definition>
			<definition id="3">
				<sentence>SURF is the target language of the analysis components and source language for the generation components and thus as close as possible to NL utterances , whereas DEEP is better suited for the evaluation of utterances on the basis of the system 's domain-specific knowledge sources .</sentence>
				<definiendum id="0">SURF</definiendum>
				<definiens id="0">better suited for the evaluation of utterances on the basis of the system 's domain-specific knowledge sources</definiens>
			</definition>
			<definition id="4">
				<sentence>A special quantifier E-ACT denotes an existential quantification of events .</sentence>
				<definiendum id="0">special quantifier E-ACT</definiendum>
				<definiens id="0">an existential quantification of events</definiens>
			</definition>
			<definition id="5">
				<sentence>The Flavor system \ [ 2\ ] \ [ 13\ ] is an implementation of the language features that support object-oriented programming .</sentence>
				<definiendum id="0">Flavor system</definiendum>
				<definiens id="0">an implementation of the language features that support object-oriented programming</definiens>
			</definition>
			<definition id="6">
				<sentence>A flavor represents a generic object and an instance an individual realization of a ge , ~eric object .</sentence>
				<definiendum id="0">flavor</definiendum>
				<definiens id="0">a generic object and an instance an individual realization of a ge , ~eric object</definiens>
			</definition>
			<definition id="7">
				<sentence>DIRECTION CIIAI ; GE is a special method of the flavor TURN .</sentence>
				<definiendum id="0">GE</definiendum>
				<definiens id="0">a special method of the flavor TURN</definiens>
			</definition>
			<definition id="8">
				<sentence>FIND A SOURCE identifies the first entry of the agen~'~ trajectory in the interval of consideration and checks which of the objects of the static background these coordinates belong to .</sentence>
				<definiendum id="0">SOURCE</definiendum>
				<definiens id="0">identifies the first entry of the agen~'~ trajectory in the interval of consideration and checks which of the objects of the static background these coordinates belong to</definiens>
			</definition>
			<definition id="9">
				<sentence>The syntactlc analysis consists of two different strategies , both of which use the same ATN-definitions of syntactic categories , e.g. for noun phrases and prepositional phrases .</sentence>
				<definiendum id="0">syntactlc analysis</definiendum>
				<definiens id="0">consists of two different strategies , both of which use the same ATN-definitions of syntactic categories</definiens>
			</definition>
			<definition id="10">
				<sentence>oti toraull vith the quantifier ( q-qt R-ACT ) ; ; Object TfllICKI his not loved during the entire scene ; : Evaluation of a formula with the qu|ntititr Iq-qt : R-ACT ) : ; Tilting nf • partially inltantietld till frame If-e : Poll-Jigs : Irl-d '' agent \ [ at-a : AGENT GG_BY TRUCKi| objective ' source : locative : goal : time : path : instrument ) Iod : It'l : tense ( If'e : TENSE GO BY PEBF ) voice : elf-is VOICE GO_BY ACTIVE ) J ) ; ; Interval of consideration determined from tense land adverb ) ( 1 641 : ; Thi object becomes visible betleln till points SG lad GS ; ; The interval et consideration lOdified in icourdlnol vith object till il : IGG 64 ) ; ; Change determined betroth till points SG and 57 3 ; Completed ceil frill If-IS rOll-lilt : l+l-d : Iglflt : Lit-IS AGENT GO_BY tngcxi ) objeetivet SOurce : locative : ( If-iS LOCATZVE G0_BY nON DAOTONGGTGEET ) goll : tint : path : instrument : ) nod : If-it annie : Let-s : TENSE GO_BY PERFI voice : ( if-is VOICE GO BY ACTIVE ) ) ) : ; +Veritication of event win polsibil ; ; Olsult Ot the Evaluation If-d : It-q : Ifor : ( q-s : ITRUCNS ) ) el4 ) T ) ) f-d : It-q : ( for : Lq-qt : E-ACT ) zt+l tit-as ACT xlS GO BY ) ) It-Is roll-list : lrl-d : agent : ( it-l : AGENT IT3 ZI4I objective : source : locative : lit=a : LOCATIVE 113 *ON HbRTUNGSTREET ) goal : time : path : instruments ) lode if-Is tenll : ( it-is TERSE It3 PERF ) voice : ( at+at VOICE It3 ACTIVE } ) ) ) ) la InVlrll norli|illtion : TFllltOFling into SURF rlpresentltion ; ; EUHF rlprlllntlbio+ ot elliot lit+d : EVENT It-IS ( q-qk : S-ACT ) Llsabdl : xt3 Let-t : ACT xl3 GO_DYlll { d-e : role-list : ( rl-I : event : Ilelbdl : ItS ( it-l : AGENT 113 ( t-l~ ( B-a : ITGUCESII T ) II obJeetivl : lOUrCl : lo©Itiva : ( lllbd| : It3 lit-as LOCATIVE all tON HARTUNGSTREET ) ) goal : tines pith : inetrulent : ) ned : Id-a : tinier ( llabdl : st3 \ [ if+is TENSE st3 PERFI\ ] voi~e : ( llubds : =13 Lit-is VOICE at3 ACTIVE ) ) ) ) ) ** Ellipsis gineration ; ; Elliptitted SURF representation of answer ( rl-e~ Igent : ( 1elba1 : aS lit-as AGENT tO { t-l : ( q-s : ( TRUCR2 ) \ ] T ) ) ) objective : lOUrce : locative : Ll|abde : sO ( It-It LOCATIVE eO *ON UARTUNBSTREETI ) goal : till : pith : inlt ?</sentence>
				<definiendum id="0">oti toraull vith the quantifier</definiendum>
				<definiens id="0">the entire scene ; : Evaluation of a formula with the qu|ntititr Iq-qt : R-ACT ) : ; Tilting nf • partially inltantietld till frame If-e : Poll-Jigs : Irl-d '' agent</definiens>
			</definition>
</paper>

		<paper id="1023">
			<definition id="0">
				<sentence>A detailed description of DART and ELISA is a work in preparation .</sentence>
				<definiendum id="0">ELISA</definiendum>
				<definiens id="0">a work in preparation</definiens>
			</definition>
			<definition id="1">
				<sentence>II ELISA : A RATHER INTELLIGENT TUTOR OF FOREIGN LANGUAGE WORDS A. The Purpose of ELISA ELISA teaches a student to disambiguate conjunctions in a foreign language by means of a dialogue .</sentence>
				<definiendum id="0">II ELISA</definiendum>
				<definiens id="0">A RATHER INTELLIGENT TUTOR OF FOREIGN LANGUAGE WORDS A. The Purpose of ELISA ELISA teaches a student to disambiguate conjunctions in a foreign language by means of a dialogue</definiens>
			</definition>
			<definition id="2">
				<sentence>Since `` non appena '' and `` d~s que '' are both unambiguously bound to ( SI ) , the answer S2 does not show that the student recognizes the context ( SI ) ; ( s ) he might instead associate directly the conjunction `` non appena '' with `` d~s que '' without being aware of the conceptual meaning of the context ; b. the last hypothesis has to be considered confirmed by the behaviour of the student shown by SI and $ 3 : ( s ) he binds `` come '' to `` comme '' irrespective of the contexts~ probably because of the interference between the two conjunctions .</sentence>
				<definiendum id="0">SI</definiendum>
				<definiens id="0">d~s que '' without being aware of the conceptual meaning of the context ; b. the last hypothesis has to be considered confirmed by the behaviour of the student shown by</definiens>
			</definition>
</paper>

		<paper id="1020">
			<definition id="0">
				<sentence>ATNs are po E erful formal tools able to analyze type-O lan guages ; in the theory of formal languages alan guage is defined as a set of strings ; for this reason ATNs must recognize Uordered sequences '' of symbols ( or words ) .</sentence>
				<definiendum id="0">ATNs</definiendum>
				<definiens id="0">po E erful formal tools able to analyze type-O lan guages ; in the theory of formal languages alan guage is defined as a set of strings ; for this reason ATNs must recognize Uordered sequences '' of symbols ( or words )</definiens>
			</definition>
			<definition id="1">
				<sentence>HEAD TENSE MODE FORM GENDER NUMBER PERSON AUX MOOD DEPEND TYPE LINKUP ROLES TRANSL Fig.3 SOSTENERE Present Past Indicative Active Any Plural 3 No Declarative Relative REL REF2 CASE CONN4 RELPRON SUBJ AUX / / / H / / / CASE CONN5 NIL OBJ CASE CONN7 NIL PP ( select &amp; pass ( ( ~course eq Fisica ) ( ~date eq 18/1/83 ) ) ) Actual contents of the node REL2 ( SOSTENE RE ) of fig .</sentence>
				<definiendum id="0">HEAD TENSE MODE FORM GENDER NUMBER PERSON AUX MOOD DEPEND TYPE LINKUP ROLES TRANSL Fig.3 SOSTENERE Present Past Indicative Active</definiendum>
				<definiens id="0">~date eq 18/1/83 ) ) ) Actual contents of the node REL2 ( SOSTENE RE ) of fig</definiens>
			</definition>
			<definition id="2">
				<sentence>However , for the sake of clarity it is im portant to say that % student is the unary relation whose unique attribute is ~student and which co~ tains the names of all the students whose data are stored in the data base ; &amp; sex is a binary relation ( attributes Sperson and ~sex ) containing the sex of all the persons known to the system ; finally &amp; pass is the relation ( attributes ~student , ~course , ~grade , ~date ) where are stored the re suits of the tests passed by the students .</sentence>
				<definiendum id="0">sex</definiendum>
				<definiendum id="1">pass</definiendum>
				<definiens id="0">the unary relation whose unique attribute is ~student and which co~ tains the names of all the students whose data are stored in the data base</definiens>
			</definition>
			<definition id="3">
				<sentence>An action consists in the construction of new nodes , in their filling up with particular val ues ( normally depending on the input word ) and in their attachment to the already existing tree .</sentence>
				<definiendum id="0">action</definiendum>
				<definiens id="0">consists in the construction of new nodes , in their filling up with particular val ues ( normally depending on the input word ) and in their attachment to the already existing tree</definiens>
			</definition>
			<definition id="4">
				<sentence>NEXT CAT : is a lookahead function which returns TRUE if the category of the next word in the input string is CAT .</sentence>
				<definiendum id="0">NEXT CAT</definiendum>
			</definition>
			<definition id="5">
				<sentence>FILL X VAL : a node of type X ( located as in CRLINK ) is filled with the value VAL ( ~ denotes the normalized form of the current word ) .</sentence>
				<definiendum id="0">FILL X VAL</definiendum>
				<definiens id="0">the normalized form of the current word )</definiens>
			</definition>
			<definition id="6">
				<sentence>When an ADJ node is attached to a REF node , the system has to verify that the ad jective is an acceptable linguistic description of the noun stored in the REF node .</sentence>
				<definiendum id="0">jective</definiendum>
				<definiens id="0">an acceptable linguistic description of the noun stored in the REF node</definiens>
			</definition>
			<definition id="7">
				<sentence>Date C.J. : An Introduction to Database Systems ( 3rd edition ) , Addison Wesley ( 1981 ) .</sentence>
				<definiendum id="0">Date C.J.</definiendum>
				<definiens id="0">An Introduction to Database Systems ( 3rd edition )</definiens>
			</definition>
			<definition id="8">
				<sentence>Woods W.A. : An Experimental Parsing System for Transition Network Grammars .</sentence>
				<definiendum id="0">Woods W.A.</definiendum>
			</definition>
</paper>

		<paper id="1025">
			<definition id="0">
				<sentence>The system consists of ( 1 ) a language processing component ( ULG ) , ( 2 ) grammars for German , English , and Spanish , ( 3 ) a set of 75 interpretation routines , ( 4 ) a code generator for SQL , and ( 5 ) the data base management system System R. USL runs under VM/CMS in a virtual machine of 7 MBytes , working set size is 1.8 MBytes .</sentence>
				<definiendum id="0">system</definiendum>
			</definition>
			<definition id="1">
				<sentence>ULG , interpretation routines , and code generator comprise approximately 40,000 lines of PL/I code .</sentence>
				<definiendum id="0">ULG</definiendum>
				<definiens id="0">interpretation routines , and code generator comprise approximately 40,000 lines of PL/I code</definiens>
			</definition>
			<definition id="2">
				<sentence>ULG consists of a parser , a semantic executer , the grammar META , and META interpretation routines .</sentence>
				<definiendum id="0">ULG</definiendum>
				<definiens id="0">consists of a parser , a semantic executer , the grammar META , and META interpretation routines</definiens>
			</definition>
			<definition id="3">
				<sentence>ULG accepts general phrase structure grammars written in a modified Backus-Naur-Form .</sentence>
				<definiendum id="0">ULG</definiendum>
				<definiens id="0">accepts general phrase structure grammars written in a modified Backus-Naur-Form</definiens>
			</definition>
			<definition id="4">
				<sentence>An atomic condition has the form P ( tl ... .. tn ) or tl=c where ti is a discourse referent and c a proper name and P an n-place predicate .</sentence>
				<definiendum id="0">ti</definiendum>
				<definiens id="0">a discourse referent and c a proper name and P an n-place predicate</definiens>
			</definition>
			<definition id="5">
				<sentence>b ) Given an implicational DRS of the form K1 IMP K2 occurring in a DRS K , a relation of relative accessibility between DRSs is defined as follows : K1 is accessible from K2 and all K ' accessible from K1 are also accessible from K2 .</sentence>
				<definiendum id="0">DRS K</definiendum>
				<definiendum id="1">K1</definiendum>
				<definiens id="0">an implicational DRS of the form K1 IMP K2 occurring in a</definiens>
				<definiens id="1">accessible from K2 and all K ' accessible from K1 are also accessible from K2</definiens>
			</definition>
			<definition id="6">
				<sentence>Let K ( s ) be the DRS representing the current sentence s and let p be a pronoun occurring in s for which an appropriate discourse referent has to be found .</sentence>
				<definiendum id="0">K ( s</definiendum>
			</definition>
</paper>

		<paper id="1018">
			<definition id="0">
				<sentence>WEDNESDAY is an interpreter for a language describing the lexicon and operating on natural language sentences .</sentence>
				<definiendum id="0">WEDNESDAY</definiendum>
				<definiens id="0">an interpreter for a language describing the lexicon and operating on natural language sentences</definiens>
			</definition>
			<definition id="1">
				<sentence>One of the typical features of Italian is a lower degree of word order rigidity in sentences .</sentence>
				<definiendum id="0">Italian</definiendum>
				<definiens id="0">a lower degree of word order rigidity in sentences</definiens>
			</definition>
			<definition id="2">
				<sentence>Although Subject-Verb-Object is a statistically prevalent construction , all variations in word order can occur inside a component , and they may depend on the particular words which are used .</sentence>
				<definiendum id="0">Subject-Verb-Object</definiendum>
				<definiens id="0">a statistically prevalent construction , all variations in word order can occur inside a component , and they may depend on the particular words which are used</definiens>
			</definition>
			<definition id="3">
				<sentence>WEDNESDAY , the system presented here , is an interpreter for a language describing the lexicon and operating on natural language sentences .</sentence>
				<definiendum id="0">WEDNESDAY</definiendum>
				<definiens id="0">an interpreter for a language describing the lexicon and operating on natural language sentences</definiens>
			</definition>
			<definition id="4">
				<sentence>In substance it can be seen as a propositional format in Polish Prefixed notation : ( Nx ( P N I ... N i ... Nm ) ) where N x is an instantation of predicate P , nodes N I ... N m are the variables , arguments of that predicate .</sentence>
				<definiendum id="0">N x</definiendum>
				<definiens id="0">an instantation of predicate P , nodes N I ... N m are the variables , arguments of that predicate</definiens>
			</definition>
			<definition id="5">
				<sentence>MERGE is an impulse to merge an explicitly indicated node with another node that must satisfy certain constraints , under certain conditions .</sentence>
				<definiendum id="0">MERGE</definiendum>
				<definiens id="0">an impulse to merge an explicitly indicated node with another node</definiens>
			</definition>
			<definition id="6">
				<sentence>These can be : SETFLAG , which raises a specified flag ( that can subsequently alter the result of a test ) , REMFLAG , which removes a flag , and SUBSUBJ , which specifies the instantiation node and the ordinal number of the relative argument identifying a node .</sentence>
				<definiendum id="0">REMFLAG</definiendum>
				<definiendum id="1">SUBSUBJ</definiendum>
				<definiens id="0">raises a specified flag ( that can subsequently alter the result of a test ) ,</definiens>
			</definition>
			<definition id="7">
				<sentence>MARK is an impulse to stick a markvalue 108 onto a node .</sentence>
				<definiendum id="0">MARK</definiendum>
				<definiens id="0">an impulse to stick a markvalue 108 onto a node</definiens>
			</definition>
</paper>

		<paper id="1022">
</paper>

		<paper id="1016">
			<definition id="0">
				<sentence>ABSTRACT This paper describes the structure and evaluation of the syntactico-semantic lexicon ( SSL ) of the German Natural Language Understanding System VIE-LANG \ [ 3\ ] .</sentence>
				<definiendum id="0">SSL</definiendum>
			</definition>
			<definition id="1">
				<sentence>The second layer of the net contains the dynamic knowledge which consists of individualized concepts .</sentence>
				<definiendum id="0">dynamic knowledge</definiendum>
				<definiens id="0">consists of individualized concepts</definiens>
			</definition>
			<definition id="2">
				<sentence>The IMS which is created during this part of the process forms the input for the step two processor which will finally produce the output sentence \ [ 6\ ] .</sentence>
				<definiendum id="0">IMS</definiendum>
			</definition>
			<definition id="3">
				<sentence>A pair describes how a word ( phrase ) of the sentence is represented within the semantic net .</sentence>
				<definiendum id="0">pair</definiendum>
				<definiens id="0">describes how a word ( phrase ) of the sentence is represented within the semantic net</definiens>
			</definition>
			<definition id="4">
				<sentence>i. Parsin @ The parser needs to map surface-constituents onto elements of the semantic net .</sentence>
				<definiendum id="0">parser</definiendum>
				<definiens id="0">needs to map surface-constituents onto elements of the semantic net</definiens>
			</definition>
			<definition id="5">
				<sentence>( BEKOMMEN ( i \ [ ( AND ( CASE ACC ) ( RESTR OWNABLE-OBJECT ) ) ( ( IND OBJTRANS ) ( VAL + OBJECT * ) ) \ ] \ [ ( T ( CASE NOM ) ) -- -- &gt; ( ( VAL + RECIPIENT * ) ) \ ] \ [ ( AND ( PP VON ) ( RESTR PERSON INSTITUTION ) ) ( ( VAL + SOURCE * ) ) \ ] ) ) Fig .</sentence>
				<definiendum id="0">BEKOMMEN</definiendum>
				<definiendum id="1">CASE ACC )</definiendum>
			</definition>
			<definition id="6">
				<sentence>The DN selects a verb-sense according to the attributes of the root node .</sentence>
				<definiendum id="0">DN</definiendum>
				<definiens id="0">selects a verb-sense according to the attributes of the root node</definiens>
			</definition>
			<definition id="7">
				<sentence>This will result in a null action for the generator , as an instance of OBJTRANS ( OBJTRANS-II ) is already known as current root node and it has been put as first element onto the stack for the current individual .</sentence>
				<definiendum id="0">null action for the generator</definiendum>
				<definiens id="0">current root node and it has been put as first element onto the stack for the current individual</definiens>
			</definition>
			<definition id="8">
				<sentence>As for the last test-action-pair , Pp causes a prepositional phrase , 'yon der Frau ' , to be created .</sentence>
				<definiendum id="0">Pp</definiendum>
				<definiens id="0">causes a prepositional phrase , 'yon der Frau ' , to be created</definiens>
			</definition>
			<definition id="9">
				<sentence>The generator has to process net structures , so it begins by evaluating RSs .</sentence>
				<definiendum id="0">generator</definiendum>
				<definiens id="0">process net structures , so it begins by evaluating RSs</definiens>
			</definition>
</paper>

		<paper id="1009">
</paper>

		<paper id="1004">
			<definition id="0">
				<sentence>Point ( iv ) can be systematically tested by means of the so-called dialogue test ( cf. Haji~ov~ and Panevov~ , in press ) : e.g. in John came the direction ( rather than the~ point or the time point ) has been deleted , so that the speaker necessarily knows where John came and can answer such a question ( though s/he may not know from where of when John came ) .</sentence>
				<definiendum id="0">iv )</definiendum>
				<definiens id="0">the so-called dialogue test ( cf. Haji~ov~ and Panevov~ , in press ) : e.g. in John came the direction ( rather than the~ point or the time point ) has been deleted , so that the speaker necessarily knows where John came and can answer such a question</definiens>
			</definition>
			<definition id="1">
				<sentence>A label of a node consists of a lexical meaning and a combination of ~rammatemes from different categories ( the set of relevant categories is determined by the word class of the lexical meaning ) .</sentence>
				<definiendum id="0">label of a node</definiendum>
			</definition>
			<definition id="2">
				<sentence>A label of an edge consists in a functor , which is interpreted either as a Dependency relation , or as one o~ the relations of Coordination ( corresponding to the meanings of and , or~ but , etc. ) or of Apposition .</sentence>
				<definiendum id="0">label of an edge</definiendum>
			</definition>
			<definition id="3">
				<sentence>A simplified underlying representation of Operational amplifier is a versatile device with applications spanning signal conditioning and special s~stems design ; Gemer is the functor of general relation ( the kind of dependency often found between a noun and its modifications ) , the other symbols are self-explanatory ; the grammatemes are written only if they are marked , i.e~ Present , Indicative , Singular , Specifying are understood as determined by default .</sentence>
				<definiendum id="0">Gemer</definiendum>
				<definiens id="0">a versatile device with applications spanning signal conditioning and special s~stems design ;</definiens>
			</definition>
			<definition id="4">
				<sentence>The kind of dependency relation are specified in two respects , which are relevant for their combinatorial properties : ( a ) they are classed either as ( inner ) participants , namely Actor ( i.e. Actor/Bearer , or Tesni~re ° % premier actant rather than Fillmore s Agentive ) , Objective , Addressee , Origin and Effect , or as ( free ) modifications , i.e. Instrument , Manner , Locative , several kinds of Directional and Temporal modifications , Cause , Condition ( real and irreal ) , etc. ; ( b ) they are either obliatory , or optional .</sentence>
				<definiendum id="0">Actor</definiendum>
				<definiens id="0">free ) modifications , i.e. Instrument , Manner , Locative , several kinds of Directional and Temporal modifications , Cause , Condition ( real and irreal ) , etc.</definiens>
			</definition>
			<definition id="5">
				<sentence>g. ) into ( V-act ( DActor ( Nlnstr ) ... ) , v where V-act is a verb of action , D is a dummy ( for the general actor ) and N is an inanimate noun ; thus The negative feedba6k can servo the volta6e to zero is changed into One can serve the voltage to zero by ... . A rather specific rule connected with a single verb is that changing ( use ( Spatien t ) ( XAccomp ) ... . into ( use ( X~ ) ( Y ... . ) ... ) , e.g .</sentence>
				<definiendum id="0">V-act</definiendum>
				<definiendum id="1">D</definiendum>
				<definiendum id="2">N</definiendum>
				<definiens id="0">a verb of action</definiens>
				<definiens id="1">a dummy ( for the general actor</definiens>
				<definiens id="2">an inanimate noun</definiens>
			</definition>
</paper>

		<paper id="1003">
			<definition id="0">
				<sentence>The iterative aspect is one of sentential aspect and denotes plural occurrence of an event or an action .</sentence>
				<definiendum id="0">iterative aspect</definiendum>
				<definiens id="0">one of sentential aspect and denotes plural occurrence of an event or an action</definiens>
			</definition>
			<definition id="1">
				<sentence>Inch is a boundary giving operator and gives the initial border to any proposition , but the meaning of Inch ( @ i ) is different according to @ iWith ~\ [ , which does n't imply any boundarz Inch functions to give the initial boundary .</sentence>
				<definiendum id="0">Inch</definiendum>
				<definiens id="0">a boundary giving operator and gives the initial border to any proposition</definiens>
			</definition>
			<definition id="2">
				<sentence>Inch ( ~3 ) gives automatical\ ] y the iteration of the event and the initial boundary becoms the initial boundary of the prolonged event .</sentence>
				<definiendum id="0">Inch ( ~3 )</definiendum>
				<definiens id="0">gives automatical\ ] y the iteration of the event and the initial boundary becoms the initial boundary of the prolonged event</definiens>
			</definition>
			<definition id="3">
				<sentence>In order to differentiate this I92 from I91 , we use the symbolXfor an implicative iteration : I ( ~92 ) .</sentence>
				<definiendum id="0">symbolXfor</definiendum>
				<definiens id="0">an implicative iteration : I ( ~92 )</definiens>
			</definition>
</paper>

		<paper id="1008">
			<definition id="0">
				<sentence>Consequently , a morphological analyzer is an important component of a system aiming at `` understanding '' Finnish .</sentence>
				<definiendum id="0">morphological analyzer</definiendum>
				<definiens id="0">an important component of a system aiming at `` understanding '' Finnish</definiens>
			</definition>
			<definition id="1">
				<sentence>Consonant gradation takes place , for instance , in the word 'tak~ i 4 ' ( =coat ) as follows : ( 3 ) tak + i + ~ + ssa + ni ( =in my coat ) tak -- k + e + i + hi + ni ( =into my coats ) III DESCRIPTION OF THE HEURISTIC METHOD A. Control Structure Our heuristic method uses the hypothesis-andtest paradigm used in many AI systems .</sentence>
				<definiendum id="0">Consonant gradation takes place</definiendum>
				<definiens id="0">=in my coat ) tak -- k + e + i + hi + ni ( =into my coats ) III DESCRIPTION OF THE HEURISTIC METHOD A. Control Structure Our heuristic method uses the hypothesis-andtest paradigm used in many AI systems</definiens>
			</definition>
			<definition id="2">
				<sentence>Productions , which carry local heuristic knowledge , generate or confirm hypotheses between two levels as shown in the figure .</sentence>
				<definiendum id="0">Productions</definiendum>
				<definiens id="0">carry local heuristic knowledge , generate or confirm hypotheses between two levels as shown in the figure</definiens>
			</definition>
			<definition id="3">
				<sentence>C. Stem Productions Stem productions are caseand numberspecific heuristic rules ( genus- , moodand tensespeslflc for verbs ) postulating nominative singular nouns as basic forms ( Ist infinitive for verbs ) which , under the postulated morphotactic interpretation , might have resulted in the observed stem form on the morphotactic level .</sentence>
				<definiendum id="0">numberspecific heuristic rules</definiendum>
				<definiens id="0">genus- , moodand tensespeslflc for verbs ) postulating nominative singular nouns as basic forms ( Ist infinitive for verbs ) which , under the postulated morphotactic interpretation</definiens>
			</definition>
			<definition id="4">
				<sentence>This knowledge we dressed into productions of the following form : ( 6 ) condition -- &gt; POSTULATE ( cut , string , shift ) If the condition of a production is satisfied , a basic-form hypothesis is postulated on the basic word-form level by cutting the recognized stem , adding a new string ( separated by a blank to indicate the boundary between the root and the stem ending ) , and possibly shifting the blank .</sentence>
				<definiendum id="0">POSTULATE</definiendum>
			</definition>
</paper>

		<paper id="1001">
			<definition id="0">
				<sentence>ABSTRACT CONTROL STRUCTURES AND THE SEMANTICS OF QUANTIFIERS Steven Cushing Computer ~ Science Department : `` St. Anselm College Manchester , New Hampshire , 03102 USA ABSTRACT Intuitively , a Ruantifier is any word or phrase that expresses a meaning that answers one of the questions `` How many ? ''</sentence>
				<definiendum id="0">Ruantifier</definiendum>
				<definiens id="0">any word or phrase that expresses a meaning that answers one of the questions</definiens>
			</definition>
			<definition id="1">
				<sentence>I MODELS AND SATISFACTION Given a semantic representation language L containing predicate constants and individual constants and variables , an interpretation ~ of L is a triple &lt; D , R , ( ~ } &gt; , where D is a set of individuals , the domain of ~ ; R is~ function , the interpretation function of I , that assigns members of D to individual constant~in L and sets of lists of members of D to predicates in L , the length of a list being equal to the number of arguments in the predicate to which it corresponds ; and ( f } is a set of functions , the assignment functions~f ~ , that assign members of D to variables in L. A model M for L is a pair &lt; D , R &gt; , an interpretation of L without its assignment functions .</sentence>
				<definiendum id="0">D</definiendum>
				<definiens id="0">a triple &lt; D</definiens>
				<definiens id="1">a set of individuals , the domain of ~ ; R is~ function , the interpretation function of I , that assigns members of D to individual constant~in L and sets of lists of members of D to predicates in L , the length of a list being equal to the number of arguments in the predicate to which it corresponds</definiens>
			</definition>
			<definition id="2">
				<sentence>Since `` a factual situation comprises a set of individuals bearing certain relations to each other , '' such `` a situation can be represented by a relational structure &lt; ~'~i ... .. ~i ... . &gt; ' where D is the set of individuals in question and ~I ... .. ~i ' '' '' certain relations on D , '' ( van Fraassen , I~71 , 107 ) , i.e. , in this context , sets of lists of members of D. Models thus serve intuitively to relate formulas in L to the factual situations they are intended to describe by mapping their constants into D and &lt; -- RI ... .. ~i ... . &gt; '' The `` variable '' character o~ the symbols assigned values by an f relative to those interpreted by R is reflected in the fact that a set of ~s corresponds to a fixed &lt; D , R &gt; to comprise an interpretation .</sentence>
				<definiendum id="0">D</definiendum>
				<definiens id="0">the set of individuals in question</definiens>
			</definition>
			<definition id="3">
				<sentence>( 9 ) ( Rx_ ) ( ~ ; A ) ( IO ) ( R x ) ~B c A ) For a formal proof of this important fact , see Cushing ( 1976 ; 1982a ) .</sentence>
				<definiendum id="0">Rx_</definiendum>
				<definiens id="0">) ( ~ ; A ) ( IO ) ( R x ) ~B c A ) For a</definiens>
			</definition>
			<definition id="4">
				<sentence>Given ( vi ) , we can characterize the meaning expressed by ( 4 ) explicitly as a function , ( Ii ) , that generates a truth value ~ from M , f , x , B , and A : ( II ) u = V ( M , f , x , B , A ) If we let o* be the function that maps a predicate in i to its extension relative to M , f , and ~ -i.e. , the subset of D whose members make that p -- re -- dicate satisfied b~ M given ~ when assigned individually as values to ~ -- , then we can replace the English clause on the rlght-hand side of the `` iff '' in ( vi ) with the equivalent set-theoretlc formulation ( 12 ) , and thus ( vi ) itself with the equivalent statement ( 13 ) : ( 12 ) D fl o* ( M , f , x , B ) c o* ( M , f , x , A ) ( 13 ) ~ ~ ( v ~ ) ( ~ ; A_ ) \ [ ~\ ] iff D fl o* ( M , f , x , B ) = o* ( M , f , x , A ) In other words , ( 4 ) is true if and only if the intersection of D with the extension of B is wholly contained as a subset in the extension of A. D is omitted from the right-hand side of the `` ~ `` in ( 12 ) for more general reasons that need not concern us here .</sentence>
				<definiendum id="0">Ii</definiendum>
				<definiens id="0">the subset of D whose members make that p -- re -- dicate satisfied</definiens>
			</definition>
			<definition id="5">
				<sentence>An analysis of B , for example , can be obtained by simply replacing p~ in Figure 2 with an appropriate 0B , viz. , the one in ( 17 ) , in which Comp is a function that take the complement of a set -i.e. , those members of D that are not in the set -- , and Pair is a function that duplicates its input : This relation unravels to exactly the correct truth condition and satisfaction statement for relativized 3 , Just as ( 16 ) does for ~ .</sentence>
				<definiendum id="0">Pair</definiendum>
				<definiens id="0">a function that take the complement of a set -i.e. , those members of D that are not in the set -- , and</definiens>
			</definition>
			<definition id="6">
				<sentence>In the general case , we also have to include a third subfunction , R O , which generates a numerical parameter , as indicated in Figure 4 .</sentence>
				<definiendum id="0">R O</definiendum>
				<definiens id="0">generates a numerical parameter</definiens>
			</definition>
			<definition id="7">
				<sentence>( y x ) 2 Since F 4 and F 5 generate different values , in general , for z for the same values of x and y , they interact , in turn , to define a `` choice '' function -call it F 3 -with its alternatives determined , in this case , by the value of b , as indicated in ( 24 ) : ( 24 ) z = F3 ( x , y , b ) ( b = False ) / ~ ( b = True ) / \ z = F5 ( x , y ) z = F4 ( x , y ) Continuing in this way , we can extract two further functions : F 2 , which consists of the composition of ( 18vi ) and F3 ; and FO , which consists of the composition of F 2 , FI , and ( 181 ) and defines the overall function effected by the program , as shown in Figure 7 .</sentence>
				<definiendum id="0">FO</definiendum>
				<definiens id="0">consists of the composition of F 2 , FI , and ( 181 ) and defines the overall function effected by the program</definiens>
			</definition>
			<definition id="8">
				<sentence>Structure ( ii ) represents a non-parallel , sequential process in which two functions operate dependently , one generating a value for an output variable that is used by the other as an input variable .</sentence>
				<definiendum id="0">Structure ( ii )</definiendum>
				<definiens id="0">a non-parallel , sequential process in which two functions operate dependently , one generating a value for an output variable that is used by the other as an input variable</definiens>
			</definition>
</paper>

		<paper id="1007">
			<definition id="0">
				<sentence>S : C'est un animal qui poss~de des ~cailles ( It is an animal which has got scales ) 44 I. Teaching utterances These assertions , characterized by the presence of a non-action verb , permit both the complete construction of the semantic network and of the concept relation rules specifying the possible entities that can serve as arguments for a predicate .</sentence>
				<definiendum id="0">S</definiendum>
				<definiens id="0">characterized by the presence of a non-action verb , permit both the complete construction of the semantic network and of the concept relation rules specifying the possible entities that can serve as arguments for a predicate</definiens>
			</definition>
			<definition id="1">
				<sentence>S : Le caf~ est un liquide noir ( Coffee is a black liquid ) U : Tu bois du caf~ ( You are drinking coffee ) S : C'est impossible ( It is impossible ) U : Un ordinateur peut boire un liquide ( A computer is able to drink a liquid ) S : C'est bon ... j'ai compris ( That 's right ... I have understood ) U : Tu bois du caf~ ( You are drinking coffee ) S : D'accord ( Okay ) U : Qui bois du caf~ ?</sentence>
				<definiendum id="0">Coffee</definiendum>
				<definiendum id="1">j'ai compris</definiendum>
				<definiens id="0">a black liquid</definiens>
			</definition>
			<definition id="2">
				<sentence>U : ~i ( Yes it is ) S : O.K. Relative~ clauses are not represented in the canonical form of the utterance in which they appear , but they are only used to determine which concept is in question .</sentence>
				<definiendum id="0">U</definiendum>
				<definiens id="0">not represented in the canonical form of the utterance in which they appear , but they are only used to determine which concept is in question</definiens>
			</definition>
			<definition id="3">
				<sentence>User : Oui ( yes ) Machine : D'accord ( all right ) Deep structure 45 ( ASK ( ( YOU ) ( ( TAKE ( ( 1 ) ( PYRAMID ( SMALL ) ) ) ) ) &amp; ( ( PUT ( ( 1 ) ( ( ON ( ( PYRAMID ( SMALL ) ) ( CUBE ( GROS 3 ) ) formal command : ( ( HOLD PYR2 ) ( ON PYR2 CUB3 ) ) User : Qu'ai je fait ( What did I do ) Deep structure : ( DO ( ( YOU ) ? )</sentence>
				<definiendum id="0">ASK</definiendum>
				<definiendum id="1">PYRAMID</definiendum>
				<definiendum id="2">PYRAMID</definiendum>
				<definiens id="0">D'accord ( all right</definiens>
			</definition>
			<definition id="4">
				<sentence>S : Oui , c'est possible ( Yes , that is possible ) U : Tu es une souris ( You are a mouse ) S : Je pensais que j'~tais un ordinateur ( I thought that I was a computer ) U : C'est faux ( That 's false ) S : O.K. U : Qui es-tu ?</sentence>
				<definiendum id="0">C'est faux</definiendum>
				<definiens id="0">Tu es une souris ( You are a mouse ) S : Je pensais que j'~tais un ordinateur</definiens>
			</definition>
			<definition id="5">
				<sentence>A module of the synthesis process takes any French text and determines the elements necessary for the diphone synthesis , with the help of a dictionnary containing pronunciation rules and their exceptions ( Prouts , 1979 ) .</sentence>
				<definiendum id="0">module of the synthesis process</definiendum>
				<definiens id="0">takes any French text and determines the elements necessary for the diphone synthesis , with the help of a dictionnary containing pronunciation rules and their exceptions</definiens>
			</definition>
</paper>

		<paper id="1021">
			<definition id="0">
				<sentence>ABSTRACT Thls article deals with the interpretation of conceptual operations underlying the communicative use of natural language ( NL ) within the Structured Inheritance Network ( Sl-Nets ) paradigm .</sentence>
				<definiendum id="0">ABSTRACT Thls article</definiendum>
				<definiendum id="1">Inheritance Network</definiendum>
				<definiens id="0">deals with the interpretation of conceptual operations underlying the communicative use of natural language ( NL ) within the Structured</definiens>
			</definition>
			<definition id="1">
				<sentence>We are now designing and Implementing an experimental language , KL-Co nc , which should cover the conceptual level and ~lhlch uses KL-itaglaa as one of its internal co , mpo .</sentence>
				<definiendum id="0">KL-Co nc</definiendum>
				<definiens id="0">should cover the conceptual level and ~lhlch uses KL-itaglaa as one of its internal co</definiens>
			</definition>
			<definition id="2">
				<sentence>The adjective is one of the more conlplex phenomena of NL which can not be reduced to the notion of predicate since it triggers a set of reasoning processes , that is to say , the manipulation of parts of knowledge .</sentence>
				<definiendum id="0">adjective</definiendum>
				<definiens id="0">to say , the manipulation of parts of knowledge</definiens>
			</definition>
			<definition id="3">
				<sentence>The | ; H contains the traces of contextual relationships between objects , as well as operations triggered on and by objects ; it can also contain other symbolic systems .</sentence>
				<definiendum id="0">H</definiendum>
				<definiens id="0">contains the traces of contextual relationships between objects , as well as operations triggered on and by objects ; it can also contain other symbolic systems</definiens>
			</definition>
			<definition id="4">
				<sentence>Finally , KL-Conc suggests a different way of exploiting spreading activation mechanisms ( Quilllan , 1968 ) using several symbollc systems 127 organized by the ~II instead of considering the , n as algorithmic devices internal to SI-Nets ( Woods , 198~ : VII P , EFERENCES Asirelll P. , C. Lami , C. l : ontangero , G. Pacini , H. Woods W. A. , `` Abstract Algorithms and Arcbltectures '' , in Woods W. A. ( ed . )</sentence>
				<definiendum id="0">KL-Conc</definiendum>
				<definiens id="0">suggests a different way of exploiting spreading activation mechanisms</definiens>
			</definition>
</paper>

	</volume>
